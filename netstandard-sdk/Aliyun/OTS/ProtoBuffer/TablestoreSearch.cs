// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.alicloud.openservices.tablestore.core.protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class TablestoreSearch {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery, global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery, global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery, global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery, global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor, global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery, global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Query, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Collapse, global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter, global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort, global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSort, global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sorter, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sort, global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery, global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet, global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest, global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse, global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema, global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting, global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SyncStat, global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static TablestoreSearch() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chd0YWJsZXN0b3JlX3NlYXJjaC5wcm90bxIyY29tLmFsaWNsb3VkLm9wZW5z", 
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wioQEKCk1hdGNoUXVl", 
            "cnkSEgoKZmllbGRfbmFtZRgBIAEoCRIMCgR0ZXh0GAIgASgJEhwKFG1pbmlt", 
            "dW1fc2hvdWxkX21hdGNoGAMgASgFElMKCG9wZXJhdG9yGAQgASgOMkEuY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuUXVlcnlPcGVyYXRvciI0ChBNYXRjaFBocmFzZVF1ZXJ5EhIKCmZpZWxk", 
            "X25hbWUYASABKAkSDAoEdGV4dBgCIAEoCSIPCg1NYXRjaEFsbFF1ZXJ5Ii0K", 
            "CVRlcm1RdWVyeRISCgpmaWVsZF9uYW1lGAEgASgJEgwKBHRlcm0YAiABKAwi", 
            "LwoKVGVybXNRdWVyeRISCgpmaWVsZF9uYW1lGAEgASgJEg0KBXRlcm1zGAIg", 
            "AygMInQKClJhbmdlUXVlcnkSEgoKZmllbGRfbmFtZRgBIAEoCRISCgpyYW5n", 
            "ZV9mcm9tGAIgASgMEhAKCHJhbmdlX3RvGAMgASgMEhUKDWluY2x1ZGVfbG93", 
            "ZXIYBCABKAgSFQoNaW5jbHVkZV91cHBlchgFIAEoCCIxCgtQcmVmaXhRdWVy", 
            "eRISCgpmaWVsZF9uYW1lGAEgASgJEg4KBnByZWZpeBgCIAEoCSIyCg1XaWxk", 
            "Y2FyZFF1ZXJ5EhIKCmZpZWxkX25hbWUYASABKAkSDQoFdmFsdWUYAiABKAki", 
            "9QIKCUJvb2xRdWVyeRJPCgxtdXN0X3F1ZXJpZXMYASADKAsyOS5jb20uYWxp", 
            "Y2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5R", 
            "dWVyeRJTChBtdXN0X25vdF9xdWVyaWVzGAIgAygLMjkuY29tLmFsaWNsb3Vk", 
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUXVlcnkS", 
            "UQoOZmlsdGVyX3F1ZXJpZXMYAyADKAsyOS5jb20uYWxpY2xvdWQub3BlbnNl", 
            "cnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5RdWVyeRJRCg5zaG91", 
            "bGRfcXVlcmllcxgEIAMoCzI5LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlF1ZXJ5EhwKFG1pbmltdW1fc2hv", 
            "dWxkX21hdGNoGAUgASgFIlwKD0NvbnN0U2NvcmVRdWVyeRJJCgZmaWx0ZXIY", 
            "ASABKAsyOS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5RdWVyeSImChBGaWVsZFZhbHVlRmFjdG9yEhIKCmZp", 
            "ZWxkX25hbWUYASABKAkiwAEKEkZ1bmN0aW9uU2NvcmVRdWVyeRJICgVxdWVy", 
            "eRgBIAEoCzI5LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9y", 
            "ZS5jb3JlLnByb3RvY29sLlF1ZXJ5EmAKEmZpZWxkX3ZhbHVlX2ZhY3RvchgC", 
            "IAEoCzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5j", 
            "b3JlLnByb3RvY29sLkZpZWxkVmFsdWVGYWN0b3IiuAEKC05lc3RlZFF1ZXJ5", 
            "EgwKBHBhdGgYASABKAkSSAoFcXVlcnkYAiABKAsyOS5jb20uYWxpY2xvdWQu", 
            "b3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5RdWVyeRJR", 
            "CgpzY29yZV9tb2RlGAMgASgOMj0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNl", 
            "cy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU2NvcmVNb2RlIlEKE0dlb0Jv", 
            "dW5kaW5nQm94UXVlcnkSEgoKZmllbGRfbmFtZRgBIAEoCRIQCgh0b3BfbGVm", 
            "dBgCIAEoCRIUCgxib3R0b21fcmlnaHQYAyABKAkiTgoQR2VvRGlzdGFuY2VR", 
            "dWVyeRISCgpmaWVsZF9uYW1lGAEgASgJEhQKDGNlbnRlcl9wb2ludBgCIAEo", 
            "CRIQCghkaXN0YW5jZRgDIAEoASI1Cg9HZW9Qb2x5Z29uUXVlcnkSEgoKZmll", 
            "bGRfbmFtZRgBIAEoCRIOCgZwb2ludHMYAiADKAkiYwoFUXVlcnkSSwoEdHlw", 
            "ZRgBIAEoDjI9LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9y", 
            "ZS5jb3JlLnByb3RvY29sLlF1ZXJ5VHlwZRINCgVxdWVyeRgCIAEoDCIeCghD", 
            "b2xsYXBzZRISCgpmaWVsZF9uYW1lGAEgASgJImcKDE5lc3RlZEZpbHRlchIM", 
            "CgRwYXRoGAEgASgJEkkKBmZpbHRlchgCIAEoCzI5LmNvbS5hbGljbG91ZC5v", 
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlF1ZXJ5IlkK", 
            "CVNjb3JlU29ydBJMCgVvcmRlchgBIAEoDjI9LmNvbS5hbGljbG91ZC5vcGVu", 
            "c2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlNvcnRPcmRlciJe", 
            "Cg5QcmltYXJ5S2V5U29ydBJMCgVvcmRlchgBIAEoDjI9LmNvbS5hbGljbG91", 
            "ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlNvcnRP", 
            "cmRlciKSAgoJRmllbGRTb3J0EhIKCmZpZWxkX25hbWUYASABKAkSTAoFb3Jk", 
            "ZXIYAiABKA4yPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3Rv", 
            "cmUuY29yZS5wcm90b2NvbC5Tb3J0T3JkZXISSgoEbW9kZRgDIAEoDjI8LmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLlNvcnRNb2RlElcKDW5lc3RlZF9maWx0ZXIYBCABKAsyQC5jb20uYWxp", 
            "Y2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5O", 
            "ZXN0ZWRGaWx0ZXIihAMKD0dlb0Rpc3RhbmNlU29ydBISCgpmaWVsZF9uYW1l", 
            "GAEgASgJEg4KBnBvaW50cxgCIAMoCRJMCgVvcmRlchgDIAEoDjI9LmNvbS5h", 
            "bGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29s", 
            "LlNvcnRPcmRlchJKCgRtb2RlGAQgASgOMjwuY29tLmFsaWNsb3VkLm9wZW5z", 
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU29ydE1vZGUSWgoN", 
            "ZGlzdGFuY2VfdHlwZRgFIAEoDjJDLmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkdlb0Rpc3RhbmNlVHlwZRJX", 
            "Cg1uZXN0ZWRfZmlsdGVyGAYgASgLMkAuY29tLmFsaWNsb3VkLm9wZW5zZXJ2", 
            "aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuTmVzdGVkRmlsdGVyIuMC", 
            "CgZTb3J0ZXISUQoKZmllbGRfc29ydBgBIAEoCzI9LmNvbS5hbGljbG91ZC5v", 
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkZpZWxkU29y", 
            "dBJeChFnZW9fZGlzdGFuY2Vfc29ydBgCIAEoCzJDLmNvbS5hbGljbG91ZC5v", 
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkdlb0Rpc3Rh", 
            "bmNlU29ydBJRCgpzY29yZV9zb3J0GAMgASgLMj0uY29tLmFsaWNsb3VkLm9w", 
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU2NvcmVTb3J0", 
            "ElMKB3BrX3NvcnQYBCABKAsyQi5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2Vz", 
            "LnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5QcmltYXJ5S2V5U29ydCJSCgRT", 
            "b3J0EkoKBnNvcnRlchgBIAMoCzI6LmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlNvcnRlciK0AgoLU2VhcmNo", 
            "UXVlcnkSDgoGb2Zmc2V0GAEgASgFEg0KBWxpbWl0GAIgASgFEkgKBXF1ZXJ5", 
            "GAQgASgLMjkuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3Jl", 
            "LmNvcmUucHJvdG9jb2wuUXVlcnkSTgoIY29sbGFwc2UYBSABKAsyPC5jb20u", 
            "YWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2Nv", 
            "bC5Db2xsYXBzZRJGCgRzb3J0GAYgASgLMjguY29tLmFsaWNsb3VkLm9wZW5z", 
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU29ydBIVCg1nZXRU", 
            "b3RhbENvdW50GAggASgIEg0KBXRva2VuGAkgASgMIn8KDENvbHVtbnNUb0dl", 
            "dBJZCgtyZXR1cm5fdHlwZRgBIAEoDjJELmNvbS5hbGljbG91ZC5vcGVuc2Vy", 
            "dmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbHVtblJldHVyblR5", 
            "cGUSFAoMY29sdW1uX25hbWVzGAIgAygJIr8BCg1TZWFyY2hSZXF1ZXN0EhIK", 
            "CnRhYmxlX25hbWUYASABKAkSEgoKaW5kZXhfbmFtZRgCIAEoCRJYCg5jb2x1", 
            "bW5zX3RvX2dldBgDIAEoCzJALmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbHVtbnNUb0dldBIUCgxzZWFy", 
            "Y2hfcXVlcnkYBCABKAwSFgoOcm91dGluZ192YWx1ZXMYBSADKAwiYAoOU2Vh", 
            "cmNoUmVzcG9uc2USEgoKdG90YWxfaGl0cxgBIAEoAxIMCgRyb3dzGAIgAygM", 
            "EhgKEGlzX2FsbF9zdWNjZWVkZWQYAyABKAgSEgoKbmV4dF90b2tlbhgGIAEo", 
            "DCL7AgoLRmllbGRTY2hlbWESEgoKZmllbGRfbmFtZRgBIAEoCRJRCgpmaWVs", 
            "ZF90eXBlGAIgASgOMj0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJs", 
            "ZXN0b3JlLmNvcmUucHJvdG9jb2wuRmllbGRUeXBlElcKDWluZGV4X29wdGlv", 
            "bnMYAyABKA4yQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3Rv", 
            "cmUuY29yZS5wcm90b2NvbC5JbmRleE9wdGlvbnMSEAoIYW5hbHl6ZXIYBCAB", 
            "KAkSDQoFaW5kZXgYBSABKAgSEgoKZG9jX3ZhbHVlcxgGIAEoCBINCgVzdG9y", 
            "ZRgHIAEoCBJWCg1maWVsZF9zY2hlbWFzGAggAygLMj8uY29tLmFsaWNsb3Vk", 
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuRmllbGRT", 
            "Y2hlbWESEAoIaXNfYXJyYXkYCSABKAgijAIKC0luZGV4U2NoZW1hElYKDWZp", 
            "ZWxkX3NjaGVtYXMYASADKAsyPy5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2Vz", 
            "LnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5GaWVsZFNjaGVtYRJXCg1pbmRl", 
            "eF9zZXR0aW5nGAIgASgLMkAuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50", 
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuSW5kZXhTZXR0aW5nEkwKCmluZGV4", 
            "X3NvcnQYAyABKAsyOC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl", 
            "c3RvcmUuY29yZS5wcm90b2NvbC5Tb3J0ImAKDEluZGV4U2V0dGluZxIYChBu", 
            "dW1iZXJfb2Zfc2hhcmRzGAEgASgFEhYKDnJvdXRpbmdfZmllbGRzGAIgAygJ", 
            "Eh4KFnJvdXRpbmdfcGFydGl0aW9uX3NpemUYAyABKAUikwEKGENyZWF0ZVNl", 
            "YXJjaEluZGV4UmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgAigJEhIKCmluZGV4", 
            "X25hbWUYAiACKAkSTwoGc2NoZW1hGAMgASgLMj8uY29tLmFsaWNsb3VkLm9w", 
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuSW5kZXhTY2hl", 
            "bWEiGwoZQ3JlYXRlU2VhcmNoSW5kZXhSZXNwb25zZSIzCglJbmRleEluZm8S", 
            "EgoKdGFibGVfbmFtZRgBIAEoCRISCgppbmRleF9uYW1lGAIgASgJIiwKFkxp", 
            "c3RTZWFyY2hJbmRleFJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEoCSJpChdM", 
            "aXN0U2VhcmNoSW5kZXhSZXNwb25zZRJOCgdpbmRpY2VzGAEgAygLMj0uY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuSW5kZXhJbmZvIkIKGERlbGV0ZVNlYXJjaEluZGV4UmVxdWVzdBISCgp0", 
            "YWJsZV9uYW1lGAEgASgJEhIKCmluZGV4X25hbWUYAiABKAkiGwoZRGVsZXRl", 
            "U2VhcmNoSW5kZXhSZXNwb25zZSJ9CghTeW5jU3RhdBJRCgpzeW5jX3BoYXNl", 
            "GAEgASgOMj0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3Jl", 
            "LmNvcmUucHJvdG9jb2wuU3luY1BoYXNlEh4KFmN1cnJlbnRfc3luY190aW1l", 
            "c3RhbXAYAiABKAMiRAoaRGVzY3JpYmVTZWFyY2hJbmRleFJlcXVlc3QSEgoK", 
            "dGFibGVfbmFtZRgBIAEoCRISCgppbmRleF9uYW1lGAIgASgJIr8BChtEZXNj", 
            "cmliZVNlYXJjaEluZGV4UmVzcG9uc2USTwoGc2NoZW1hGAEgASgLMj8uY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuSW5kZXhTY2hlbWESTwoJc3luY19zdGF0GAIgASgLMjwuY29tLmFsaWNs", 
            "b3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU3lu", 
            "Y1N0YXQqvwIKCVF1ZXJ5VHlwZRIPCgtNQVRDSF9RVUVSWRABEhYKEk1BVENI", 
            "X1BIUkFTRV9RVUVSWRACEg4KClRFUk1fUVVFUlkQAxIPCgtSQU5HRV9RVUVS", 
            "WRAEEhAKDFBSRUZJWF9RVUVSWRAFEg4KCkJPT0xfUVVFUlkQBhIVChFDT05T", 
            "VF9TQ09SRV9RVUVSWRAHEhgKFEZVTkNUSU9OX1NDT1JFX1FVRVJZEAgSEAoM", 
            "TkVTVEVEX1FVRVJZEAkSEgoOV0lMRENBUkRfUVVFUlkQChITCg9NQVRDSF9B", 
            "TExfUVVFUlkQCxIaChZHRU9fQk9VTkRJTkdfQk9YX1FVRVJZEAwSFgoSR0VP", 
            "X0RJU1RBTkNFX1FVRVJZEA0SFQoRR0VPX1BPTFlHT05fUVVFUlkQDhIPCgtU", 
            "RVJNU19RVUVSWRAPKiAKDVF1ZXJ5T3BlcmF0b3ISBgoCT1IQARIHCgNBTkQQ", 
            "AipyCglTY29yZU1vZGUSEwoPU0NPUkVfTU9ERV9OT05FEAESEgoOU0NPUkVf", 
            "TU9ERV9BVkcQAhISCg5TQ09SRV9NT0RFX01BWBADEhQKEFNDT1JFX01PREVf", 
            "VE9UQUwQBBISCg5TQ09SRV9NT0RFX01JThAFKjQKCVNvcnRPcmRlchISCg5T", 
            "T1JUX09SREVSX0FTQxAAEhMKD1NPUlRfT1JERVJfREVTQxABKkMKCFNvcnRN", 
            "b2RlEhEKDVNPUlRfTU9ERV9NSU4QABIRCg1TT1JUX01PREVfTUFYEAESEQoN", 
            "U09SVF9NT0RFX0FWRxACKj8KD0dlb0Rpc3RhbmNlVHlwZRIUChBHRU9fRElT", 
            "VEFOQ0VfQVJDEAASFgoSR0VPX0RJU1RBTkNFX1BMQU5FEAEqSQoQQ29sdW1u", 
            "UmV0dXJuVHlwZRIOCgpSRVRVUk5fQUxMEAESFAoQUkVUVVJOX1NQRUNJRklF", 
            "RBACEg8KC1JFVFVSTl9OT05FEAMqPwoMSW5kZXhPcHRpb25zEggKBERPQ1MQ", 
            "ARIJCgVGUkVRUxACEg0KCVBPU0lUSU9OUxADEgsKB09GRlNFVFMQBCpgCglG", 
            "aWVsZFR5cGUSCAoETE9ORxABEgoKBkRPVUJMRRACEgsKB0JPT0xFQU4QAxIL", 
            "CgdLRVlXT1JEEAQSCAoEVEVYVBAFEgoKBk5FU1RFRBAGEg0KCUdFT19QT0lO", 
          "VBAHKh8KCVN5bmNQaGFzZRIICgRGVUxMEAESCAoESU5DUhAC"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor,
                new string[] { "FieldName", "Text", "MinimumShouldMatch", "Operator", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor,
                new string[] { "FieldName", "Text", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor,
                new string[] { "FieldName", "Term", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor,
                new string[] { "FieldName", "Terms", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor = Descriptor.MessageTypes[5];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery, global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor,
                new string[] { "FieldName", "RangeFrom", "RangeTo", "IncludeLower", "IncludeUpper", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor = Descriptor.MessageTypes[6];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery, global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor,
                new string[] { "FieldName", "Prefix", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor = Descriptor.MessageTypes[7];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery, global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor,
                new string[] { "FieldName", "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor = Descriptor.MessageTypes[8];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery, global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor,
                new string[] { "MustQueries", "MustNotQueries", "FilterQueries", "ShouldQueries", "MinimumShouldMatch", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor = Descriptor.MessageTypes[9];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor,
                new string[] { "Filter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor = Descriptor.MessageTypes[10];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor, global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor,
                new string[] { "FieldName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor = Descriptor.MessageTypes[11];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor,
                new string[] { "Query", "FieldValueFactor", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor = Descriptor.MessageTypes[12];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery, global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor,
                new string[] { "Path", "Query", "ScoreMode", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor = Descriptor.MessageTypes[13];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor,
                new string[] { "FieldName", "TopLeft", "BottomRight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor = Descriptor.MessageTypes[14];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor,
                new string[] { "FieldName", "CenterPoint", "Distance", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor = Descriptor.MessageTypes[15];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor,
                new string[] { "FieldName", "Points", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor = Descriptor.MessageTypes[16];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Query, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor,
                new string[] { "Type", "Query_", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor = Descriptor.MessageTypes[17];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Collapse, global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor,
                new string[] { "FieldName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor = Descriptor.MessageTypes[18];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter, global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor,
                new string[] { "Path", "Filter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor = Descriptor.MessageTypes[19];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort, global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor,
                new string[] { "Order", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor = Descriptor.MessageTypes[20];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor,
                new string[] { "Order", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor = Descriptor.MessageTypes[21];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSort, global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor,
                new string[] { "FieldName", "Order", "Mode", "NestedFilter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor = Descriptor.MessageTypes[22];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor,
                new string[] { "FieldName", "Points", "Order", "Mode", "DistanceType", "NestedFilter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor = Descriptor.MessageTypes[23];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sorter, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor,
                new string[] { "FieldSort", "GeoDistanceSort", "ScoreSort", "PkSort", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor = Descriptor.MessageTypes[24];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sort, global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor,
                new string[] { "Sorter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor = Descriptor.MessageTypes[25];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery, global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor,
                new string[] { "Offset", "Limit", "Query", "Collapse", "Sort", "GetTotalCount", "Token", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor = Descriptor.MessageTypes[26];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet, global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor,
                new string[] { "ReturnType", "ColumnNames", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor = Descriptor.MessageTypes[27];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest, global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor,
                new string[] { "TableName", "IndexName", "ColumnsToGet", "SearchQuery", "RoutingValues", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor = Descriptor.MessageTypes[28];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse, global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor,
                new string[] { "TotalHits", "Rows", "IsAllSucceeded", "NextToken", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor = Descriptor.MessageTypes[29];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor,
                new string[] { "FieldName", "FieldType", "IndexOptions", "Analyzer", "Index", "DocValues", "Store", "FieldSchemas", "IsArray", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor = Descriptor.MessageTypes[30];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema, global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor,
                new string[] { "FieldSchemas", "IndexSetting", "IndexSort", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor = Descriptor.MessageTypes[31];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting, global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor,
                new string[] { "NumberOfShards", "RoutingFields", "RoutingPartitionSize", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor = Descriptor.MessageTypes[32];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor,
                new string[] { "TableName", "IndexName", "Schema", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor = Descriptor.MessageTypes[33];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor = Descriptor.MessageTypes[34];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor,
                new string[] { "TableName", "IndexName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor = Descriptor.MessageTypes[35];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor = Descriptor.MessageTypes[36];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor,
                new string[] { "Indices", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor = Descriptor.MessageTypes[37];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor,
                new string[] { "TableName", "IndexName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor = Descriptor.MessageTypes[38];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor = Descriptor.MessageTypes[39];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SyncStat, global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor,
                new string[] { "SyncPhase", "CurrentSyncTimestamp", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor = Descriptor.MessageTypes[40];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor,
                new string[] { "TableName", "IndexName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor = Descriptor.MessageTypes[41];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor,
                new string[] { "Schema", "SyncStat", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum QueryType {
    MATCH_QUERY = 1,
    MATCH_PHRASE_QUERY = 2,
    TERM_QUERY = 3,
    RANGE_QUERY = 4,
    PREFIX_QUERY = 5,
    BOOL_QUERY = 6,
    CONST_SCORE_QUERY = 7,
    FUNCTION_SCORE_QUERY = 8,
    NESTED_QUERY = 9,
    WILDCARD_QUERY = 10,
    MATCH_ALL_QUERY = 11,
    GEO_BOUNDING_BOX_QUERY = 12,
    GEO_DISTANCE_QUERY = 13,
    GEO_POLYGON_QUERY = 14,
    TERMS_QUERY = 15,
  }
  
  public enum QueryOperator {
    OR = 1,
    AND = 2,
  }
  
  public enum ScoreMode {
    SCORE_MODE_NONE = 1,
    SCORE_MODE_AVG = 2,
    SCORE_MODE_MAX = 3,
    SCORE_MODE_TOTAL = 4,
    SCORE_MODE_MIN = 5,
  }
  
  public enum SortOrder {
    SORT_ORDER_ASC = 0,
    SORT_ORDER_DESC = 1,
  }
  
  public enum SortMode {
    SORT_MODE_MIN = 0,
    SORT_MODE_MAX = 1,
    SORT_MODE_AVG = 2,
  }
  
  public enum GeoDistanceType {
    GEO_DISTANCE_ARC = 0,
    GEO_DISTANCE_PLANE = 1,
  }
  
  public enum ColumnReturnType {
    RETURN_ALL = 1,
    RETURN_SPECIFIED = 2,
    RETURN_NONE = 3,
  }
  
  public enum IndexOptions {
    DOCS = 1,
    FREQS = 2,
    POSITIONS = 3,
    OFFSETS = 4,
  }
  
  public enum FieldType {
    LONG = 1,
    DOUBLE = 2,
    BOOLEAN = 3,
    KEYWORD = 4,
    TEXT = 5,
    NESTED = 6,
    GEO_POINT = 7,
  }
  
  public enum SyncPhase {
    FULL = 1,
    INCR = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatchQuery : pb::GeneratedMessage<MatchQuery, MatchQuery.Builder> {
    private MatchQuery() { }
    private static readonly MatchQuery defaultInstance = new MatchQuery().MakeReadOnly();
    private static readonly string[] _matchQueryFieldNames = new string[] { "field_name", "minimum_should_match", "operator", "text" };
    private static readonly uint[] _matchQueryFieldTags = new uint[] { 10, 24, 32, 18 };
    public static MatchQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchQuery, MatchQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int MinimumShouldMatchFieldNumber = 3;
    private bool hasMinimumShouldMatch;
    private int minimumShouldMatch_;
    public bool HasMinimumShouldMatch {
      get { return hasMinimumShouldMatch; }
    }
    public int MinimumShouldMatch {
      get { return minimumShouldMatch_; }
    }
    
    public const int OperatorFieldNumber = 4;
    private bool hasOperator;
    private global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator operator_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator.OR;
    public bool HasOperator {
      get { return hasOperator; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator Operator {
      get { return operator_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _matchQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasText) {
        output.WriteString(2, field_names[3], Text);
      }
      if (hasMinimumShouldMatch) {
        output.WriteInt32(3, field_names[1], MinimumShouldMatch);
      }
      if (hasOperator) {
        output.WriteEnum(4, field_names[2], (int) Operator, Operator);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text);
      }
      if (hasMinimumShouldMatch) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, MinimumShouldMatch);
      }
      if (hasOperator) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Operator);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MatchQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchQuery result;
      
      private MatchQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchQuery original = result;
          result = new MatchQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.Descriptor; }
      }
      
      public override MatchQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.DefaultInstance; }
      }
      
      public override MatchQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MatchQuery) {
          return MergeFrom((MatchQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasMinimumShouldMatch) {
          MinimumShouldMatch = other.MinimumShouldMatch;
        }
        if (other.HasOperator) {
          Operator = other.Operator;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 24: {
              result.hasMinimumShouldMatch = input.ReadInt32(ref result.minimumShouldMatch_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.operator_, out unknown)) {
                result.hasOperator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasMinimumShouldMatch {
        get { return result.hasMinimumShouldMatch; }
      }
      public int MinimumShouldMatch {
        get { return result.MinimumShouldMatch; }
        set { SetMinimumShouldMatch(value); }
      }
      public Builder SetMinimumShouldMatch(int value) {
        PrepareBuilder();
        result.hasMinimumShouldMatch = true;
        result.minimumShouldMatch_ = value;
        return this;
      }
      public Builder ClearMinimumShouldMatch() {
        PrepareBuilder();
        result.hasMinimumShouldMatch = false;
        result.minimumShouldMatch_ = 0;
        return this;
      }
      
      public bool HasOperator {
       get { return result.hasOperator; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator Operator {
        get { return result.Operator; }
        set { SetOperator(value); }
      }
      public Builder SetOperator(global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator value) {
        PrepareBuilder();
        result.hasOperator = true;
        result.operator_ = value;
        return this;
      }
      public Builder ClearOperator() {
        PrepareBuilder();
        result.hasOperator = false;
        result.operator_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator.OR;
        return this;
      }
    }
    static MatchQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatchPhraseQuery : pb::GeneratedMessage<MatchPhraseQuery, MatchPhraseQuery.Builder> {
    private MatchPhraseQuery() { }
    private static readonly MatchPhraseQuery defaultInstance = new MatchPhraseQuery().MakeReadOnly();
    private static readonly string[] _matchPhraseQueryFieldNames = new string[] { "field_name", "text" };
    private static readonly uint[] _matchPhraseQueryFieldTags = new uint[] { 10, 18 };
    public static MatchPhraseQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchPhraseQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchPhraseQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchPhraseQuery, MatchPhraseQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _matchPhraseQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasText) {
        output.WriteString(2, field_names[1], Text);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MatchPhraseQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchPhraseQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchPhraseQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchPhraseQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchPhraseQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchPhraseQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchPhraseQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchPhraseQuery result;
      
      private MatchPhraseQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchPhraseQuery original = result;
          result = new MatchPhraseQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchPhraseQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.Descriptor; }
      }
      
      public override MatchPhraseQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.DefaultInstance; }
      }
      
      public override MatchPhraseQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MatchPhraseQuery) {
          return MergeFrom((MatchPhraseQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchPhraseQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasText) {
          Text = other.Text;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchPhraseQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchPhraseQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
    }
    static MatchPhraseQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatchAllQuery : pb::GeneratedMessage<MatchAllQuery, MatchAllQuery.Builder> {
    private MatchAllQuery() { }
    private static readonly MatchAllQuery defaultInstance = new MatchAllQuery().MakeReadOnly();
    private static readonly string[] _matchAllQueryFieldNames = new string[] {  };
    private static readonly uint[] _matchAllQueryFieldTags = new uint[] {  };
    public static MatchAllQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchAllQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchAllQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchAllQuery, MatchAllQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _matchAllQueryFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MatchAllQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchAllQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchAllQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchAllQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchAllQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchAllQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchAllQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchAllQuery result;
      
      private MatchAllQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchAllQuery original = result;
          result = new MatchAllQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchAllQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.Descriptor; }
      }
      
      public override MatchAllQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.DefaultInstance; }
      }
      
      public override MatchAllQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MatchAllQuery) {
          return MergeFrom((MatchAllQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchAllQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchAllQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchAllQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static MatchAllQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TermQuery : pb::GeneratedMessage<TermQuery, TermQuery.Builder> {
    private TermQuery() { }
    private static readonly TermQuery defaultInstance = new TermQuery().MakeReadOnly();
    private static readonly string[] _termQueryFieldNames = new string[] { "field_name", "term" };
    private static readonly uint[] _termQueryFieldTags = new uint[] { 10, 18 };
    public static TermQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TermQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TermQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TermQuery, TermQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TermFieldNumber = 2;
    private bool hasTerm;
    private pb::ByteString term_ = pb::ByteString.Empty;
    public bool HasTerm {
      get { return hasTerm; }
    }
    public pb::ByteString Term {
      get { return term_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _termQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasTerm) {
        output.WriteBytes(2, field_names[1], Term);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasTerm) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Term);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TermQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TermQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TermQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TermQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TermQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TermQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TermQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TermQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TermQuery result;
      
      private TermQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          TermQuery original = result;
          result = new TermQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TermQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.Descriptor; }
      }
      
      public override TermQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.DefaultInstance; }
      }
      
      public override TermQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TermQuery) {
          return MergeFrom((TermQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TermQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasTerm) {
          Term = other.Term;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_termQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _termQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasTerm = input.ReadBytes(ref result.term_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasTerm {
        get { return result.hasTerm; }
      }
      public pb::ByteString Term {
        get { return result.Term; }
        set { SetTerm(value); }
      }
      public Builder SetTerm(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTerm = true;
        result.term_ = value;
        return this;
      }
      public Builder ClearTerm() {
        PrepareBuilder();
        result.hasTerm = false;
        result.term_ = pb::ByteString.Empty;
        return this;
      }
    }
    static TermQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TermsQuery : pb::GeneratedMessage<TermsQuery, TermsQuery.Builder> {
    private TermsQuery() { }
    private static readonly TermsQuery defaultInstance = new TermsQuery().MakeReadOnly();
    private static readonly string[] _termsQueryFieldNames = new string[] { "field_name", "terms" };
    private static readonly uint[] _termsQueryFieldTags = new uint[] { 10, 18 };
    public static TermsQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TermsQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TermsQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TermsQuery, TermsQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TermsFieldNumber = 2;
    private pbc::PopsicleList<pb::ByteString> terms_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> TermsList {
      get { return pbc::Lists.AsReadOnly(terms_); }
    }
    public int TermsCount {
      get { return terms_.Count; }
    }
    public pb::ByteString GetTerms(int index) {
      return terms_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _termsQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (terms_.Count > 0) {
        output.WriteBytesArray(2, field_names[1], terms_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in TermsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * terms_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TermsQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermsQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermsQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermsQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermsQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermsQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TermsQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TermsQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TermsQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermsQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TermsQuery MakeReadOnly() {
      terms_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TermsQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TermsQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TermsQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TermsQuery result;
      
      private TermsQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          TermsQuery original = result;
          result = new TermsQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TermsQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.Descriptor; }
      }
      
      public override TermsQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.DefaultInstance; }
      }
      
      public override TermsQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TermsQuery) {
          return MergeFrom((TermsQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TermsQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.terms_.Count != 0) {
          result.terms_.Add(other.terms_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_termsQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _termsQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              input.ReadBytesArray(tag, field_name, result.terms_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> TermsList {
        get { return PrepareBuilder().terms_; }
      }
      public int TermsCount {
        get { return result.TermsCount; }
      }
      public pb::ByteString GetTerms(int index) {
        return result.GetTerms(index);
      }
      public Builder SetTerms(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.terms_[index] = value;
        return this;
      }
      public Builder AddTerms(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.terms_.Add(value);
        return this;
      }
      public Builder AddRangeTerms(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.terms_.Add(values);
        return this;
      }
      public Builder ClearTerms() {
        PrepareBuilder();
        result.terms_.Clear();
        return this;
      }
    }
    static TermsQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RangeQuery : pb::GeneratedMessage<RangeQuery, RangeQuery.Builder> {
    private RangeQuery() { }
    private static readonly RangeQuery defaultInstance = new RangeQuery().MakeReadOnly();
    private static readonly string[] _rangeQueryFieldNames = new string[] { "field_name", "include_lower", "include_upper", "range_from", "range_to" };
    private static readonly uint[] _rangeQueryFieldTags = new uint[] { 10, 32, 40, 18, 26 };
    public static RangeQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RangeQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RangeQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RangeQuery, RangeQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int RangeFromFieldNumber = 2;
    private bool hasRangeFrom;
    private pb::ByteString rangeFrom_ = pb::ByteString.Empty;
    public bool HasRangeFrom {
      get { return hasRangeFrom; }
    }
    public pb::ByteString RangeFrom {
      get { return rangeFrom_; }
    }
    
    public const int RangeToFieldNumber = 3;
    private bool hasRangeTo;
    private pb::ByteString rangeTo_ = pb::ByteString.Empty;
    public bool HasRangeTo {
      get { return hasRangeTo; }
    }
    public pb::ByteString RangeTo {
      get { return rangeTo_; }
    }
    
    public const int IncludeLowerFieldNumber = 4;
    private bool hasIncludeLower;
    private bool includeLower_;
    public bool HasIncludeLower {
      get { return hasIncludeLower; }
    }
    public bool IncludeLower {
      get { return includeLower_; }
    }
    
    public const int IncludeUpperFieldNumber = 5;
    private bool hasIncludeUpper;
    private bool includeUpper_;
    public bool HasIncludeUpper {
      get { return hasIncludeUpper; }
    }
    public bool IncludeUpper {
      get { return includeUpper_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rangeQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasRangeFrom) {
        output.WriteBytes(2, field_names[3], RangeFrom);
      }
      if (hasRangeTo) {
        output.WriteBytes(3, field_names[4], RangeTo);
      }
      if (hasIncludeLower) {
        output.WriteBool(4, field_names[1], IncludeLower);
      }
      if (hasIncludeUpper) {
        output.WriteBool(5, field_names[2], IncludeUpper);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasRangeFrom) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, RangeFrom);
      }
      if (hasRangeTo) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, RangeTo);
      }
      if (hasIncludeLower) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IncludeLower);
      }
      if (hasIncludeUpper) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, IncludeUpper);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RangeQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RangeQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RangeQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RangeQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RangeQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RangeQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RangeQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RangeQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RangeQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RangeQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RangeQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RangeQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RangeQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RangeQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RangeQuery result;
      
      private RangeQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          RangeQuery original = result;
          result = new RangeQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RangeQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.Descriptor; }
      }
      
      public override RangeQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.DefaultInstance; }
      }
      
      public override RangeQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RangeQuery) {
          return MergeFrom((RangeQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RangeQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasRangeFrom) {
          RangeFrom = other.RangeFrom;
        }
        if (other.HasRangeTo) {
          RangeTo = other.RangeTo;
        }
        if (other.HasIncludeLower) {
          IncludeLower = other.IncludeLower;
        }
        if (other.HasIncludeUpper) {
          IncludeUpper = other.IncludeUpper;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rangeQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rangeQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasRangeFrom = input.ReadBytes(ref result.rangeFrom_);
              break;
            }
            case 26: {
              result.hasRangeTo = input.ReadBytes(ref result.rangeTo_);
              break;
            }
            case 32: {
              result.hasIncludeLower = input.ReadBool(ref result.includeLower_);
              break;
            }
            case 40: {
              result.hasIncludeUpper = input.ReadBool(ref result.includeUpper_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasRangeFrom {
        get { return result.hasRangeFrom; }
      }
      public pb::ByteString RangeFrom {
        get { return result.RangeFrom; }
        set { SetRangeFrom(value); }
      }
      public Builder SetRangeFrom(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRangeFrom = true;
        result.rangeFrom_ = value;
        return this;
      }
      public Builder ClearRangeFrom() {
        PrepareBuilder();
        result.hasRangeFrom = false;
        result.rangeFrom_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasRangeTo {
        get { return result.hasRangeTo; }
      }
      public pb::ByteString RangeTo {
        get { return result.RangeTo; }
        set { SetRangeTo(value); }
      }
      public Builder SetRangeTo(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRangeTo = true;
        result.rangeTo_ = value;
        return this;
      }
      public Builder ClearRangeTo() {
        PrepareBuilder();
        result.hasRangeTo = false;
        result.rangeTo_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasIncludeLower {
        get { return result.hasIncludeLower; }
      }
      public bool IncludeLower {
        get { return result.IncludeLower; }
        set { SetIncludeLower(value); }
      }
      public Builder SetIncludeLower(bool value) {
        PrepareBuilder();
        result.hasIncludeLower = true;
        result.includeLower_ = value;
        return this;
      }
      public Builder ClearIncludeLower() {
        PrepareBuilder();
        result.hasIncludeLower = false;
        result.includeLower_ = false;
        return this;
      }
      
      public bool HasIncludeUpper {
        get { return result.hasIncludeUpper; }
      }
      public bool IncludeUpper {
        get { return result.IncludeUpper; }
        set { SetIncludeUpper(value); }
      }
      public Builder SetIncludeUpper(bool value) {
        PrepareBuilder();
        result.hasIncludeUpper = true;
        result.includeUpper_ = value;
        return this;
      }
      public Builder ClearIncludeUpper() {
        PrepareBuilder();
        result.hasIncludeUpper = false;
        result.includeUpper_ = false;
        return this;
      }
    }
    static RangeQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PrefixQuery : pb::GeneratedMessage<PrefixQuery, PrefixQuery.Builder> {
    private PrefixQuery() { }
    private static readonly PrefixQuery defaultInstance = new PrefixQuery().MakeReadOnly();
    private static readonly string[] _prefixQueryFieldNames = new string[] { "field_name", "prefix" };
    private static readonly uint[] _prefixQueryFieldTags = new uint[] { 10, 18 };
    public static PrefixQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PrefixQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PrefixQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PrefixQuery, PrefixQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int PrefixFieldNumber = 2;
    private bool hasPrefix;
    private string prefix_ = "";
    public bool HasPrefix {
      get { return hasPrefix; }
    }
    public string Prefix {
      get { return prefix_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _prefixQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasPrefix) {
        output.WriteString(2, field_names[1], Prefix);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasPrefix) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Prefix);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PrefixQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PrefixQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PrefixQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PrefixQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PrefixQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PrefixQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PrefixQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PrefixQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PrefixQuery result;
      
      private PrefixQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          PrefixQuery original = result;
          result = new PrefixQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PrefixQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.Descriptor; }
      }
      
      public override PrefixQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.DefaultInstance; }
      }
      
      public override PrefixQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PrefixQuery) {
          return MergeFrom((PrefixQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PrefixQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasPrefix) {
          Prefix = other.Prefix;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_prefixQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _prefixQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasPrefix = input.ReadString(ref result.prefix_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasPrefix {
        get { return result.hasPrefix; }
      }
      public string Prefix {
        get { return result.Prefix; }
        set { SetPrefix(value); }
      }
      public Builder SetPrefix(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPrefix = true;
        result.prefix_ = value;
        return this;
      }
      public Builder ClearPrefix() {
        PrepareBuilder();
        result.hasPrefix = false;
        result.prefix_ = "";
        return this;
      }
    }
    static PrefixQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WildcardQuery : pb::GeneratedMessage<WildcardQuery, WildcardQuery.Builder> {
    private WildcardQuery() { }
    private static readonly WildcardQuery defaultInstance = new WildcardQuery().MakeReadOnly();
    private static readonly string[] _wildcardQueryFieldNames = new string[] { "field_name", "value" };
    private static readonly uint[] _wildcardQueryFieldTags = new uint[] { 10, 18 };
    public static WildcardQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WildcardQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WildcardQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WildcardQuery, WildcardQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _wildcardQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasValue) {
        output.WriteString(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static WildcardQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WildcardQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WildcardQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WildcardQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WildcardQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WildcardQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<WildcardQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WildcardQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WildcardQuery result;
      
      private WildcardQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          WildcardQuery original = result;
          result = new WildcardQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WildcardQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.Descriptor; }
      }
      
      public override WildcardQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.DefaultInstance; }
      }
      
      public override WildcardQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WildcardQuery) {
          return MergeFrom((WildcardQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WildcardQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_wildcardQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _wildcardQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
    }
    static WildcardQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BoolQuery : pb::GeneratedMessage<BoolQuery, BoolQuery.Builder> {
    private BoolQuery() { }
    private static readonly BoolQuery defaultInstance = new BoolQuery().MakeReadOnly();
    private static readonly string[] _boolQueryFieldNames = new string[] { "filter_queries", "minimum_should_match", "must_not_queries", "must_queries", "should_queries" };
    private static readonly uint[] _boolQueryFieldTags = new uint[] { 26, 40, 18, 10, 34 };
    public static BoolQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BoolQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BoolQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BoolQuery, BoolQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__FieldAccessorTable; }
    }
    
    public const int MustQueriesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> mustQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustQueriesList {
      get { return mustQueries_; }
    }
    public int MustQueriesCount {
      get { return mustQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustQueries(int index) {
      return mustQueries_[index];
    }
    
    public const int MustNotQueriesFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> mustNotQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustNotQueriesList {
      get { return mustNotQueries_; }
    }
    public int MustNotQueriesCount {
      get { return mustNotQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustNotQueries(int index) {
      return mustNotQueries_[index];
    }
    
    public const int FilterQueriesFieldNumber = 3;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> filterQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> FilterQueriesList {
      get { return filterQueries_; }
    }
    public int FilterQueriesCount {
      get { return filterQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetFilterQueries(int index) {
      return filterQueries_[index];
    }
    
    public const int ShouldQueriesFieldNumber = 4;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> shouldQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> ShouldQueriesList {
      get { return shouldQueries_; }
    }
    public int ShouldQueriesCount {
      get { return shouldQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetShouldQueries(int index) {
      return shouldQueries_[index];
    }
    
    public const int MinimumShouldMatchFieldNumber = 5;
    private bool hasMinimumShouldMatch;
    private int minimumShouldMatch_;
    public bool HasMinimumShouldMatch {
      get { return hasMinimumShouldMatch; }
    }
    public int MinimumShouldMatch {
      get { return minimumShouldMatch_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _boolQueryFieldNames;
      if (mustQueries_.Count > 0) {
        output.WriteMessageArray(1, field_names[3], mustQueries_);
      }
      if (mustNotQueries_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], mustNotQueries_);
      }
      if (filterQueries_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], filterQueries_);
      }
      if (shouldQueries_.Count > 0) {
        output.WriteMessageArray(4, field_names[4], shouldQueries_);
      }
      if (hasMinimumShouldMatch) {
        output.WriteInt32(5, field_names[1], MinimumShouldMatch);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in MustQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in MustNotQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in FilterQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in ShouldQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasMinimumShouldMatch) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, MinimumShouldMatch);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BoolQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BoolQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BoolQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BoolQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BoolQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BoolQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BoolQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BoolQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BoolQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BoolQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BoolQuery MakeReadOnly() {
      mustQueries_.MakeReadOnly();
      mustNotQueries_.MakeReadOnly();
      filterQueries_.MakeReadOnly();
      shouldQueries_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BoolQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BoolQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BoolQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BoolQuery result;
      
      private BoolQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          BoolQuery original = result;
          result = new BoolQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BoolQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.Descriptor; }
      }
      
      public override BoolQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.DefaultInstance; }
      }
      
      public override BoolQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BoolQuery) {
          return MergeFrom((BoolQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BoolQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.mustQueries_.Count != 0) {
          result.mustQueries_.Add(other.mustQueries_);
        }
        if (other.mustNotQueries_.Count != 0) {
          result.mustNotQueries_.Add(other.mustNotQueries_);
        }
        if (other.filterQueries_.Count != 0) {
          result.filterQueries_.Add(other.filterQueries_);
        }
        if (other.shouldQueries_.Count != 0) {
          result.shouldQueries_.Add(other.shouldQueries_);
        }
        if (other.HasMinimumShouldMatch) {
          MinimumShouldMatch = other.MinimumShouldMatch;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_boolQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _boolQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.mustQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.mustNotQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.filterQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.shouldQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              result.hasMinimumShouldMatch = input.ReadInt32(ref result.minimumShouldMatch_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustQueriesList {
        get { return PrepareBuilder().mustQueries_; }
      }
      public int MustQueriesCount {
        get { return result.MustQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustQueries(int index) {
        return result.GetMustQueries(index);
      }
      public Builder SetMustQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustQueries_[index] = value;
        return this;
      }
      public Builder SetMustQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMustQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustQueries_.Add(value);
        return this;
      }
      public Builder AddMustQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMustQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.mustQueries_.Add(values);
        return this;
      }
      public Builder ClearMustQueries() {
        PrepareBuilder();
        result.mustQueries_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustNotQueriesList {
        get { return PrepareBuilder().mustNotQueries_; }
      }
      public int MustNotQueriesCount {
        get { return result.MustNotQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustNotQueries(int index) {
        return result.GetMustNotQueries(index);
      }
      public Builder SetMustNotQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustNotQueries_[index] = value;
        return this;
      }
      public Builder SetMustNotQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustNotQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMustNotQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustNotQueries_.Add(value);
        return this;
      }
      public Builder AddMustNotQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustNotQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMustNotQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.mustNotQueries_.Add(values);
        return this;
      }
      public Builder ClearMustNotQueries() {
        PrepareBuilder();
        result.mustNotQueries_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> FilterQueriesList {
        get { return PrepareBuilder().filterQueries_; }
      }
      public int FilterQueriesCount {
        get { return result.FilterQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetFilterQueries(int index) {
        return result.GetFilterQueries(index);
      }
      public Builder SetFilterQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filterQueries_[index] = value;
        return this;
      }
      public Builder SetFilterQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filterQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFilterQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filterQueries_.Add(value);
        return this;
      }
      public Builder AddFilterQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filterQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFilterQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.filterQueries_.Add(values);
        return this;
      }
      public Builder ClearFilterQueries() {
        PrepareBuilder();
        result.filterQueries_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> ShouldQueriesList {
        get { return PrepareBuilder().shouldQueries_; }
      }
      public int ShouldQueriesCount {
        get { return result.ShouldQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetShouldQueries(int index) {
        return result.GetShouldQueries(index);
      }
      public Builder SetShouldQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shouldQueries_[index] = value;
        return this;
      }
      public Builder SetShouldQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shouldQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddShouldQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shouldQueries_.Add(value);
        return this;
      }
      public Builder AddShouldQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shouldQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeShouldQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.shouldQueries_.Add(values);
        return this;
      }
      public Builder ClearShouldQueries() {
        PrepareBuilder();
        result.shouldQueries_.Clear();
        return this;
      }
      
      public bool HasMinimumShouldMatch {
        get { return result.hasMinimumShouldMatch; }
      }
      public int MinimumShouldMatch {
        get { return result.MinimumShouldMatch; }
        set { SetMinimumShouldMatch(value); }
      }
      public Builder SetMinimumShouldMatch(int value) {
        PrepareBuilder();
        result.hasMinimumShouldMatch = true;
        result.minimumShouldMatch_ = value;
        return this;
      }
      public Builder ClearMinimumShouldMatch() {
        PrepareBuilder();
        result.hasMinimumShouldMatch = false;
        result.minimumShouldMatch_ = 0;
        return this;
      }
    }
    static BoolQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConstScoreQuery : pb::GeneratedMessage<ConstScoreQuery, ConstScoreQuery.Builder> {
    private ConstScoreQuery() { }
    private static readonly ConstScoreQuery defaultInstance = new ConstScoreQuery().MakeReadOnly();
    private static readonly string[] _constScoreQueryFieldNames = new string[] { "filter" };
    private static readonly uint[] _constScoreQueryFieldTags = new uint[] { 10 };
    public static ConstScoreQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConstScoreQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConstScoreQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConstScoreQuery, ConstScoreQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__FieldAccessorTable; }
    }
    
    public const int FilterFieldNumber = 1;
    private bool hasFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
      get { return filter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _constScoreQueryFieldNames;
      if (hasFilter) {
        output.WriteMessage(1, field_names[0], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Filter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConstScoreQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConstScoreQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConstScoreQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConstScoreQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConstScoreQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConstScoreQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConstScoreQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConstScoreQuery result;
      
      private ConstScoreQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          ConstScoreQuery original = result;
          result = new ConstScoreQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConstScoreQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.Descriptor; }
      }
      
      public override ConstScoreQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.DefaultInstance; }
      }
      
      public override ConstScoreQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConstScoreQuery) {
          return MergeFrom((ConstScoreQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConstScoreQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_constScoreQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _constScoreQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.filter_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static ConstScoreQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FieldValueFactor : pb::GeneratedMessage<FieldValueFactor, FieldValueFactor.Builder> {
    private FieldValueFactor() { }
    private static readonly FieldValueFactor defaultInstance = new FieldValueFactor().MakeReadOnly();
    private static readonly string[] _fieldValueFactorFieldNames = new string[] { "field_name" };
    private static readonly uint[] _fieldValueFactorFieldTags = new uint[] { 10 };
    public static FieldValueFactor DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldValueFactor DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldValueFactor ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldValueFactor, FieldValueFactor.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fieldValueFactorFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FieldValueFactor ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldValueFactor ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldValueFactor ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldValueFactor MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldValueFactor prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldValueFactor, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldValueFactor cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldValueFactor result;
      
      private FieldValueFactor PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldValueFactor original = result;
          result = new FieldValueFactor();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldValueFactor MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Descriptor; }
      }
      
      public override FieldValueFactor DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance; }
      }
      
      public override FieldValueFactor BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldValueFactor) {
          return MergeFrom((FieldValueFactor) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldValueFactor other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldValueFactorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldValueFactorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
    }
    static FieldValueFactor() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FunctionScoreQuery : pb::GeneratedMessage<FunctionScoreQuery, FunctionScoreQuery.Builder> {
    private FunctionScoreQuery() { }
    private static readonly FunctionScoreQuery defaultInstance = new FunctionScoreQuery().MakeReadOnly();
    private static readonly string[] _functionScoreQueryFieldNames = new string[] { "field_value_factor", "query" };
    private static readonly uint[] _functionScoreQueryFieldTags = new uint[] { 18, 10 };
    public static FunctionScoreQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FunctionScoreQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FunctionScoreQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FunctionScoreQuery, FunctionScoreQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__FieldAccessorTable; }
    }
    
    public const int QueryFieldNumber = 1;
    private bool hasQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query query_;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
      get { return query_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public const int FieldValueFactorFieldNumber = 2;
    private bool hasFieldValueFactor;
    private global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor fieldValueFactor_;
    public bool HasFieldValueFactor {
      get { return hasFieldValueFactor; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor FieldValueFactor {
      get { return fieldValueFactor_ ?? global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _functionScoreQueryFieldNames;
      if (hasQuery) {
        output.WriteMessage(1, field_names[1], Query);
      }
      if (hasFieldValueFactor) {
        output.WriteMessage(2, field_names[0], FieldValueFactor);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Query);
      }
      if (hasFieldValueFactor) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, FieldValueFactor);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FunctionScoreQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FunctionScoreQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FunctionScoreQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FunctionScoreQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FunctionScoreQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FunctionScoreQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FunctionScoreQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FunctionScoreQuery result;
      
      private FunctionScoreQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          FunctionScoreQuery original = result;
          result = new FunctionScoreQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FunctionScoreQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.Descriptor; }
      }
      
      public override FunctionScoreQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.DefaultInstance; }
      }
      
      public override FunctionScoreQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FunctionScoreQuery) {
          return MergeFrom((FunctionScoreQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FunctionScoreQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasQuery) {
          MergeQuery(other.Query);
        }
        if (other.HasFieldValueFactor) {
          MergeFieldValueFactor(other.FieldValueFactor);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_functionScoreQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _functionScoreQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasQuery) {
                subBuilder.MergeFrom(Query);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Query = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.CreateBuilder();
              if (result.hasFieldValueFactor) {
                subBuilder.MergeFrom(FieldValueFactor);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FieldValueFactor = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasQuery {
       get { return result.hasQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = builderForValue.Build();
        return this;
      }
      public Builder MergeQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasQuery &&
            result.query_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.query_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.query_).MergeFrom(value).BuildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = null;
        return this;
      }
      
      public bool HasFieldValueFactor {
       get { return result.hasFieldValueFactor; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor FieldValueFactor {
        get { return result.FieldValueFactor; }
        set { SetFieldValueFactor(value); }
      }
      public Builder SetFieldValueFactor(global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldValueFactor = true;
        result.fieldValueFactor_ = value;
        return this;
      }
      public Builder SetFieldValueFactor(global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFieldValueFactor = true;
        result.fieldValueFactor_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFieldValueFactor(global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFieldValueFactor &&
            result.fieldValueFactor_ != global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance) {
            result.fieldValueFactor_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.CreateBuilder(result.fieldValueFactor_).MergeFrom(value).BuildPartial();
        } else {
          result.fieldValueFactor_ = value;
        }
        result.hasFieldValueFactor = true;
        return this;
      }
      public Builder ClearFieldValueFactor() {
        PrepareBuilder();
        result.hasFieldValueFactor = false;
        result.fieldValueFactor_ = null;
        return this;
      }
    }
    static FunctionScoreQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NestedQuery : pb::GeneratedMessage<NestedQuery, NestedQuery.Builder> {
    private NestedQuery() { }
    private static readonly NestedQuery defaultInstance = new NestedQuery().MakeReadOnly();
    private static readonly string[] _nestedQueryFieldNames = new string[] { "path", "query", "score_mode" };
    private static readonly uint[] _nestedQueryFieldTags = new uint[] { 10, 18, 24 };
    public static NestedQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NestedQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NestedQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NestedQuery, NestedQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__FieldAccessorTable; }
    }
    
    public const int PathFieldNumber = 1;
    private bool hasPath;
    private string path_ = "";
    public bool HasPath {
      get { return hasPath; }
    }
    public string Path {
      get { return path_; }
    }
    
    public const int QueryFieldNumber = 2;
    private bool hasQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query query_;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
      get { return query_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public const int ScoreModeFieldNumber = 3;
    private bool hasScoreMode;
    private global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode scoreMode_ = global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode.SCORE_MODE_NONE;
    public bool HasScoreMode {
      get { return hasScoreMode; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode ScoreMode {
      get { return scoreMode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nestedQueryFieldNames;
      if (hasPath) {
        output.WriteString(1, field_names[0], Path);
      }
      if (hasQuery) {
        output.WriteMessage(2, field_names[1], Query);
      }
      if (hasScoreMode) {
        output.WriteEnum(3, field_names[2], (int) ScoreMode, ScoreMode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPath) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Path);
      }
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Query);
      }
      if (hasScoreMode) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) ScoreMode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NestedQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NestedQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NestedQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NestedQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NestedQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NestedQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NestedQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NestedQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NestedQuery result;
      
      private NestedQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          NestedQuery original = result;
          result = new NestedQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NestedQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.Descriptor; }
      }
      
      public override NestedQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.DefaultInstance; }
      }
      
      public override NestedQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NestedQuery) {
          return MergeFrom((NestedQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NestedQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPath) {
          Path = other.Path;
        }
        if (other.HasQuery) {
          MergeQuery(other.Query);
        }
        if (other.HasScoreMode) {
          ScoreMode = other.ScoreMode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nestedQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nestedQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPath = input.ReadString(ref result.path_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasQuery) {
                subBuilder.MergeFrom(Query);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Query = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.scoreMode_, out unknown)) {
                result.hasScoreMode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPath {
        get { return result.hasPath; }
      }
      public string Path {
        get { return result.Path; }
        set { SetPath(value); }
      }
      public Builder SetPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder ClearPath() {
        PrepareBuilder();
        result.hasPath = false;
        result.path_ = "";
        return this;
      }
      
      public bool HasQuery {
       get { return result.hasQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = builderForValue.Build();
        return this;
      }
      public Builder MergeQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasQuery &&
            result.query_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.query_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.query_).MergeFrom(value).BuildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = null;
        return this;
      }
      
      public bool HasScoreMode {
       get { return result.hasScoreMode; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode ScoreMode {
        get { return result.ScoreMode; }
        set { SetScoreMode(value); }
      }
      public Builder SetScoreMode(global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode value) {
        PrepareBuilder();
        result.hasScoreMode = true;
        result.scoreMode_ = value;
        return this;
      }
      public Builder ClearScoreMode() {
        PrepareBuilder();
        result.hasScoreMode = false;
        result.scoreMode_ = global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode.SCORE_MODE_NONE;
        return this;
      }
    }
    static NestedQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoBoundingBoxQuery : pb::GeneratedMessage<GeoBoundingBoxQuery, GeoBoundingBoxQuery.Builder> {
    private GeoBoundingBoxQuery() { }
    private static readonly GeoBoundingBoxQuery defaultInstance = new GeoBoundingBoxQuery().MakeReadOnly();
    private static readonly string[] _geoBoundingBoxQueryFieldNames = new string[] { "bottom_right", "field_name", "top_left" };
    private static readonly uint[] _geoBoundingBoxQueryFieldTags = new uint[] { 26, 10, 18 };
    public static GeoBoundingBoxQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoBoundingBoxQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoBoundingBoxQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoBoundingBoxQuery, GeoBoundingBoxQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TopLeftFieldNumber = 2;
    private bool hasTopLeft;
    private string topLeft_ = "";
    public bool HasTopLeft {
      get { return hasTopLeft; }
    }
    public string TopLeft {
      get { return topLeft_; }
    }
    
    public const int BottomRightFieldNumber = 3;
    private bool hasBottomRight;
    private string bottomRight_ = "";
    public bool HasBottomRight {
      get { return hasBottomRight; }
    }
    public string BottomRight {
      get { return bottomRight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoBoundingBoxQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[1], FieldName);
      }
      if (hasTopLeft) {
        output.WriteString(2, field_names[2], TopLeft);
      }
      if (hasBottomRight) {
        output.WriteString(3, field_names[0], BottomRight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasTopLeft) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TopLeft);
      }
      if (hasBottomRight) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BottomRight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoBoundingBoxQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoBoundingBoxQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoBoundingBoxQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoBoundingBoxQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoBoundingBoxQuery result;
      
      private GeoBoundingBoxQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoBoundingBoxQuery original = result;
          result = new GeoBoundingBoxQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoBoundingBoxQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.Descriptor; }
      }
      
      public override GeoBoundingBoxQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.DefaultInstance; }
      }
      
      public override GeoBoundingBoxQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoBoundingBoxQuery) {
          return MergeFrom((GeoBoundingBoxQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoBoundingBoxQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasTopLeft) {
          TopLeft = other.TopLeft;
        }
        if (other.HasBottomRight) {
          BottomRight = other.BottomRight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoBoundingBoxQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoBoundingBoxQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasTopLeft = input.ReadString(ref result.topLeft_);
              break;
            }
            case 26: {
              result.hasBottomRight = input.ReadString(ref result.bottomRight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasTopLeft {
        get { return result.hasTopLeft; }
      }
      public string TopLeft {
        get { return result.TopLeft; }
        set { SetTopLeft(value); }
      }
      public Builder SetTopLeft(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTopLeft = true;
        result.topLeft_ = value;
        return this;
      }
      public Builder ClearTopLeft() {
        PrepareBuilder();
        result.hasTopLeft = false;
        result.topLeft_ = "";
        return this;
      }
      
      public bool HasBottomRight {
        get { return result.hasBottomRight; }
      }
      public string BottomRight {
        get { return result.BottomRight; }
        set { SetBottomRight(value); }
      }
      public Builder SetBottomRight(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBottomRight = true;
        result.bottomRight_ = value;
        return this;
      }
      public Builder ClearBottomRight() {
        PrepareBuilder();
        result.hasBottomRight = false;
        result.bottomRight_ = "";
        return this;
      }
    }
    static GeoBoundingBoxQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoDistanceQuery : pb::GeneratedMessage<GeoDistanceQuery, GeoDistanceQuery.Builder> {
    private GeoDistanceQuery() { }
    private static readonly GeoDistanceQuery defaultInstance = new GeoDistanceQuery().MakeReadOnly();
    private static readonly string[] _geoDistanceQueryFieldNames = new string[] { "center_point", "distance", "field_name" };
    private static readonly uint[] _geoDistanceQueryFieldTags = new uint[] { 18, 25, 10 };
    public static GeoDistanceQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoDistanceQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoDistanceQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoDistanceQuery, GeoDistanceQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int CenterPointFieldNumber = 2;
    private bool hasCenterPoint;
    private string centerPoint_ = "";
    public bool HasCenterPoint {
      get { return hasCenterPoint; }
    }
    public string CenterPoint {
      get { return centerPoint_; }
    }
    
    public const int DistanceFieldNumber = 3;
    private bool hasDistance;
    private double distance_;
    public bool HasDistance {
      get { return hasDistance; }
    }
    public double Distance {
      get { return distance_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoDistanceQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[2], FieldName);
      }
      if (hasCenterPoint) {
        output.WriteString(2, field_names[0], CenterPoint);
      }
      if (hasDistance) {
        output.WriteDouble(3, field_names[1], Distance);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasCenterPoint) {
        size += pb::CodedOutputStream.ComputeStringSize(2, CenterPoint);
      }
      if (hasDistance) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Distance);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoDistanceQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoDistanceQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoDistanceQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoDistanceQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoDistanceQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoDistanceQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoDistanceQuery result;
      
      private GeoDistanceQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoDistanceQuery original = result;
          result = new GeoDistanceQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoDistanceQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.Descriptor; }
      }
      
      public override GeoDistanceQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.DefaultInstance; }
      }
      
      public override GeoDistanceQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoDistanceQuery) {
          return MergeFrom((GeoDistanceQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoDistanceQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasCenterPoint) {
          CenterPoint = other.CenterPoint;
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoDistanceQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoDistanceQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasCenterPoint = input.ReadString(ref result.centerPoint_);
              break;
            }
            case 25: {
              result.hasDistance = input.ReadDouble(ref result.distance_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasCenterPoint {
        get { return result.hasCenterPoint; }
      }
      public string CenterPoint {
        get { return result.CenterPoint; }
        set { SetCenterPoint(value); }
      }
      public Builder SetCenterPoint(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCenterPoint = true;
        result.centerPoint_ = value;
        return this;
      }
      public Builder ClearCenterPoint() {
        PrepareBuilder();
        result.hasCenterPoint = false;
        result.centerPoint_ = "";
        return this;
      }
      
      public bool HasDistance {
        get { return result.hasDistance; }
      }
      public double Distance {
        get { return result.Distance; }
        set { SetDistance(value); }
      }
      public Builder SetDistance(double value) {
        PrepareBuilder();
        result.hasDistance = true;
        result.distance_ = value;
        return this;
      }
      public Builder ClearDistance() {
        PrepareBuilder();
        result.hasDistance = false;
        result.distance_ = 0D;
        return this;
      }
    }
    static GeoDistanceQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoPolygonQuery : pb::GeneratedMessage<GeoPolygonQuery, GeoPolygonQuery.Builder> {
    private GeoPolygonQuery() { }
    private static readonly GeoPolygonQuery defaultInstance = new GeoPolygonQuery().MakeReadOnly();
    private static readonly string[] _geoPolygonQueryFieldNames = new string[] { "field_name", "points" };
    private static readonly uint[] _geoPolygonQueryFieldTags = new uint[] { 10, 18 };
    public static GeoPolygonQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoPolygonQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoPolygonQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoPolygonQuery, GeoPolygonQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int PointsFieldNumber = 2;
    private pbc::PopsicleList<string> points_ = new pbc::PopsicleList<string>();
    public scg::IList<string> PointsList {
      get { return pbc::Lists.AsReadOnly(points_); }
    }
    public int PointsCount {
      get { return points_.Count; }
    }
    public string GetPoints(int index) {
      return points_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoPolygonQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (points_.Count > 0) {
        output.WriteStringArray(2, field_names[1], points_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      {
        int dataSize = 0;
        foreach (string element in PointsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * points_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoPolygonQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoPolygonQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoPolygonQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoPolygonQuery MakeReadOnly() {
      points_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoPolygonQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoPolygonQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoPolygonQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoPolygonQuery result;
      
      private GeoPolygonQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoPolygonQuery original = result;
          result = new GeoPolygonQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoPolygonQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.Descriptor; }
      }
      
      public override GeoPolygonQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.DefaultInstance; }
      }
      
      public override GeoPolygonQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoPolygonQuery) {
          return MergeFrom((GeoPolygonQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoPolygonQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.points_.Count != 0) {
          result.points_.Add(other.points_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoPolygonQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoPolygonQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.points_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> PointsList {
        get { return PrepareBuilder().points_; }
      }
      public int PointsCount {
        get { return result.PointsCount; }
      }
      public string GetPoints(int index) {
        return result.GetPoints(index);
      }
      public Builder SetPoints(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_[index] = value;
        return this;
      }
      public Builder AddPoints(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_.Add(value);
        return this;
      }
      public Builder AddRangePoints(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.points_.Add(values);
        return this;
      }
      public Builder ClearPoints() {
        PrepareBuilder();
        result.points_.Clear();
        return this;
      }
    }
    static GeoPolygonQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Query : pb::GeneratedMessage<Query, Query.Builder> {
    private Query() { }
    private static readonly Query defaultInstance = new Query().MakeReadOnly();
    private static readonly string[] _queryFieldNames = new string[] { "query", "type" };
    private static readonly uint[] _queryFieldTags = new uint[] { 18, 8 };
    public static Query DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Query DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Query ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Query, Query.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.QueryType type_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryType.MATCH_QUERY;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.QueryType Type {
      get { return type_; }
    }
    
    public const int Query_FieldNumber = 2;
    private bool hasQuery_;
    private pb::ByteString query_ = pb::ByteString.Empty;
    public bool HasQuery_ {
      get { return hasQuery_; }
    }
    public pb::ByteString Query_ {
      get { return query_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _queryFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasQuery_) {
        output.WriteBytes(2, field_names[0], Query_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasQuery_) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Query_);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Query ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Query ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Query ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Query ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Query ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Query ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Query ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Query ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Query ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Query ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Query MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Query prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Query, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Query cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Query result;
      
      private Query PrepareBuilder() {
        if (resultIsReadOnly) {
          Query original = result;
          result = new Query();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Query MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Query.Descriptor; }
      }
      
      public override Query DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
      }
      
      public override Query BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Query) {
          return MergeFrom((Query) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Query other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasQuery_) {
          Query_ = other.Query_;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasQuery_ = input.ReadBytes(ref result.query_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.QueryType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.QueryType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryType.MATCH_QUERY;
        return this;
      }
      
      public bool HasQuery_ {
        get { return result.hasQuery_; }
      }
      public pb::ByteString Query_ {
        get { return result.Query_; }
        set { SetQuery_(value); }
      }
      public Builder SetQuery_(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery_ = true;
        result.query_ = value;
        return this;
      }
      public Builder ClearQuery_() {
        PrepareBuilder();
        result.hasQuery_ = false;
        result.query_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Query() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Collapse : pb::GeneratedMessage<Collapse, Collapse.Builder> {
    private Collapse() { }
    private static readonly Collapse defaultInstance = new Collapse().MakeReadOnly();
    private static readonly string[] _collapseFieldNames = new string[] { "field_name" };
    private static readonly uint[] _collapseFieldTags = new uint[] { 10 };
    public static Collapse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Collapse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Collapse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Collapse, Collapse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _collapseFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Collapse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collapse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collapse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collapse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collapse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collapse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Collapse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Collapse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Collapse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collapse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Collapse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Collapse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Collapse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Collapse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Collapse result;
      
      private Collapse PrepareBuilder() {
        if (resultIsReadOnly) {
          Collapse original = result;
          result = new Collapse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Collapse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Descriptor; }
      }
      
      public override Collapse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance; }
      }
      
      public override Collapse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Collapse) {
          return MergeFrom((Collapse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Collapse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_collapseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _collapseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
    }
    static Collapse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NestedFilter : pb::GeneratedMessage<NestedFilter, NestedFilter.Builder> {
    private NestedFilter() { }
    private static readonly NestedFilter defaultInstance = new NestedFilter().MakeReadOnly();
    private static readonly string[] _nestedFilterFieldNames = new string[] { "filter", "path" };
    private static readonly uint[] _nestedFilterFieldTags = new uint[] { 18, 10 };
    public static NestedFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NestedFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NestedFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NestedFilter, NestedFilter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__FieldAccessorTable; }
    }
    
    public const int PathFieldNumber = 1;
    private bool hasPath;
    private string path_ = "";
    public bool HasPath {
      get { return hasPath; }
    }
    public string Path {
      get { return path_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
      get { return filter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nestedFilterFieldNames;
      if (hasPath) {
        output.WriteString(1, field_names[1], Path);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[0], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPath) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Path);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NestedFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NestedFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NestedFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NestedFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NestedFilter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NestedFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NestedFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NestedFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NestedFilter result;
      
      private NestedFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          NestedFilter original = result;
          result = new NestedFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NestedFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Descriptor; }
      }
      
      public override NestedFilter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance; }
      }
      
      public override NestedFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NestedFilter) {
          return MergeFrom((NestedFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NestedFilter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPath) {
          Path = other.Path;
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nestedFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nestedFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPath = input.ReadString(ref result.path_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPath {
        get { return result.hasPath; }
      }
      public string Path {
        get { return result.Path; }
        set { SetPath(value); }
      }
      public Builder SetPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder ClearPath() {
        PrepareBuilder();
        result.hasPath = false;
        result.path_ = "";
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.filter_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static NestedFilter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScoreSort : pb::GeneratedMessage<ScoreSort, ScoreSort.Builder> {
    private ScoreSort() { }
    private static readonly ScoreSort defaultInstance = new ScoreSort().MakeReadOnly();
    private static readonly string[] _scoreSortFieldNames = new string[] { "order" };
    private static readonly uint[] _scoreSortFieldTags = new uint[] { 8 };
    public static ScoreSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ScoreSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ScoreSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ScoreSort, ScoreSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _scoreSortFieldNames;
      if (hasOrder) {
        output.WriteEnum(1, field_names[0], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ScoreSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScoreSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScoreSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScoreSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScoreSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScoreSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ScoreSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ScoreSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ScoreSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScoreSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ScoreSort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ScoreSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ScoreSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ScoreSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ScoreSort result;
      
      private ScoreSort PrepareBuilder() {
        if (resultIsReadOnly) {
          ScoreSort original = result;
          result = new ScoreSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ScoreSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Descriptor; }
      }
      
      public override ScoreSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance; }
      }
      
      public override ScoreSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ScoreSort) {
          return MergeFrom((ScoreSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ScoreSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_scoreSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _scoreSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
    }
    static ScoreSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PrimaryKeySort : pb::GeneratedMessage<PrimaryKeySort, PrimaryKeySort.Builder> {
    private PrimaryKeySort() { }
    private static readonly PrimaryKeySort defaultInstance = new PrimaryKeySort().MakeReadOnly();
    private static readonly string[] _primaryKeySortFieldNames = new string[] { "order" };
    private static readonly uint[] _primaryKeySortFieldTags = new uint[] { 8 };
    public static PrimaryKeySort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PrimaryKeySort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PrimaryKeySort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PrimaryKeySort, PrimaryKeySort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _primaryKeySortFieldNames;
      if (hasOrder) {
        output.WriteEnum(1, field_names[0], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PrimaryKeySort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PrimaryKeySort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PrimaryKeySort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PrimaryKeySort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PrimaryKeySort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PrimaryKeySort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PrimaryKeySort result;
      
      private PrimaryKeySort PrepareBuilder() {
        if (resultIsReadOnly) {
          PrimaryKeySort original = result;
          result = new PrimaryKeySort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PrimaryKeySort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Descriptor; }
      }
      
      public override PrimaryKeySort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance; }
      }
      
      public override PrimaryKeySort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PrimaryKeySort) {
          return MergeFrom((PrimaryKeySort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PrimaryKeySort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_primaryKeySortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _primaryKeySortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
    }
    static PrimaryKeySort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FieldSort : pb::GeneratedMessage<FieldSort, FieldSort.Builder> {
    private FieldSort() { }
    private static readonly FieldSort defaultInstance = new FieldSort().MakeReadOnly();
    private static readonly string[] _fieldSortFieldNames = new string[] { "field_name", "mode", "nested_filter", "order" };
    private static readonly uint[] _fieldSortFieldTags = new uint[] { 10, 24, 34, 16 };
    public static FieldSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldSort, FieldSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int OrderFieldNumber = 2;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public const int ModeFieldNumber = 3;
    private bool hasMode;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortMode mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
    public bool HasMode {
      get { return hasMode; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
      get { return mode_; }
    }
    
    public const int NestedFilterFieldNumber = 4;
    private bool hasNestedFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter nestedFilter_;
    public bool HasNestedFilter {
      get { return hasNestedFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
      get { return nestedFilter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fieldSortFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasOrder) {
        output.WriteEnum(2, field_names[3], (int) Order, Order);
      }
      if (hasMode) {
        output.WriteEnum(3, field_names[1], (int) Mode, Mode);
      }
      if (hasNestedFilter) {
        output.WriteMessage(4, field_names[2], NestedFilter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Order);
      }
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Mode);
      }
      if (hasNestedFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, NestedFilter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FieldSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldSort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldSort result;
      
      private FieldSort PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldSort original = result;
          result = new FieldSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Descriptor; }
      }
      
      public override FieldSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance; }
      }
      
      public override FieldSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldSort) {
          return MergeFrom((FieldSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasNestedFilter) {
          MergeNestedFilter(other.NestedFilter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.mode_, out unknown)) {
                result.hasMode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder();
              if (result.hasNestedFilter) {
                subBuilder.MergeFrom(NestedFilter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NestedFilter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
      
      public bool HasMode {
       get { return result.hasMode; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      public Builder SetMode(global::com.alicloud.openservices.tablestore.core.protocol.SortMode value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
        return this;
      }
      
      public bool HasNestedFilter {
       get { return result.hasNestedFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
        get { return result.NestedFilter; }
        set { SetNestedFilter(value); }
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = value;
        return this;
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNestedFilter &&
            result.nestedFilter_ != global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance) {
            result.nestedFilter_ = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder(result.nestedFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.nestedFilter_ = value;
        }
        result.hasNestedFilter = true;
        return this;
      }
      public Builder ClearNestedFilter() {
        PrepareBuilder();
        result.hasNestedFilter = false;
        result.nestedFilter_ = null;
        return this;
      }
    }
    static FieldSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoDistanceSort : pb::GeneratedMessage<GeoDistanceSort, GeoDistanceSort.Builder> {
    private GeoDistanceSort() { }
    private static readonly GeoDistanceSort defaultInstance = new GeoDistanceSort().MakeReadOnly();
    private static readonly string[] _geoDistanceSortFieldNames = new string[] { "distance_type", "field_name", "mode", "nested_filter", "order", "points" };
    private static readonly uint[] _geoDistanceSortFieldTags = new uint[] { 40, 10, 32, 50, 24, 18 };
    public static GeoDistanceSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoDistanceSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoDistanceSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoDistanceSort, GeoDistanceSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int PointsFieldNumber = 2;
    private pbc::PopsicleList<string> points_ = new pbc::PopsicleList<string>();
    public scg::IList<string> PointsList {
      get { return pbc::Lists.AsReadOnly(points_); }
    }
    public int PointsCount {
      get { return points_.Count; }
    }
    public string GetPoints(int index) {
      return points_[index];
    }
    
    public const int OrderFieldNumber = 3;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public const int ModeFieldNumber = 4;
    private bool hasMode;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortMode mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
    public bool HasMode {
      get { return hasMode; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
      get { return mode_; }
    }
    
    public const int DistanceTypeFieldNumber = 5;
    private bool hasDistanceType;
    private global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType distanceType_ = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType.GEO_DISTANCE_ARC;
    public bool HasDistanceType {
      get { return hasDistanceType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType DistanceType {
      get { return distanceType_; }
    }
    
    public const int NestedFilterFieldNumber = 6;
    private bool hasNestedFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter nestedFilter_;
    public bool HasNestedFilter {
      get { return hasNestedFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
      get { return nestedFilter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoDistanceSortFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[1], FieldName);
      }
      if (points_.Count > 0) {
        output.WriteStringArray(2, field_names[5], points_);
      }
      if (hasOrder) {
        output.WriteEnum(3, field_names[4], (int) Order, Order);
      }
      if (hasMode) {
        output.WriteEnum(4, field_names[2], (int) Mode, Mode);
      }
      if (hasDistanceType) {
        output.WriteEnum(5, field_names[0], (int) DistanceType, DistanceType);
      }
      if (hasNestedFilter) {
        output.WriteMessage(6, field_names[3], NestedFilter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      {
        int dataSize = 0;
        foreach (string element in PointsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * points_.Count;
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Order);
      }
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Mode);
      }
      if (hasDistanceType) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) DistanceType);
      }
      if (hasNestedFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, NestedFilter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoDistanceSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoDistanceSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoDistanceSort MakeReadOnly() {
      points_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoDistanceSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoDistanceSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoDistanceSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoDistanceSort result;
      
      private GeoDistanceSort PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoDistanceSort original = result;
          result = new GeoDistanceSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoDistanceSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Descriptor; }
      }
      
      public override GeoDistanceSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance; }
      }
      
      public override GeoDistanceSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoDistanceSort) {
          return MergeFrom((GeoDistanceSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoDistanceSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.points_.Count != 0) {
          result.points_.Add(other.points_);
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasDistanceType) {
          DistanceType = other.DistanceType;
        }
        if (other.HasNestedFilter) {
          MergeNestedFilter(other.NestedFilter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoDistanceSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoDistanceSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.points_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.mode_, out unknown)) {
                result.hasMode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.distanceType_, out unknown)) {
                result.hasDistanceType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder();
              if (result.hasNestedFilter) {
                subBuilder.MergeFrom(NestedFilter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NestedFilter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> PointsList {
        get { return PrepareBuilder().points_; }
      }
      public int PointsCount {
        get { return result.PointsCount; }
      }
      public string GetPoints(int index) {
        return result.GetPoints(index);
      }
      public Builder SetPoints(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_[index] = value;
        return this;
      }
      public Builder AddPoints(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_.Add(value);
        return this;
      }
      public Builder AddRangePoints(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.points_.Add(values);
        return this;
      }
      public Builder ClearPoints() {
        PrepareBuilder();
        result.points_.Clear();
        return this;
      }
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
      
      public bool HasMode {
       get { return result.hasMode; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      public Builder SetMode(global::com.alicloud.openservices.tablestore.core.protocol.SortMode value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
        return this;
      }
      
      public bool HasDistanceType {
       get { return result.hasDistanceType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType DistanceType {
        get { return result.DistanceType; }
        set { SetDistanceType(value); }
      }
      public Builder SetDistanceType(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType value) {
        PrepareBuilder();
        result.hasDistanceType = true;
        result.distanceType_ = value;
        return this;
      }
      public Builder ClearDistanceType() {
        PrepareBuilder();
        result.hasDistanceType = false;
        result.distanceType_ = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType.GEO_DISTANCE_ARC;
        return this;
      }
      
      public bool HasNestedFilter {
       get { return result.hasNestedFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
        get { return result.NestedFilter; }
        set { SetNestedFilter(value); }
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = value;
        return this;
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNestedFilter &&
            result.nestedFilter_ != global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance) {
            result.nestedFilter_ = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder(result.nestedFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.nestedFilter_ = value;
        }
        result.hasNestedFilter = true;
        return this;
      }
      public Builder ClearNestedFilter() {
        PrepareBuilder();
        result.hasNestedFilter = false;
        result.nestedFilter_ = null;
        return this;
      }
    }
    static GeoDistanceSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Sorter : pb::GeneratedMessage<Sorter, Sorter.Builder> {
    private Sorter() { }
    private static readonly Sorter defaultInstance = new Sorter().MakeReadOnly();
    private static readonly string[] _sorterFieldNames = new string[] { "field_sort", "geo_distance_sort", "pk_sort", "score_sort" };
    private static readonly uint[] _sorterFieldTags = new uint[] { 10, 18, 34, 26 };
    public static Sorter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Sorter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Sorter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Sorter, Sorter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__FieldAccessorTable; }
    }
    
    public const int FieldSortFieldNumber = 1;
    private bool hasFieldSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.FieldSort fieldSort_;
    public bool HasFieldSort {
      get { return hasFieldSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldSort FieldSort {
      get { return fieldSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance; }
    }
    
    public const int GeoDistanceSortFieldNumber = 2;
    private bool hasGeoDistanceSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort geoDistanceSort_;
    public bool HasGeoDistanceSort {
      get { return hasGeoDistanceSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort GeoDistanceSort {
      get { return geoDistanceSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance; }
    }
    
    public const int ScoreSortFieldNumber = 3;
    private bool hasScoreSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort scoreSort_;
    public bool HasScoreSort {
      get { return hasScoreSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort ScoreSort {
      get { return scoreSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance; }
    }
    
    public const int PkSortFieldNumber = 4;
    private bool hasPkSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort pkSort_;
    public bool HasPkSort {
      get { return hasPkSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort PkSort {
      get { return pkSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sorterFieldNames;
      if (hasFieldSort) {
        output.WriteMessage(1, field_names[0], FieldSort);
      }
      if (hasGeoDistanceSort) {
        output.WriteMessage(2, field_names[1], GeoDistanceSort);
      }
      if (hasScoreSort) {
        output.WriteMessage(3, field_names[3], ScoreSort);
      }
      if (hasPkSort) {
        output.WriteMessage(4, field_names[2], PkSort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, FieldSort);
      }
      if (hasGeoDistanceSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, GeoDistanceSort);
      }
      if (hasScoreSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, ScoreSort);
      }
      if (hasPkSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, PkSort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Sorter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sorter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sorter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sorter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sorter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sorter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Sorter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Sorter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Sorter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sorter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Sorter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Sorter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Sorter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Sorter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Sorter result;
      
      private Sorter PrepareBuilder() {
        if (resultIsReadOnly) {
          Sorter original = result;
          result = new Sorter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Sorter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Descriptor; }
      }
      
      public override Sorter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sorter.DefaultInstance; }
      }
      
      public override Sorter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Sorter) {
          return MergeFrom((Sorter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Sorter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Sorter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldSort) {
          MergeFieldSort(other.FieldSort);
        }
        if (other.HasGeoDistanceSort) {
          MergeGeoDistanceSort(other.GeoDistanceSort);
        }
        if (other.HasScoreSort) {
          MergeScoreSort(other.ScoreSort);
        }
        if (other.HasPkSort) {
          MergePkSort(other.PkSort);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sorterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sorterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.CreateBuilder();
              if (result.hasFieldSort) {
                subBuilder.MergeFrom(FieldSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FieldSort = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.CreateBuilder();
              if (result.hasGeoDistanceSort) {
                subBuilder.MergeFrom(GeoDistanceSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GeoDistanceSort = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.CreateBuilder();
              if (result.hasScoreSort) {
                subBuilder.MergeFrom(ScoreSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ScoreSort = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.CreateBuilder();
              if (result.hasPkSort) {
                subBuilder.MergeFrom(PkSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PkSort = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldSort {
       get { return result.hasFieldSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldSort FieldSort {
        get { return result.FieldSort; }
        set { SetFieldSort(value); }
      }
      public Builder SetFieldSort(global::com.alicloud.openservices.tablestore.core.protocol.FieldSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldSort = true;
        result.fieldSort_ = value;
        return this;
      }
      public Builder SetFieldSort(global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFieldSort = true;
        result.fieldSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFieldSort(global::com.alicloud.openservices.tablestore.core.protocol.FieldSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFieldSort &&
            result.fieldSort_ != global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance) {
            result.fieldSort_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.CreateBuilder(result.fieldSort_).MergeFrom(value).BuildPartial();
        } else {
          result.fieldSort_ = value;
        }
        result.hasFieldSort = true;
        return this;
      }
      public Builder ClearFieldSort() {
        PrepareBuilder();
        result.hasFieldSort = false;
        result.fieldSort_ = null;
        return this;
      }
      
      public bool HasGeoDistanceSort {
       get { return result.hasGeoDistanceSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort GeoDistanceSort {
        get { return result.GeoDistanceSort; }
        set { SetGeoDistanceSort(value); }
      }
      public Builder SetGeoDistanceSort(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGeoDistanceSort = true;
        result.geoDistanceSort_ = value;
        return this;
      }
      public Builder SetGeoDistanceSort(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGeoDistanceSort = true;
        result.geoDistanceSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGeoDistanceSort(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGeoDistanceSort &&
            result.geoDistanceSort_ != global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance) {
            result.geoDistanceSort_ = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.CreateBuilder(result.geoDistanceSort_).MergeFrom(value).BuildPartial();
        } else {
          result.geoDistanceSort_ = value;
        }
        result.hasGeoDistanceSort = true;
        return this;
      }
      public Builder ClearGeoDistanceSort() {
        PrepareBuilder();
        result.hasGeoDistanceSort = false;
        result.geoDistanceSort_ = null;
        return this;
      }
      
      public bool HasScoreSort {
       get { return result.hasScoreSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort ScoreSort {
        get { return result.ScoreSort; }
        set { SetScoreSort(value); }
      }
      public Builder SetScoreSort(global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScoreSort = true;
        result.scoreSort_ = value;
        return this;
      }
      public Builder SetScoreSort(global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScoreSort = true;
        result.scoreSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScoreSort(global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScoreSort &&
            result.scoreSort_ != global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance) {
            result.scoreSort_ = global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.CreateBuilder(result.scoreSort_).MergeFrom(value).BuildPartial();
        } else {
          result.scoreSort_ = value;
        }
        result.hasScoreSort = true;
        return this;
      }
      public Builder ClearScoreSort() {
        PrepareBuilder();
        result.hasScoreSort = false;
        result.scoreSort_ = null;
        return this;
      }
      
      public bool HasPkSort {
       get { return result.hasPkSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort PkSort {
        get { return result.PkSort; }
        set { SetPkSort(value); }
      }
      public Builder SetPkSort(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPkSort = true;
        result.pkSort_ = value;
        return this;
      }
      public Builder SetPkSort(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPkSort = true;
        result.pkSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergePkSort(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPkSort &&
            result.pkSort_ != global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance) {
            result.pkSort_ = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.CreateBuilder(result.pkSort_).MergeFrom(value).BuildPartial();
        } else {
          result.pkSort_ = value;
        }
        result.hasPkSort = true;
        return this;
      }
      public Builder ClearPkSort() {
        PrepareBuilder();
        result.hasPkSort = false;
        result.pkSort_ = null;
        return this;
      }
    }
    static Sorter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Sort : pb::GeneratedMessage<Sort, Sort.Builder> {
    private Sort() { }
    private static readonly Sort defaultInstance = new Sort().MakeReadOnly();
    private static readonly string[] _sortFieldNames = new string[] { "sorter" };
    private static readonly uint[] _sortFieldTags = new uint[] { 10 };
    public static Sort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Sort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Sort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Sort, Sort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__FieldAccessorTable; }
    }
    
    public const int SorterFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> sorter_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> SorterList {
      get { return sorter_; }
    }
    public int SorterCount {
      get { return sorter_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Sorter GetSorter(int index) {
      return sorter_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sortFieldNames;
      if (sorter_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], sorter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Sorter element in SorterList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Sort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Sort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Sort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Sort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Sort MakeReadOnly() {
      sorter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Sort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Sort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Sort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Sort result;
      
      private Sort PrepareBuilder() {
        if (resultIsReadOnly) {
          Sort original = result;
          result = new Sort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Sort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sort.Descriptor; }
      }
      
      public override Sort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance; }
      }
      
      public override Sort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Sort) {
          return MergeFrom((Sort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Sort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.sorter_.Count != 0) {
          result.sorter_.Add(other.sorter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.sorter_, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> SorterList {
        get { return PrepareBuilder().sorter_; }
      }
      public int SorterCount {
        get { return result.SorterCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Sorter GetSorter(int index) {
        return result.GetSorter(index);
      }
      public Builder SetSorter(int index, global::com.alicloud.openservices.tablestore.core.protocol.Sorter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sorter_[index] = value;
        return this;
      }
      public Builder SetSorter(int index, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sorter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSorter(global::com.alicloud.openservices.tablestore.core.protocol.Sorter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sorter_.Add(value);
        return this;
      }
      public Builder AddSorter(global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sorter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSorter(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> values) {
        PrepareBuilder();
        result.sorter_.Add(values);
        return this;
      }
      public Builder ClearSorter() {
        PrepareBuilder();
        result.sorter_.Clear();
        return this;
      }
    }
    static Sort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchQuery : pb::GeneratedMessage<SearchQuery, SearchQuery.Builder> {
    private SearchQuery() { }
    private static readonly SearchQuery defaultInstance = new SearchQuery().MakeReadOnly();
    private static readonly string[] _searchQueryFieldNames = new string[] { "collapse", "getTotalCount", "limit", "offset", "query", "sort", "token" };
    private static readonly uint[] _searchQueryFieldTags = new uint[] { 42, 64, 16, 8, 34, 50, 74 };
    public static SearchQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchQuery, SearchQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__FieldAccessorTable; }
    }
    
    public const int OffsetFieldNumber = 1;
    private bool hasOffset;
    private int offset_;
    public bool HasOffset {
      get { return hasOffset; }
    }
    public int Offset {
      get { return offset_; }
    }
    
    public const int LimitFieldNumber = 2;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public const int QueryFieldNumber = 4;
    private bool hasQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query query_;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
      get { return query_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public const int CollapseFieldNumber = 5;
    private bool hasCollapse;
    private global::com.alicloud.openservices.tablestore.core.protocol.Collapse collapse_;
    public bool HasCollapse {
      get { return hasCollapse; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Collapse Collapse {
      get { return collapse_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance; }
    }
    
    public const int SortFieldNumber = 6;
    private bool hasSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.Sort sort_;
    public bool HasSort {
      get { return hasSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Sort Sort {
      get { return sort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance; }
    }
    
    public const int GetTotalCountFieldNumber = 8;
    private bool hasGetTotalCount;
    private bool getTotalCount_;
    public bool HasGetTotalCount {
      get { return hasGetTotalCount; }
    }
    public bool GetTotalCount {
      get { return getTotalCount_; }
    }
    
    public const int TokenFieldNumber = 9;
    private bool hasToken;
    private pb::ByteString token_ = pb::ByteString.Empty;
    public bool HasToken {
      get { return hasToken; }
    }
    public pb::ByteString Token {
      get { return token_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchQueryFieldNames;
      if (hasOffset) {
        output.WriteInt32(1, field_names[3], Offset);
      }
      if (hasLimit) {
        output.WriteInt32(2, field_names[2], Limit);
      }
      if (hasQuery) {
        output.WriteMessage(4, field_names[4], Query);
      }
      if (hasCollapse) {
        output.WriteMessage(5, field_names[0], Collapse);
      }
      if (hasSort) {
        output.WriteMessage(6, field_names[5], Sort);
      }
      if (hasGetTotalCount) {
        output.WriteBool(8, field_names[1], GetTotalCount);
      }
      if (hasToken) {
        output.WriteBytes(9, field_names[6], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOffset) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Offset);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Limit);
      }
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Query);
      }
      if (hasCollapse) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, Collapse);
      }
      if (hasSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Sort);
      }
      if (hasGetTotalCount) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, GetTotalCount);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(9, Token);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchQuery result;
      
      private SearchQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchQuery original = result;
          result = new SearchQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.Descriptor; }
      }
      
      public override SearchQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.DefaultInstance; }
      }
      
      public override SearchQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchQuery) {
          return MergeFrom((SearchQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffset) {
          Offset = other.Offset;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        if (other.HasQuery) {
          MergeQuery(other.Query);
        }
        if (other.HasCollapse) {
          MergeCollapse(other.Collapse);
        }
        if (other.HasSort) {
          MergeSort(other.Sort);
        }
        if (other.HasGetTotalCount) {
          GetTotalCount = other.GetTotalCount;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOffset = input.ReadInt32(ref result.offset_);
              break;
            }
            case 16: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasQuery) {
                subBuilder.MergeFrom(Query);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Query = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Collapse.CreateBuilder();
              if (result.hasCollapse) {
                subBuilder.MergeFrom(Collapse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Collapse = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder();
              if (result.hasSort) {
                subBuilder.MergeFrom(Sort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Sort = subBuilder.BuildPartial();
              break;
            }
            case 64: {
              result.hasGetTotalCount = input.ReadBool(ref result.getTotalCount_);
              break;
            }
            case 74: {
              result.hasToken = input.ReadBytes(ref result.token_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffset {
        get { return result.hasOffset; }
      }
      public int Offset {
        get { return result.Offset; }
        set { SetOffset(value); }
      }
      public Builder SetOffset(int value) {
        PrepareBuilder();
        result.hasOffset = true;
        result.offset_ = value;
        return this;
      }
      public Builder ClearOffset() {
        PrepareBuilder();
        result.hasOffset = false;
        result.offset_ = 0;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      public bool HasQuery {
       get { return result.hasQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = builderForValue.Build();
        return this;
      }
      public Builder MergeQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasQuery &&
            result.query_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.query_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.query_).MergeFrom(value).BuildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = null;
        return this;
      }
      
      public bool HasCollapse {
       get { return result.hasCollapse; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Collapse Collapse {
        get { return result.Collapse; }
        set { SetCollapse(value); }
      }
      public Builder SetCollapse(global::com.alicloud.openservices.tablestore.core.protocol.Collapse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCollapse = true;
        result.collapse_ = value;
        return this;
      }
      public Builder SetCollapse(global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCollapse = true;
        result.collapse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCollapse(global::com.alicloud.openservices.tablestore.core.protocol.Collapse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCollapse &&
            result.collapse_ != global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance) {
            result.collapse_ = global::com.alicloud.openservices.tablestore.core.protocol.Collapse.CreateBuilder(result.collapse_).MergeFrom(value).BuildPartial();
        } else {
          result.collapse_ = value;
        }
        result.hasCollapse = true;
        return this;
      }
      public Builder ClearCollapse() {
        PrepareBuilder();
        result.hasCollapse = false;
        result.collapse_ = null;
        return this;
      }
      
      public bool HasSort {
       get { return result.hasSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Sort Sort {
        get { return result.Sort; }
        set { SetSort(value); }
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = value;
        return this;
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSort &&
            result.sort_ != global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance) {
            result.sort_ = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder(result.sort_).MergeFrom(value).BuildPartial();
        } else {
          result.sort_ = value;
        }
        result.hasSort = true;
        return this;
      }
      public Builder ClearSort() {
        PrepareBuilder();
        result.hasSort = false;
        result.sort_ = null;
        return this;
      }
      
      public bool HasGetTotalCount {
        get { return result.hasGetTotalCount; }
      }
      public bool GetTotalCount {
        get { return result.GetTotalCount; }
        set { SetGetTotalCount(value); }
      }
      public Builder SetGetTotalCount(bool value) {
        PrepareBuilder();
        result.hasGetTotalCount = true;
        result.getTotalCount_ = value;
        return this;
      }
      public Builder ClearGetTotalCount() {
        PrepareBuilder();
        result.hasGetTotalCount = false;
        result.getTotalCount_ = false;
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public pb::ByteString Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = pb::ByteString.Empty;
        return this;
      }
    }
    static SearchQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnsToGet : pb::GeneratedMessage<ColumnsToGet, ColumnsToGet.Builder> {
    private ColumnsToGet() { }
    private static readonly ColumnsToGet defaultInstance = new ColumnsToGet().MakeReadOnly();
    private static readonly string[] _columnsToGetFieldNames = new string[] { "column_names", "return_type" };
    private static readonly uint[] _columnsToGetFieldTags = new uint[] { 18, 8 };
    public static ColumnsToGet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnsToGet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnsToGet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnsToGet, ColumnsToGet.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__FieldAccessorTable; }
    }
    
    public const int ReturnTypeFieldNumber = 1;
    private bool hasReturnType;
    private global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType returnType_ = global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType.RETURN_ALL;
    public bool HasReturnType {
      get { return hasReturnType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType ReturnType {
      get { return returnType_; }
    }
    
    public const int ColumnNamesFieldNumber = 2;
    private pbc::PopsicleList<string> columnNames_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnNamesList {
      get { return pbc::Lists.AsReadOnly(columnNames_); }
    }
    public int ColumnNamesCount {
      get { return columnNames_.Count; }
    }
    public string GetColumnNames(int index) {
      return columnNames_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _columnsToGetFieldNames;
      if (hasReturnType) {
        output.WriteEnum(1, field_names[1], (int) ReturnType, ReturnType);
      }
      if (columnNames_.Count > 0) {
        output.WriteStringArray(2, field_names[0], columnNames_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReturnType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ReturnType);
      }
      {
        int dataSize = 0;
        foreach (string element in ColumnNamesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * columnNames_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ColumnsToGet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnsToGet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnsToGet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnsToGet MakeReadOnly() {
      columnNames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnsToGet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnsToGet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnsToGet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnsToGet result;
      
      private ColumnsToGet PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnsToGet original = result;
          result = new ColumnsToGet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnsToGet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Descriptor; }
      }
      
      public override ColumnsToGet DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance; }
      }
      
      public override ColumnsToGet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnsToGet) {
          return MergeFrom((ColumnsToGet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnsToGet other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReturnType) {
          ReturnType = other.ReturnType;
        }
        if (other.columnNames_.Count != 0) {
          result.columnNames_.Add(other.columnNames_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnsToGetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnsToGetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.returnType_, out unknown)) {
                result.hasReturnType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.columnNames_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReturnType {
       get { return result.hasReturnType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType ReturnType {
        get { return result.ReturnType; }
        set { SetReturnType(value); }
      }
      public Builder SetReturnType(global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType value) {
        PrepareBuilder();
        result.hasReturnType = true;
        result.returnType_ = value;
        return this;
      }
      public Builder ClearReturnType() {
        PrepareBuilder();
        result.hasReturnType = false;
        result.returnType_ = global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType.RETURN_ALL;
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnNamesList {
        get { return PrepareBuilder().columnNames_; }
      }
      public int ColumnNamesCount {
        get { return result.ColumnNamesCount; }
      }
      public string GetColumnNames(int index) {
        return result.GetColumnNames(index);
      }
      public Builder SetColumnNames(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnNames_[index] = value;
        return this;
      }
      public Builder AddColumnNames(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnNames_.Add(value);
        return this;
      }
      public Builder AddRangeColumnNames(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnNames_.Add(values);
        return this;
      }
      public Builder ClearColumnNames() {
        PrepareBuilder();
        result.columnNames_.Clear();
        return this;
      }
    }
    static ColumnsToGet() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchRequest : pb::GeneratedMessage<SearchRequest, SearchRequest.Builder> {
    private SearchRequest() { }
    private static readonly SearchRequest defaultInstance = new SearchRequest().MakeReadOnly();
    private static readonly string[] _searchRequestFieldNames = new string[] { "columns_to_get", "index_name", "routing_values", "search_query", "table_name" };
    private static readonly uint[] _searchRequestFieldTags = new uint[] { 26, 18, 42, 34, 10 };
    public static SearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchRequest, SearchRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private bool hasColumnsToGet;
    private global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet columnsToGet_;
    public bool HasColumnsToGet {
      get { return hasColumnsToGet; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet ColumnsToGet {
      get { return columnsToGet_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance; }
    }
    
    public const int SearchQueryFieldNumber = 4;
    private bool hasSearchQuery;
    private pb::ByteString searchQuery_ = pb::ByteString.Empty;
    public bool HasSearchQuery {
      get { return hasSearchQuery; }
    }
    public pb::ByteString SearchQuery {
      get { return searchQuery_; }
    }
    
    public const int RoutingValuesFieldNumber = 5;
    private pbc::PopsicleList<pb::ByteString> routingValues_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> RoutingValuesList {
      get { return pbc::Lists.AsReadOnly(routingValues_); }
    }
    public int RoutingValuesCount {
      get { return routingValues_.Count; }
    }
    public pb::ByteString GetRoutingValues(int index) {
      return routingValues_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[4], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[1], IndexName);
      }
      if (hasColumnsToGet) {
        output.WriteMessage(3, field_names[0], ColumnsToGet);
      }
      if (hasSearchQuery) {
        output.WriteBytes(4, field_names[3], SearchQuery);
      }
      if (routingValues_.Count > 0) {
        output.WriteBytesArray(5, field_names[2], routingValues_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      if (hasColumnsToGet) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, ColumnsToGet);
      }
      if (hasSearchQuery) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, SearchQuery);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in RoutingValuesList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * routingValues_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchRequest MakeReadOnly() {
      routingValues_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchRequest result;
      
      private SearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchRequest original = result;
          result = new SearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.Descriptor; }
      }
      
      public override SearchRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.DefaultInstance; }
      }
      
      public override SearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchRequest) {
          return MergeFrom((SearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        if (other.HasColumnsToGet) {
          MergeColumnsToGet(other.ColumnsToGet);
        }
        if (other.HasSearchQuery) {
          SearchQuery = other.SearchQuery;
        }
        if (other.routingValues_.Count != 0) {
          result.routingValues_.Add(other.routingValues_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.CreateBuilder();
              if (result.hasColumnsToGet) {
                subBuilder.MergeFrom(ColumnsToGet);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ColumnsToGet = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasSearchQuery = input.ReadBytes(ref result.searchQuery_);
              break;
            }
            case 42: {
              input.ReadBytesArray(tag, field_name, result.routingValues_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
      
      public bool HasColumnsToGet {
       get { return result.hasColumnsToGet; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet ColumnsToGet {
        get { return result.ColumnsToGet; }
        set { SetColumnsToGet(value); }
      }
      public Builder SetColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnsToGet = true;
        result.columnsToGet_ = value;
        return this;
      }
      public Builder SetColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasColumnsToGet = true;
        result.columnsToGet_ = builderForValue.Build();
        return this;
      }
      public Builder MergeColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasColumnsToGet &&
            result.columnsToGet_ != global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance) {
            result.columnsToGet_ = global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.CreateBuilder(result.columnsToGet_).MergeFrom(value).BuildPartial();
        } else {
          result.columnsToGet_ = value;
        }
        result.hasColumnsToGet = true;
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.hasColumnsToGet = false;
        result.columnsToGet_ = null;
        return this;
      }
      
      public bool HasSearchQuery {
        get { return result.hasSearchQuery; }
      }
      public pb::ByteString SearchQuery {
        get { return result.SearchQuery; }
        set { SetSearchQuery(value); }
      }
      public Builder SetSearchQuery(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSearchQuery = true;
        result.searchQuery_ = value;
        return this;
      }
      public Builder ClearSearchQuery() {
        PrepareBuilder();
        result.hasSearchQuery = false;
        result.searchQuery_ = pb::ByteString.Empty;
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> RoutingValuesList {
        get { return PrepareBuilder().routingValues_; }
      }
      public int RoutingValuesCount {
        get { return result.RoutingValuesCount; }
      }
      public pb::ByteString GetRoutingValues(int index) {
        return result.GetRoutingValues(index);
      }
      public Builder SetRoutingValues(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingValues_[index] = value;
        return this;
      }
      public Builder AddRoutingValues(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingValues_.Add(value);
        return this;
      }
      public Builder AddRangeRoutingValues(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.routingValues_.Add(values);
        return this;
      }
      public Builder ClearRoutingValues() {
        PrepareBuilder();
        result.routingValues_.Clear();
        return this;
      }
    }
    static SearchRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchResponse : pb::GeneratedMessage<SearchResponse, SearchResponse.Builder> {
    private SearchResponse() { }
    private static readonly SearchResponse defaultInstance = new SearchResponse().MakeReadOnly();
    private static readonly string[] _searchResponseFieldNames = new string[] { "is_all_succeeded", "next_token", "rows", "total_hits" };
    private static readonly uint[] _searchResponseFieldTags = new uint[] { 24, 50, 18, 8 };
    public static SearchResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchResponse, SearchResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__FieldAccessorTable; }
    }
    
    public const int TotalHitsFieldNumber = 1;
    private bool hasTotalHits;
    private long totalHits_;
    public bool HasTotalHits {
      get { return hasTotalHits; }
    }
    public long TotalHits {
      get { return totalHits_; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<pb::ByteString> rows_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> RowsList {
      get { return pbc::Lists.AsReadOnly(rows_); }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public pb::ByteString GetRows(int index) {
      return rows_[index];
    }
    
    public const int IsAllSucceededFieldNumber = 3;
    private bool hasIsAllSucceeded;
    private bool isAllSucceeded_;
    public bool HasIsAllSucceeded {
      get { return hasIsAllSucceeded; }
    }
    public bool IsAllSucceeded {
      get { return isAllSucceeded_; }
    }
    
    public const int NextTokenFieldNumber = 6;
    private bool hasNextToken;
    private pb::ByteString nextToken_ = pb::ByteString.Empty;
    public bool HasNextToken {
      get { return hasNextToken; }
    }
    public pb::ByteString NextToken {
      get { return nextToken_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchResponseFieldNames;
      if (hasTotalHits) {
        output.WriteInt64(1, field_names[3], TotalHits);
      }
      if (rows_.Count > 0) {
        output.WriteBytesArray(2, field_names[2], rows_);
      }
      if (hasIsAllSucceeded) {
        output.WriteBool(3, field_names[0], IsAllSucceeded);
      }
      if (hasNextToken) {
        output.WriteBytes(6, field_names[1], NextToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTotalHits) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, TotalHits);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in RowsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * rows_.Count;
      }
      if (hasIsAllSucceeded) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, IsAllSucceeded);
      }
      if (hasNextToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(6, NextToken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchResponse MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchResponse result;
      
      private SearchResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchResponse original = result;
          result = new SearchResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.Descriptor; }
      }
      
      public override SearchResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.DefaultInstance; }
      }
      
      public override SearchResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchResponse) {
          return MergeFrom((SearchResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTotalHits) {
          TotalHits = other.TotalHits;
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        if (other.HasIsAllSucceeded) {
          IsAllSucceeded = other.IsAllSucceeded;
        }
        if (other.HasNextToken) {
          NextToken = other.NextToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTotalHits = input.ReadInt64(ref result.totalHits_);
              break;
            }
            case 18: {
              input.ReadBytesArray(tag, field_name, result.rows_);
              break;
            }
            case 24: {
              result.hasIsAllSucceeded = input.ReadBool(ref result.isAllSucceeded_);
              break;
            }
            case 50: {
              result.hasNextToken = input.ReadBytes(ref result.nextToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTotalHits {
        get { return result.hasTotalHits; }
      }
      public long TotalHits {
        get { return result.TotalHits; }
        set { SetTotalHits(value); }
      }
      public Builder SetTotalHits(long value) {
        PrepareBuilder();
        result.hasTotalHits = true;
        result.totalHits_ = value;
        return this;
      }
      public Builder ClearTotalHits() {
        PrepareBuilder();
        result.hasTotalHits = false;
        result.totalHits_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public pb::ByteString GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder AddRows(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
      
      public bool HasIsAllSucceeded {
        get { return result.hasIsAllSucceeded; }
      }
      public bool IsAllSucceeded {
        get { return result.IsAllSucceeded; }
        set { SetIsAllSucceeded(value); }
      }
      public Builder SetIsAllSucceeded(bool value) {
        PrepareBuilder();
        result.hasIsAllSucceeded = true;
        result.isAllSucceeded_ = value;
        return this;
      }
      public Builder ClearIsAllSucceeded() {
        PrepareBuilder();
        result.hasIsAllSucceeded = false;
        result.isAllSucceeded_ = false;
        return this;
      }
      
      public bool HasNextToken {
        get { return result.hasNextToken; }
      }
      public pb::ByteString NextToken {
        get { return result.NextToken; }
        set { SetNextToken(value); }
      }
      public Builder SetNextToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextToken = true;
        result.nextToken_ = value;
        return this;
      }
      public Builder ClearNextToken() {
        PrepareBuilder();
        result.hasNextToken = false;
        result.nextToken_ = pb::ByteString.Empty;
        return this;
      }
    }
    static SearchResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FieldSchema : pb::GeneratedMessage<FieldSchema, FieldSchema.Builder> {
    private FieldSchema() { }
    private static readonly FieldSchema defaultInstance = new FieldSchema().MakeReadOnly();
    private static readonly string[] _fieldSchemaFieldNames = new string[] { "analyzer", "doc_values", "field_name", "field_schemas", "field_type", "index", "index_options", "is_array", "store" };
    private static readonly uint[] _fieldSchemaFieldTags = new uint[] { 34, 48, 10, 66, 16, 40, 24, 72, 56 };
    public static FieldSchema DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldSchema DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldSchema ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldSchema, FieldSchema.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int FieldTypeFieldNumber = 2;
    private bool hasFieldType;
    private global::com.alicloud.openservices.tablestore.core.protocol.FieldType fieldType_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldType.LONG;
    public bool HasFieldType {
      get { return hasFieldType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldType FieldType {
      get { return fieldType_; }
    }
    
    public const int IndexOptionsFieldNumber = 3;
    private bool hasIndexOptions;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions indexOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions.DOCS;
    public bool HasIndexOptions {
      get { return hasIndexOptions; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions IndexOptions {
      get { return indexOptions_; }
    }
    
    public const int AnalyzerFieldNumber = 4;
    private bool hasAnalyzer;
    private string analyzer_ = "";
    public bool HasAnalyzer {
      get { return hasAnalyzer; }
    }
    public string Analyzer {
      get { return analyzer_; }
    }
    
    public const int IndexFieldNumber = 5;
    private bool hasIndex;
    private bool index_;
    public bool HasIndex {
      get { return hasIndex; }
    }
    public bool Index {
      get { return index_; }
    }
    
    public const int DocValuesFieldNumber = 6;
    private bool hasDocValues;
    private bool docValues_;
    public bool HasDocValues {
      get { return hasDocValues; }
    }
    public bool DocValues {
      get { return docValues_; }
    }
    
    public const int StoreFieldNumber = 7;
    private bool hasStore;
    private bool store_;
    public bool HasStore {
      get { return hasStore; }
    }
    public bool Store {
      get { return store_; }
    }
    
    public const int FieldSchemasFieldNumber = 8;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> fieldSchemas_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
      get { return fieldSchemas_; }
    }
    public int FieldSchemasCount {
      get { return fieldSchemas_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
      return fieldSchemas_[index];
    }
    
    public const int IsArrayFieldNumber = 9;
    private bool hasIsArray;
    private bool isArray_;
    public bool HasIsArray {
      get { return hasIsArray; }
    }
    public bool IsArray {
      get { return isArray_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fieldSchemaFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[2], FieldName);
      }
      if (hasFieldType) {
        output.WriteEnum(2, field_names[4], (int) FieldType, FieldType);
      }
      if (hasIndexOptions) {
        output.WriteEnum(3, field_names[6], (int) IndexOptions, IndexOptions);
      }
      if (hasAnalyzer) {
        output.WriteString(4, field_names[0], Analyzer);
      }
      if (hasIndex) {
        output.WriteBool(5, field_names[5], Index);
      }
      if (hasDocValues) {
        output.WriteBool(6, field_names[1], DocValues);
      }
      if (hasStore) {
        output.WriteBool(7, field_names[8], Store);
      }
      if (fieldSchemas_.Count > 0) {
        output.WriteMessageArray(8, field_names[3], fieldSchemas_);
      }
      if (hasIsArray) {
        output.WriteBool(9, field_names[7], IsArray);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasFieldType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) FieldType);
      }
      if (hasIndexOptions) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) IndexOptions);
      }
      if (hasAnalyzer) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Analyzer);
      }
      if (hasIndex) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, Index);
      }
      if (hasDocValues) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, DocValues);
      }
      if (hasStore) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, Store);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema element in FieldSchemasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasIsArray) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, IsArray);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FieldSchema ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSchema ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSchema ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldSchema ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldSchema ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldSchema MakeReadOnly() {
      fieldSchemas_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldSchema prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldSchema, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldSchema cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldSchema result;
      
      private FieldSchema PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldSchema original = result;
          result = new FieldSchema();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldSchema MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Descriptor; }
      }
      
      public override FieldSchema DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance; }
      }
      
      public override FieldSchema BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldSchema) {
          return MergeFrom((FieldSchema) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldSchema other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasFieldType) {
          FieldType = other.FieldType;
        }
        if (other.HasIndexOptions) {
          IndexOptions = other.IndexOptions;
        }
        if (other.HasAnalyzer) {
          Analyzer = other.Analyzer;
        }
        if (other.HasIndex) {
          Index = other.Index;
        }
        if (other.HasDocValues) {
          DocValues = other.DocValues;
        }
        if (other.HasStore) {
          Store = other.Store;
        }
        if (other.fieldSchemas_.Count != 0) {
          result.fieldSchemas_.Add(other.fieldSchemas_);
        }
        if (other.HasIsArray) {
          IsArray = other.IsArray;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldSchemaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.fieldType_, out unknown)) {
                result.hasFieldType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.indexOptions_, out unknown)) {
                result.hasIndexOptions = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              result.hasAnalyzer = input.ReadString(ref result.analyzer_);
              break;
            }
            case 40: {
              result.hasIndex = input.ReadBool(ref result.index_);
              break;
            }
            case 48: {
              result.hasDocValues = input.ReadBool(ref result.docValues_);
              break;
            }
            case 56: {
              result.hasStore = input.ReadBool(ref result.store_);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.fieldSchemas_, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance, extensionRegistry);
              break;
            }
            case 72: {
              result.hasIsArray = input.ReadBool(ref result.isArray_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasFieldType {
       get { return result.hasFieldType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldType FieldType {
        get { return result.FieldType; }
        set { SetFieldType(value); }
      }
      public Builder SetFieldType(global::com.alicloud.openservices.tablestore.core.protocol.FieldType value) {
        PrepareBuilder();
        result.hasFieldType = true;
        result.fieldType_ = value;
        return this;
      }
      public Builder ClearFieldType() {
        PrepareBuilder();
        result.hasFieldType = false;
        result.fieldType_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldType.LONG;
        return this;
      }
      
      public bool HasIndexOptions {
       get { return result.hasIndexOptions; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions IndexOptions {
        get { return result.IndexOptions; }
        set { SetIndexOptions(value); }
      }
      public Builder SetIndexOptions(global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions value) {
        PrepareBuilder();
        result.hasIndexOptions = true;
        result.indexOptions_ = value;
        return this;
      }
      public Builder ClearIndexOptions() {
        PrepareBuilder();
        result.hasIndexOptions = false;
        result.indexOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions.DOCS;
        return this;
      }
      
      public bool HasAnalyzer {
        get { return result.hasAnalyzer; }
      }
      public string Analyzer {
        get { return result.Analyzer; }
        set { SetAnalyzer(value); }
      }
      public Builder SetAnalyzer(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAnalyzer = true;
        result.analyzer_ = value;
        return this;
      }
      public Builder ClearAnalyzer() {
        PrepareBuilder();
        result.hasAnalyzer = false;
        result.analyzer_ = "";
        return this;
      }
      
      public bool HasIndex {
        get { return result.hasIndex; }
      }
      public bool Index {
        get { return result.Index; }
        set { SetIndex(value); }
      }
      public Builder SetIndex(bool value) {
        PrepareBuilder();
        result.hasIndex = true;
        result.index_ = value;
        return this;
      }
      public Builder ClearIndex() {
        PrepareBuilder();
        result.hasIndex = false;
        result.index_ = false;
        return this;
      }
      
      public bool HasDocValues {
        get { return result.hasDocValues; }
      }
      public bool DocValues {
        get { return result.DocValues; }
        set { SetDocValues(value); }
      }
      public Builder SetDocValues(bool value) {
        PrepareBuilder();
        result.hasDocValues = true;
        result.docValues_ = value;
        return this;
      }
      public Builder ClearDocValues() {
        PrepareBuilder();
        result.hasDocValues = false;
        result.docValues_ = false;
        return this;
      }
      
      public bool HasStore {
        get { return result.hasStore; }
      }
      public bool Store {
        get { return result.Store; }
        set { SetStore(value); }
      }
      public Builder SetStore(bool value) {
        PrepareBuilder();
        result.hasStore = true;
        result.store_ = value;
        return this;
      }
      public Builder ClearStore() {
        PrepareBuilder();
        result.hasStore = false;
        result.store_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
        get { return PrepareBuilder().fieldSchemas_; }
      }
      public int FieldSchemasCount {
        get { return result.FieldSchemasCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
        return result.GetFieldSchemas(index);
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_[index] = value;
        return this;
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_.Add(value);
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFieldSchemas(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> values) {
        PrepareBuilder();
        result.fieldSchemas_.Add(values);
        return this;
      }
      public Builder ClearFieldSchemas() {
        PrepareBuilder();
        result.fieldSchemas_.Clear();
        return this;
      }
      
      public bool HasIsArray {
        get { return result.hasIsArray; }
      }
      public bool IsArray {
        get { return result.IsArray; }
        set { SetIsArray(value); }
      }
      public Builder SetIsArray(bool value) {
        PrepareBuilder();
        result.hasIsArray = true;
        result.isArray_ = value;
        return this;
      }
      public Builder ClearIsArray() {
        PrepareBuilder();
        result.hasIsArray = false;
        result.isArray_ = false;
        return this;
      }
    }
    static FieldSchema() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IndexSchema : pb::GeneratedMessage<IndexSchema, IndexSchema.Builder> {
    private IndexSchema() { }
    private static readonly IndexSchema defaultInstance = new IndexSchema().MakeReadOnly();
    private static readonly string[] _indexSchemaFieldNames = new string[] { "field_schemas", "index_setting", "index_sort" };
    private static readonly uint[] _indexSchemaFieldTags = new uint[] { 10, 18, 26 };
    public static IndexSchema DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexSchema DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IndexSchema ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexSchema, IndexSchema.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__FieldAccessorTable; }
    }
    
    public const int FieldSchemasFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> fieldSchemas_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
      get { return fieldSchemas_; }
    }
    public int FieldSchemasCount {
      get { return fieldSchemas_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
      return fieldSchemas_[index];
    }
    
    public const int IndexSettingFieldNumber = 2;
    private bool hasIndexSetting;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting indexSetting_;
    public bool HasIndexSetting {
      get { return hasIndexSetting; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting IndexSetting {
      get { return indexSetting_ ?? global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance; }
    }
    
    public const int IndexSortFieldNumber = 3;
    private bool hasIndexSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.Sort indexSort_;
    public bool HasIndexSort {
      get { return hasIndexSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Sort IndexSort {
      get { return indexSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _indexSchemaFieldNames;
      if (fieldSchemas_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], fieldSchemas_);
      }
      if (hasIndexSetting) {
        output.WriteMessage(2, field_names[1], IndexSetting);
      }
      if (hasIndexSort) {
        output.WriteMessage(3, field_names[2], IndexSort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema element in FieldSchemasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIndexSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, IndexSetting);
      }
      if (hasIndexSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, IndexSort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IndexSchema ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSchema ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSchema ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexSchema ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexSchema ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IndexSchema MakeReadOnly() {
      fieldSchemas_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexSchema prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IndexSchema, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IndexSchema cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IndexSchema result;
      
      private IndexSchema PrepareBuilder() {
        if (resultIsReadOnly) {
          IndexSchema original = result;
          result = new IndexSchema();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IndexSchema MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Descriptor; }
      }
      
      public override IndexSchema DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance; }
      }
      
      public override IndexSchema BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexSchema) {
          return MergeFrom((IndexSchema) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexSchema other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance) return this;
        PrepareBuilder();
        if (other.fieldSchemas_.Count != 0) {
          result.fieldSchemas_.Add(other.fieldSchemas_);
        }
        if (other.HasIndexSetting) {
          MergeIndexSetting(other.IndexSetting);
        }
        if (other.HasIndexSort) {
          MergeIndexSort(other.IndexSort);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_indexSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _indexSchemaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.fieldSchemas_, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.CreateBuilder();
              if (result.hasIndexSetting) {
                subBuilder.MergeFrom(IndexSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              IndexSetting = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder();
              if (result.hasIndexSort) {
                subBuilder.MergeFrom(IndexSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              IndexSort = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
        get { return PrepareBuilder().fieldSchemas_; }
      }
      public int FieldSchemasCount {
        get { return result.FieldSchemasCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
        return result.GetFieldSchemas(index);
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_[index] = value;
        return this;
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_.Add(value);
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFieldSchemas(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> values) {
        PrepareBuilder();
        result.fieldSchemas_.Add(values);
        return this;
      }
      public Builder ClearFieldSchemas() {
        PrepareBuilder();
        result.fieldSchemas_.Clear();
        return this;
      }
      
      public bool HasIndexSetting {
       get { return result.hasIndexSetting; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting IndexSetting {
        get { return result.IndexSetting; }
        set { SetIndexSetting(value); }
      }
      public Builder SetIndexSetting(global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexSetting = true;
        result.indexSetting_ = value;
        return this;
      }
      public Builder SetIndexSetting(global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIndexSetting = true;
        result.indexSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIndexSetting(global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIndexSetting &&
            result.indexSetting_ != global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance) {
            result.indexSetting_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.CreateBuilder(result.indexSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.indexSetting_ = value;
        }
        result.hasIndexSetting = true;
        return this;
      }
      public Builder ClearIndexSetting() {
        PrepareBuilder();
        result.hasIndexSetting = false;
        result.indexSetting_ = null;
        return this;
      }
      
      public bool HasIndexSort {
       get { return result.hasIndexSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Sort IndexSort {
        get { return result.IndexSort; }
        set { SetIndexSort(value); }
      }
      public Builder SetIndexSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexSort = true;
        result.indexSort_ = value;
        return this;
      }
      public Builder SetIndexSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIndexSort = true;
        result.indexSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIndexSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIndexSort &&
            result.indexSort_ != global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance) {
            result.indexSort_ = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder(result.indexSort_).MergeFrom(value).BuildPartial();
        } else {
          result.indexSort_ = value;
        }
        result.hasIndexSort = true;
        return this;
      }
      public Builder ClearIndexSort() {
        PrepareBuilder();
        result.hasIndexSort = false;
        result.indexSort_ = null;
        return this;
      }
    }
    static IndexSchema() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IndexSetting : pb::GeneratedMessage<IndexSetting, IndexSetting.Builder> {
    private IndexSetting() { }
    private static readonly IndexSetting defaultInstance = new IndexSetting().MakeReadOnly();
    private static readonly string[] _indexSettingFieldNames = new string[] { "number_of_shards", "routing_fields", "routing_partition_size" };
    private static readonly uint[] _indexSettingFieldTags = new uint[] { 8, 18, 24 };
    public static IndexSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IndexSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexSetting, IndexSetting.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__FieldAccessorTable; }
    }
    
    public const int NumberOfShardsFieldNumber = 1;
    private bool hasNumberOfShards;
    private int numberOfShards_;
    public bool HasNumberOfShards {
      get { return hasNumberOfShards; }
    }
    public int NumberOfShards {
      get { return numberOfShards_; }
    }
    
    public const int RoutingFieldsFieldNumber = 2;
    private pbc::PopsicleList<string> routingFields_ = new pbc::PopsicleList<string>();
    public scg::IList<string> RoutingFieldsList {
      get { return pbc::Lists.AsReadOnly(routingFields_); }
    }
    public int RoutingFieldsCount {
      get { return routingFields_.Count; }
    }
    public string GetRoutingFields(int index) {
      return routingFields_[index];
    }
    
    public const int RoutingPartitionSizeFieldNumber = 3;
    private bool hasRoutingPartitionSize;
    private int routingPartitionSize_;
    public bool HasRoutingPartitionSize {
      get { return hasRoutingPartitionSize; }
    }
    public int RoutingPartitionSize {
      get { return routingPartitionSize_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _indexSettingFieldNames;
      if (hasNumberOfShards) {
        output.WriteInt32(1, field_names[0], NumberOfShards);
      }
      if (routingFields_.Count > 0) {
        output.WriteStringArray(2, field_names[1], routingFields_);
      }
      if (hasRoutingPartitionSize) {
        output.WriteInt32(3, field_names[2], RoutingPartitionSize);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumberOfShards) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, NumberOfShards);
      }
      {
        int dataSize = 0;
        foreach (string element in RoutingFieldsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * routingFields_.Count;
      }
      if (hasRoutingPartitionSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, RoutingPartitionSize);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IndexSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IndexSetting MakeReadOnly() {
      routingFields_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IndexSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IndexSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IndexSetting result;
      
      private IndexSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          IndexSetting original = result;
          result = new IndexSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IndexSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Descriptor; }
      }
      
      public override IndexSetting DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance; }
      }
      
      public override IndexSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexSetting) {
          return MergeFrom((IndexSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexSetting other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNumberOfShards) {
          NumberOfShards = other.NumberOfShards;
        }
        if (other.routingFields_.Count != 0) {
          result.routingFields_.Add(other.routingFields_);
        }
        if (other.HasRoutingPartitionSize) {
          RoutingPartitionSize = other.RoutingPartitionSize;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_indexSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _indexSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNumberOfShards = input.ReadInt32(ref result.numberOfShards_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.routingFields_);
              break;
            }
            case 24: {
              result.hasRoutingPartitionSize = input.ReadInt32(ref result.routingPartitionSize_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNumberOfShards {
        get { return result.hasNumberOfShards; }
      }
      public int NumberOfShards {
        get { return result.NumberOfShards; }
        set { SetNumberOfShards(value); }
      }
      public Builder SetNumberOfShards(int value) {
        PrepareBuilder();
        result.hasNumberOfShards = true;
        result.numberOfShards_ = value;
        return this;
      }
      public Builder ClearNumberOfShards() {
        PrepareBuilder();
        result.hasNumberOfShards = false;
        result.numberOfShards_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<string> RoutingFieldsList {
        get { return PrepareBuilder().routingFields_; }
      }
      public int RoutingFieldsCount {
        get { return result.RoutingFieldsCount; }
      }
      public string GetRoutingFields(int index) {
        return result.GetRoutingFields(index);
      }
      public Builder SetRoutingFields(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingFields_[index] = value;
        return this;
      }
      public Builder AddRoutingFields(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingFields_.Add(value);
        return this;
      }
      public Builder AddRangeRoutingFields(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.routingFields_.Add(values);
        return this;
      }
      public Builder ClearRoutingFields() {
        PrepareBuilder();
        result.routingFields_.Clear();
        return this;
      }
      
      public bool HasRoutingPartitionSize {
        get { return result.hasRoutingPartitionSize; }
      }
      public int RoutingPartitionSize {
        get { return result.RoutingPartitionSize; }
        set { SetRoutingPartitionSize(value); }
      }
      public Builder SetRoutingPartitionSize(int value) {
        PrepareBuilder();
        result.hasRoutingPartitionSize = true;
        result.routingPartitionSize_ = value;
        return this;
      }
      public Builder ClearRoutingPartitionSize() {
        PrepareBuilder();
        result.hasRoutingPartitionSize = false;
        result.routingPartitionSize_ = 0;
        return this;
      }
    }
    static IndexSetting() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateSearchIndexRequest : pb::GeneratedMessage<CreateSearchIndexRequest, CreateSearchIndexRequest.Builder> {
    private CreateSearchIndexRequest() { }
    private static readonly CreateSearchIndexRequest defaultInstance = new CreateSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _createSearchIndexRequestFieldNames = new string[] { "index_name", "schema", "table_name" };
    private static readonly uint[] _createSearchIndexRequestFieldTags = new uint[] { 18, 26, 10 };
    public static CreateSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateSearchIndexRequest, CreateSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public const int SchemaFieldNumber = 3;
    private bool hasSchema;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema schema_;
    public bool HasSchema {
      get { return hasSchema; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
      get { return schema_ ?? global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasIndexName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[2], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      if (hasSchema) {
        output.WriteMessage(3, field_names[1], Schema);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      if (hasSchema) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Schema);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateSearchIndexRequest result;
      
      private CreateSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateSearchIndexRequest original = result;
          result = new CreateSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.Descriptor; }
      }
      
      public override CreateSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.DefaultInstance; }
      }
      
      public override CreateSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateSearchIndexRequest) {
          return MergeFrom((CreateSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        if (other.HasSchema) {
          MergeSchema(other.Schema);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder();
              if (result.hasSchema) {
                subBuilder.MergeFrom(Schema);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Schema = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
      
      public bool HasSchema {
       get { return result.hasSchema; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
        get { return result.Schema; }
        set { SetSchema(value); }
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = value;
        return this;
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSchema &&
            result.schema_ != global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance) {
            result.schema_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder(result.schema_).MergeFrom(value).BuildPartial();
        } else {
          result.schema_ = value;
        }
        result.hasSchema = true;
        return this;
      }
      public Builder ClearSchema() {
        PrepareBuilder();
        result.hasSchema = false;
        result.schema_ = null;
        return this;
      }
    }
    static CreateSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateSearchIndexResponse : pb::GeneratedMessage<CreateSearchIndexResponse, CreateSearchIndexResponse.Builder> {
    private CreateSearchIndexResponse() { }
    private static readonly CreateSearchIndexResponse defaultInstance = new CreateSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _createSearchIndexResponseFieldNames = new string[] {  };
    private static readonly uint[] _createSearchIndexResponseFieldTags = new uint[] {  };
    public static CreateSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateSearchIndexResponse, CreateSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createSearchIndexResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateSearchIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateSearchIndexResponse result;
      
      private CreateSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateSearchIndexResponse original = result;
          result = new CreateSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.Descriptor; }
      }
      
      public override CreateSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.DefaultInstance; }
      }
      
      public override CreateSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateSearchIndexResponse) {
          return MergeFrom((CreateSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CreateSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IndexInfo : pb::GeneratedMessage<IndexInfo, IndexInfo.Builder> {
    private IndexInfo() { }
    private static readonly IndexInfo defaultInstance = new IndexInfo().MakeReadOnly();
    private static readonly string[] _indexInfoFieldNames = new string[] { "index_name", "table_name" };
    private static readonly uint[] _indexInfoFieldTags = new uint[] { 18, 10 };
    public static IndexInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IndexInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexInfo, IndexInfo.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _indexInfoFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IndexInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IndexInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IndexInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IndexInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IndexInfo result;
      
      private IndexInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          IndexInfo original = result;
          result = new IndexInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IndexInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Descriptor; }
      }
      
      public override IndexInfo DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.DefaultInstance; }
      }
      
      public override IndexInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexInfo) {
          return MergeFrom((IndexInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexInfo other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_indexInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _indexInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
    }
    static IndexInfo() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListSearchIndexRequest : pb::GeneratedMessage<ListSearchIndexRequest, ListSearchIndexRequest.Builder> {
    private ListSearchIndexRequest() { }
    private static readonly ListSearchIndexRequest defaultInstance = new ListSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _listSearchIndexRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _listSearchIndexRequestFieldTags = new uint[] { 10 };
    public static ListSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListSearchIndexRequest, ListSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListSearchIndexRequest result;
      
      private ListSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListSearchIndexRequest original = result;
          result = new ListSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.Descriptor; }
      }
      
      public override ListSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.DefaultInstance; }
      }
      
      public override ListSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListSearchIndexRequest) {
          return MergeFrom((ListSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static ListSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListSearchIndexResponse : pb::GeneratedMessage<ListSearchIndexResponse, ListSearchIndexResponse.Builder> {
    private ListSearchIndexResponse() { }
    private static readonly ListSearchIndexResponse defaultInstance = new ListSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _listSearchIndexResponseFieldNames = new string[] { "indices" };
    private static readonly uint[] _listSearchIndexResponseFieldTags = new uint[] { 10 };
    public static ListSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListSearchIndexResponse, ListSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__FieldAccessorTable; }
    }
    
    public const int IndicesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> indices_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> IndicesList {
      get { return indices_; }
    }
    public int IndicesCount {
      get { return indices_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo GetIndices(int index) {
      return indices_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listSearchIndexResponseFieldNames;
      if (indices_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], indices_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo element in IndicesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListSearchIndexResponse MakeReadOnly() {
      indices_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListSearchIndexResponse result;
      
      private ListSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListSearchIndexResponse original = result;
          result = new ListSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.Descriptor; }
      }
      
      public override ListSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.DefaultInstance; }
      }
      
      public override ListSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListSearchIndexResponse) {
          return MergeFrom((ListSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.indices_.Count != 0) {
          result.indices_.Add(other.indices_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.indices_, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> IndicesList {
        get { return PrepareBuilder().indices_; }
      }
      public int IndicesCount {
        get { return result.IndicesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo GetIndices(int index) {
        return result.GetIndices(index);
      }
      public Builder SetIndices(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indices_[index] = value;
        return this;
      }
      public Builder SetIndices(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indices_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIndices(global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indices_.Add(value);
        return this;
      }
      public Builder AddIndices(global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indices_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIndices(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> values) {
        PrepareBuilder();
        result.indices_.Add(values);
        return this;
      }
      public Builder ClearIndices() {
        PrepareBuilder();
        result.indices_.Clear();
        return this;
      }
    }
    static ListSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteSearchIndexRequest : pb::GeneratedMessage<DeleteSearchIndexRequest, DeleteSearchIndexRequest.Builder> {
    private DeleteSearchIndexRequest() { }
    private static readonly DeleteSearchIndexRequest defaultInstance = new DeleteSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _deleteSearchIndexRequestFieldNames = new string[] { "index_name", "table_name" };
    private static readonly uint[] _deleteSearchIndexRequestFieldTags = new uint[] { 18, 10 };
    public static DeleteSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteSearchIndexRequest, DeleteSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteSearchIndexRequest result;
      
      private DeleteSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteSearchIndexRequest original = result;
          result = new DeleteSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.Descriptor; }
      }
      
      public override DeleteSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.DefaultInstance; }
      }
      
      public override DeleteSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteSearchIndexRequest) {
          return MergeFrom((DeleteSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
    }
    static DeleteSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteSearchIndexResponse : pb::GeneratedMessage<DeleteSearchIndexResponse, DeleteSearchIndexResponse.Builder> {
    private DeleteSearchIndexResponse() { }
    private static readonly DeleteSearchIndexResponse defaultInstance = new DeleteSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _deleteSearchIndexResponseFieldNames = new string[] {  };
    private static readonly uint[] _deleteSearchIndexResponseFieldTags = new uint[] {  };
    public static DeleteSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteSearchIndexResponse, DeleteSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteSearchIndexResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteSearchIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteSearchIndexResponse result;
      
      private DeleteSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteSearchIndexResponse original = result;
          result = new DeleteSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.Descriptor; }
      }
      
      public override DeleteSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.DefaultInstance; }
      }
      
      public override DeleteSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteSearchIndexResponse) {
          return MergeFrom((DeleteSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static DeleteSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncStat : pb::GeneratedMessage<SyncStat, SyncStat.Builder> {
    private SyncStat() { }
    private static readonly SyncStat defaultInstance = new SyncStat().MakeReadOnly();
    private static readonly string[] _syncStatFieldNames = new string[] { "current_sync_timestamp", "sync_phase" };
    private static readonly uint[] _syncStatFieldTags = new uint[] { 16, 8 };
    public static SyncStat DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyncStat DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyncStat ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyncStat, SyncStat.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__FieldAccessorTable; }
    }
    
    public const int SyncPhaseFieldNumber = 1;
    private bool hasSyncPhase;
    private global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase syncPhase_ = global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase.FULL;
    public bool HasSyncPhase {
      get { return hasSyncPhase; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase SyncPhase {
      get { return syncPhase_; }
    }
    
    public const int CurrentSyncTimestampFieldNumber = 2;
    private bool hasCurrentSyncTimestamp;
    private long currentSyncTimestamp_;
    public bool HasCurrentSyncTimestamp {
      get { return hasCurrentSyncTimestamp; }
    }
    public long CurrentSyncTimestamp {
      get { return currentSyncTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syncStatFieldNames;
      if (hasSyncPhase) {
        output.WriteEnum(1, field_names[1], (int) SyncPhase, SyncPhase);
      }
      if (hasCurrentSyncTimestamp) {
        output.WriteInt64(2, field_names[0], CurrentSyncTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSyncPhase) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) SyncPhase);
      }
      if (hasCurrentSyncTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, CurrentSyncTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyncStat ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncStat ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncStat ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncStat ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncStat ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncStat ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyncStat ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyncStat ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyncStat ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncStat ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyncStat MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyncStat prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyncStat, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyncStat cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyncStat result;
      
      private SyncStat PrepareBuilder() {
        if (resultIsReadOnly) {
          SyncStat original = result;
          result = new SyncStat();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyncStat MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Descriptor; }
      }
      
      public override SyncStat DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance; }
      }
      
      public override SyncStat BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyncStat) {
          return MergeFrom((SyncStat) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyncStat other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSyncPhase) {
          SyncPhase = other.SyncPhase;
        }
        if (other.HasCurrentSyncTimestamp) {
          CurrentSyncTimestamp = other.CurrentSyncTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syncStatFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syncStatFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.syncPhase_, out unknown)) {
                result.hasSyncPhase = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasCurrentSyncTimestamp = input.ReadInt64(ref result.currentSyncTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSyncPhase {
       get { return result.hasSyncPhase; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase SyncPhase {
        get { return result.SyncPhase; }
        set { SetSyncPhase(value); }
      }
      public Builder SetSyncPhase(global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase value) {
        PrepareBuilder();
        result.hasSyncPhase = true;
        result.syncPhase_ = value;
        return this;
      }
      public Builder ClearSyncPhase() {
        PrepareBuilder();
        result.hasSyncPhase = false;
        result.syncPhase_ = global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase.FULL;
        return this;
      }
      
      public bool HasCurrentSyncTimestamp {
        get { return result.hasCurrentSyncTimestamp; }
      }
      public long CurrentSyncTimestamp {
        get { return result.CurrentSyncTimestamp; }
        set { SetCurrentSyncTimestamp(value); }
      }
      public Builder SetCurrentSyncTimestamp(long value) {
        PrepareBuilder();
        result.hasCurrentSyncTimestamp = true;
        result.currentSyncTimestamp_ = value;
        return this;
      }
      public Builder ClearCurrentSyncTimestamp() {
        PrepareBuilder();
        result.hasCurrentSyncTimestamp = false;
        result.currentSyncTimestamp_ = 0L;
        return this;
      }
    }
    static SyncStat() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeSearchIndexRequest : pb::GeneratedMessage<DescribeSearchIndexRequest, DescribeSearchIndexRequest.Builder> {
    private DescribeSearchIndexRequest() { }
    private static readonly DescribeSearchIndexRequest defaultInstance = new DescribeSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _describeSearchIndexRequestFieldNames = new string[] { "index_name", "table_name" };
    private static readonly uint[] _describeSearchIndexRequestFieldTags = new uint[] { 18, 10 };
    public static DescribeSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeSearchIndexRequest, DescribeSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeSearchIndexRequest result;
      
      private DescribeSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeSearchIndexRequest original = result;
          result = new DescribeSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.Descriptor; }
      }
      
      public override DescribeSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.DefaultInstance; }
      }
      
      public override DescribeSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeSearchIndexRequest) {
          return MergeFrom((DescribeSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
    }
    static DescribeSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeSearchIndexResponse : pb::GeneratedMessage<DescribeSearchIndexResponse, DescribeSearchIndexResponse.Builder> {
    private DescribeSearchIndexResponse() { }
    private static readonly DescribeSearchIndexResponse defaultInstance = new DescribeSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _describeSearchIndexResponseFieldNames = new string[] { "schema", "sync_stat" };
    private static readonly uint[] _describeSearchIndexResponseFieldTags = new uint[] { 10, 18 };
    public static DescribeSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeSearchIndexResponse, DescribeSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__FieldAccessorTable; }
    }
    
    public const int SchemaFieldNumber = 1;
    private bool hasSchema;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema schema_;
    public bool HasSchema {
      get { return hasSchema; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
      get { return schema_ ?? global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance; }
    }
    
    public const int SyncStatFieldNumber = 2;
    private bool hasSyncStat;
    private global::com.alicloud.openservices.tablestore.core.protocol.SyncStat syncStat_;
    public bool HasSyncStat {
      get { return hasSyncStat; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SyncStat SyncStat {
      get { return syncStat_ ?? global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeSearchIndexResponseFieldNames;
      if (hasSchema) {
        output.WriteMessage(1, field_names[0], Schema);
      }
      if (hasSyncStat) {
        output.WriteMessage(2, field_names[1], SyncStat);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSchema) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Schema);
      }
      if (hasSyncStat) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SyncStat);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeSearchIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeSearchIndexResponse result;
      
      private DescribeSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeSearchIndexResponse original = result;
          result = new DescribeSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.Descriptor; }
      }
      
      public override DescribeSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.DefaultInstance; }
      }
      
      public override DescribeSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeSearchIndexResponse) {
          return MergeFrom((DescribeSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSchema) {
          MergeSchema(other.Schema);
        }
        if (other.HasSyncStat) {
          MergeSyncStat(other.SyncStat);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder();
              if (result.hasSchema) {
                subBuilder.MergeFrom(Schema);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Schema = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.CreateBuilder();
              if (result.hasSyncStat) {
                subBuilder.MergeFrom(SyncStat);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SyncStat = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSchema {
       get { return result.hasSchema; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
        get { return result.Schema; }
        set { SetSchema(value); }
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = value;
        return this;
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSchema &&
            result.schema_ != global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance) {
            result.schema_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder(result.schema_).MergeFrom(value).BuildPartial();
        } else {
          result.schema_ = value;
        }
        result.hasSchema = true;
        return this;
      }
      public Builder ClearSchema() {
        PrepareBuilder();
        result.hasSchema = false;
        result.schema_ = null;
        return this;
      }
      
      public bool HasSyncStat {
       get { return result.hasSyncStat; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SyncStat SyncStat {
        get { return result.SyncStat; }
        set { SetSyncStat(value); }
      }
      public Builder SetSyncStat(global::com.alicloud.openservices.tablestore.core.protocol.SyncStat value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSyncStat = true;
        result.syncStat_ = value;
        return this;
      }
      public Builder SetSyncStat(global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSyncStat = true;
        result.syncStat_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSyncStat(global::com.alicloud.openservices.tablestore.core.protocol.SyncStat value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSyncStat &&
            result.syncStat_ != global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance) {
            result.syncStat_ = global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.CreateBuilder(result.syncStat_).MergeFrom(value).BuildPartial();
        } else {
          result.syncStat_ = value;
        }
        result.hasSyncStat = true;
        return this;
      }
      public Builder ClearSyncStat() {
        PrepareBuilder();
        result.hasSyncStat = false;
        result.syncStat_ = null;
        return this;
      }
    }
    static DescribeSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
