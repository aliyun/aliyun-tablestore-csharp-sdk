// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.alicloud.openservices.tablestore.core.protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class TableStoreFilter {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleColumnValueFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SingleColumnValueFilter, global::com.alicloud.openservices.tablestore.core.protocol.SingleColumnValueFilter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleColumnValueFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CompositeColumnValueFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CompositeColumnValueFilter, global::com.alicloud.openservices.tablestore.core.protocol.CompositeColumnValueFilter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CompositeColumnValueFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnPaginationFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ColumnPaginationFilter, global::com.alicloud.openservices.tablestore.core.protocol.ColumnPaginationFilter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnPaginationFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Filter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Filter, global::com.alicloud.openservices.tablestore.core.protocol.Filter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Filter__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static TableStoreFilter() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chh0YWJsZV9zdG9yZV9maWx0ZXIucHJvdG8SMmNvbS5hbGljbG91ZC5vcGVu", 
            "c2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sItQBChdTaW5nbGVD", 
            "b2x1bW5WYWx1ZUZpbHRlchJWCgpjb21wYXJhdG9yGAEgAigOMkIuY29tLmFs", 
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu", 
            "Q29tcGFyYXRvclR5cGUSEwoLY29sdW1uX25hbWUYAiACKAkSFAoMY29sdW1u", 
            "X3ZhbHVlGAMgAigMEhkKEWZpbHRlcl9pZl9taXNzaW5nGAQgAigIEhsKE2xh", 
            "dGVzdF92ZXJzaW9uX29ubHkYBSACKAgixgEKGkNvbXBvc2l0ZUNvbHVtblZh", 
            "bHVlRmlsdGVyElcKCmNvbWJpbmF0b3IYASACKA4yQy5jb20uYWxpY2xvdWQu", 
            "b3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Mb2dpY2Fs", 
            "T3BlcmF0b3ISTwoLc3ViX2ZpbHRlcnMYAiADKAsyOi5jb20uYWxpY2xvdWQu", 
            "b3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5GaWx0ZXIi", 
            "NwoWQ29sdW1uUGFnaW5hdGlvbkZpbHRlchIOCgZvZmZzZXQYASACKAUSDQoF", 
            "bGltaXQYAiACKAUiZgoGRmlsdGVyEkwKBHR5cGUYASACKA4yPi5jb20uYWxp", 
            "Y2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5G", 
            "aWx0ZXJUeXBlEg4KBmZpbHRlchgCIAIoDCphCgpGaWx0ZXJUeXBlEhoKFkZU", 
            "X1NJTkdMRV9DT0xVTU5fVkFMVUUQARIdChlGVF9DT01QT1NJVEVfQ09MVU1O", 
            "X1ZBTFVFEAISGAoURlRfQ09MVU1OX1BBR0lOQVRJT04QAyqAAQoOQ29tcGFy", 
            "YXRvclR5cGUSDAoIQ1RfRVFVQUwQARIQCgxDVF9OT1RfRVFVQUwQAhITCg9D", 
            "VF9HUkVBVEVSX1RIQU4QAxIUChBDVF9HUkVBVEVSX0VRVUFMEAQSEAoMQ1Rf", 
            "TEVTU19USEFOEAUSEQoNQ1RfTEVTU19FUVVBTBAGKjQKD0xvZ2ljYWxPcGVy", 
          "YXRvchIKCgZMT19OT1QQARIKCgZMT19BTkQQAhIJCgVMT19PUhAD"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleColumnValueFilter__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleColumnValueFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SingleColumnValueFilter, global::com.alicloud.openservices.tablestore.core.protocol.SingleColumnValueFilter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleColumnValueFilter__Descriptor,
                new string[] { "Comparator", "ColumnName", "ColumnValue", "FilterIfMissing", "LatestVersionOnly", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CompositeColumnValueFilter__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CompositeColumnValueFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CompositeColumnValueFilter, global::com.alicloud.openservices.tablestore.core.protocol.CompositeColumnValueFilter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CompositeColumnValueFilter__Descriptor,
                new string[] { "Combinator", "SubFilters", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnPaginationFilter__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnPaginationFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ColumnPaginationFilter, global::com.alicloud.openservices.tablestore.core.protocol.ColumnPaginationFilter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnPaginationFilter__Descriptor,
                new string[] { "Offset", "Limit", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Filter__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Filter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Filter, global::com.alicloud.openservices.tablestore.core.protocol.Filter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Filter__Descriptor,
                new string[] { "Type", "Filter_", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum FilterType {
    FT_SINGLE_COLUMN_VALUE = 1,
    FT_COMPOSITE_COLUMN_VALUE = 2,
    FT_COLUMN_PAGINATION = 3,
  }
  
  public enum ComparatorType {
    CT_EQUAL = 1,
    CT_NOT_EQUAL = 2,
    CT_GREATER_THAN = 3,
    CT_GREATER_EQUAL = 4,
    CT_LESS_THAN = 5,
    CT_LESS_EQUAL = 6,
  }
  
  public enum LogicalOperator {
    LO_NOT = 1,
    LO_AND = 2,
    LO_OR = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SingleColumnValueFilter : pb::GeneratedMessage<SingleColumnValueFilter, SingleColumnValueFilter.Builder> {
    private SingleColumnValueFilter() { }
    private static readonly SingleColumnValueFilter defaultInstance = new SingleColumnValueFilter().MakeReadOnly();
    private static readonly string[] _singleColumnValueFilterFieldNames = new string[] { "column_name", "column_value", "comparator", "filter_if_missing", "latest_version_only" };
    private static readonly uint[] _singleColumnValueFilterFieldTags = new uint[] { 18, 26, 8, 32, 40 };
    public static SingleColumnValueFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SingleColumnValueFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SingleColumnValueFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleColumnValueFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SingleColumnValueFilter, SingleColumnValueFilter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleColumnValueFilter__FieldAccessorTable; }
    }
    
    public const int ComparatorFieldNumber = 1;
    private bool hasComparator;
    private global::com.alicloud.openservices.tablestore.core.protocol.ComparatorType comparator_ = global::com.alicloud.openservices.tablestore.core.protocol.ComparatorType.CT_EQUAL;
    public bool HasComparator {
      get { return hasComparator; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ComparatorType Comparator {
      get { return comparator_; }
    }
    
    public const int ColumnNameFieldNumber = 2;
    private bool hasColumnName;
    private string columnName_ = "";
    public bool HasColumnName {
      get { return hasColumnName; }
    }
    public string ColumnName {
      get { return columnName_; }
    }
    
    public const int ColumnValueFieldNumber = 3;
    private bool hasColumnValue;
    private pb::ByteString columnValue_ = pb::ByteString.Empty;
    public bool HasColumnValue {
      get { return hasColumnValue; }
    }
    public pb::ByteString ColumnValue {
      get { return columnValue_; }
    }
    
    public const int FilterIfMissingFieldNumber = 4;
    private bool hasFilterIfMissing;
    private bool filterIfMissing_;
    public bool HasFilterIfMissing {
      get { return hasFilterIfMissing; }
    }
    public bool FilterIfMissing {
      get { return filterIfMissing_; }
    }
    
    public const int LatestVersionOnlyFieldNumber = 5;
    private bool hasLatestVersionOnly;
    private bool latestVersionOnly_;
    public bool HasLatestVersionOnly {
      get { return hasLatestVersionOnly; }
    }
    public bool LatestVersionOnly {
      get { return latestVersionOnly_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasComparator) return false;
        if (!hasColumnName) return false;
        if (!hasColumnValue) return false;
        if (!hasFilterIfMissing) return false;
        if (!hasLatestVersionOnly) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _singleColumnValueFilterFieldNames;
      if (hasComparator) {
        output.WriteEnum(1, field_names[2], (int) Comparator, Comparator);
      }
      if (hasColumnName) {
        output.WriteString(2, field_names[0], ColumnName);
      }
      if (hasColumnValue) {
        output.WriteBytes(3, field_names[1], ColumnValue);
      }
      if (hasFilterIfMissing) {
        output.WriteBool(4, field_names[3], FilterIfMissing);
      }
      if (hasLatestVersionOnly) {
        output.WriteBool(5, field_names[4], LatestVersionOnly);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasComparator) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Comparator);
      }
      if (hasColumnName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ColumnName);
      }
      if (hasColumnValue) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, ColumnValue);
      }
      if (hasFilterIfMissing) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, FilterIfMissing);
      }
      if (hasLatestVersionOnly) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, LatestVersionOnly);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SingleColumnValueFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SingleColumnValueFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SingleColumnValueFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SingleColumnValueFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SingleColumnValueFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SingleColumnValueFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SingleColumnValueFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SingleColumnValueFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SingleColumnValueFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SingleColumnValueFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SingleColumnValueFilter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SingleColumnValueFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SingleColumnValueFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SingleColumnValueFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SingleColumnValueFilter result;
      
      private SingleColumnValueFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          SingleColumnValueFilter original = result;
          result = new SingleColumnValueFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SingleColumnValueFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SingleColumnValueFilter.Descriptor; }
      }
      
      public override SingleColumnValueFilter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SingleColumnValueFilter.DefaultInstance; }
      }
      
      public override SingleColumnValueFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SingleColumnValueFilter) {
          return MergeFrom((SingleColumnValueFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SingleColumnValueFilter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SingleColumnValueFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasComparator) {
          Comparator = other.Comparator;
        }
        if (other.HasColumnName) {
          ColumnName = other.ColumnName;
        }
        if (other.HasColumnValue) {
          ColumnValue = other.ColumnValue;
        }
        if (other.HasFilterIfMissing) {
          FilterIfMissing = other.FilterIfMissing;
        }
        if (other.HasLatestVersionOnly) {
          LatestVersionOnly = other.LatestVersionOnly;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_singleColumnValueFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _singleColumnValueFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.comparator_, out unknown)) {
                result.hasComparator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasColumnName = input.ReadString(ref result.columnName_);
              break;
            }
            case 26: {
              result.hasColumnValue = input.ReadBytes(ref result.columnValue_);
              break;
            }
            case 32: {
              result.hasFilterIfMissing = input.ReadBool(ref result.filterIfMissing_);
              break;
            }
            case 40: {
              result.hasLatestVersionOnly = input.ReadBool(ref result.latestVersionOnly_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasComparator {
       get { return result.hasComparator; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ComparatorType Comparator {
        get { return result.Comparator; }
        set { SetComparator(value); }
      }
      public Builder SetComparator(global::com.alicloud.openservices.tablestore.core.protocol.ComparatorType value) {
        PrepareBuilder();
        result.hasComparator = true;
        result.comparator_ = value;
        return this;
      }
      public Builder ClearComparator() {
        PrepareBuilder();
        result.hasComparator = false;
        result.comparator_ = global::com.alicloud.openservices.tablestore.core.protocol.ComparatorType.CT_EQUAL;
        return this;
      }
      
      public bool HasColumnName {
        get { return result.hasColumnName; }
      }
      public string ColumnName {
        get { return result.ColumnName; }
        set { SetColumnName(value); }
      }
      public Builder SetColumnName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnName = true;
        result.columnName_ = value;
        return this;
      }
      public Builder ClearColumnName() {
        PrepareBuilder();
        result.hasColumnName = false;
        result.columnName_ = "";
        return this;
      }
      
      public bool HasColumnValue {
        get { return result.hasColumnValue; }
      }
      public pb::ByteString ColumnValue {
        get { return result.ColumnValue; }
        set { SetColumnValue(value); }
      }
      public Builder SetColumnValue(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnValue = true;
        result.columnValue_ = value;
        return this;
      }
      public Builder ClearColumnValue() {
        PrepareBuilder();
        result.hasColumnValue = false;
        result.columnValue_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasFilterIfMissing {
        get { return result.hasFilterIfMissing; }
      }
      public bool FilterIfMissing {
        get { return result.FilterIfMissing; }
        set { SetFilterIfMissing(value); }
      }
      public Builder SetFilterIfMissing(bool value) {
        PrepareBuilder();
        result.hasFilterIfMissing = true;
        result.filterIfMissing_ = value;
        return this;
      }
      public Builder ClearFilterIfMissing() {
        PrepareBuilder();
        result.hasFilterIfMissing = false;
        result.filterIfMissing_ = false;
        return this;
      }
      
      public bool HasLatestVersionOnly {
        get { return result.hasLatestVersionOnly; }
      }
      public bool LatestVersionOnly {
        get { return result.LatestVersionOnly; }
        set { SetLatestVersionOnly(value); }
      }
      public Builder SetLatestVersionOnly(bool value) {
        PrepareBuilder();
        result.hasLatestVersionOnly = true;
        result.latestVersionOnly_ = value;
        return this;
      }
      public Builder ClearLatestVersionOnly() {
        PrepareBuilder();
        result.hasLatestVersionOnly = false;
        result.latestVersionOnly_ = false;
        return this;
      }
    }
    static SingleColumnValueFilter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompositeColumnValueFilter : pb::GeneratedMessage<CompositeColumnValueFilter, CompositeColumnValueFilter.Builder> {
    private CompositeColumnValueFilter() { }
    private static readonly CompositeColumnValueFilter defaultInstance = new CompositeColumnValueFilter().MakeReadOnly();
    private static readonly string[] _compositeColumnValueFilterFieldNames = new string[] { "combinator", "sub_filters" };
    private static readonly uint[] _compositeColumnValueFilterFieldTags = new uint[] { 8, 18 };
    public static CompositeColumnValueFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CompositeColumnValueFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CompositeColumnValueFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_CompositeColumnValueFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CompositeColumnValueFilter, CompositeColumnValueFilter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_CompositeColumnValueFilter__FieldAccessorTable; }
    }
    
    public const int CombinatorFieldNumber = 1;
    private bool hasCombinator;
    private global::com.alicloud.openservices.tablestore.core.protocol.LogicalOperator combinator_ = global::com.alicloud.openservices.tablestore.core.protocol.LogicalOperator.LO_NOT;
    public bool HasCombinator {
      get { return hasCombinator; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.LogicalOperator Combinator {
      get { return combinator_; }
    }
    
    public const int SubFiltersFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Filter> subFilters_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Filter>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Filter> SubFiltersList {
      get { return subFilters_; }
    }
    public int SubFiltersCount {
      get { return subFilters_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Filter GetSubFilters(int index) {
      return subFilters_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCombinator) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.Filter element in SubFiltersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _compositeColumnValueFilterFieldNames;
      if (hasCombinator) {
        output.WriteEnum(1, field_names[0], (int) Combinator, Combinator);
      }
      if (subFilters_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], subFilters_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCombinator) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Combinator);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Filter element in SubFiltersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CompositeColumnValueFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompositeColumnValueFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CompositeColumnValueFilter MakeReadOnly() {
      subFilters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CompositeColumnValueFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CompositeColumnValueFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CompositeColumnValueFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CompositeColumnValueFilter result;
      
      private CompositeColumnValueFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          CompositeColumnValueFilter original = result;
          result = new CompositeColumnValueFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CompositeColumnValueFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CompositeColumnValueFilter.Descriptor; }
      }
      
      public override CompositeColumnValueFilter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CompositeColumnValueFilter.DefaultInstance; }
      }
      
      public override CompositeColumnValueFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CompositeColumnValueFilter) {
          return MergeFrom((CompositeColumnValueFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CompositeColumnValueFilter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CompositeColumnValueFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCombinator) {
          Combinator = other.Combinator;
        }
        if (other.subFilters_.Count != 0) {
          result.subFilters_.Add(other.subFilters_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_compositeColumnValueFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _compositeColumnValueFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.combinator_, out unknown)) {
                result.hasCombinator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.subFilters_, global::com.alicloud.openservices.tablestore.core.protocol.Filter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCombinator {
       get { return result.hasCombinator; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.LogicalOperator Combinator {
        get { return result.Combinator; }
        set { SetCombinator(value); }
      }
      public Builder SetCombinator(global::com.alicloud.openservices.tablestore.core.protocol.LogicalOperator value) {
        PrepareBuilder();
        result.hasCombinator = true;
        result.combinator_ = value;
        return this;
      }
      public Builder ClearCombinator() {
        PrepareBuilder();
        result.hasCombinator = false;
        result.combinator_ = global::com.alicloud.openservices.tablestore.core.protocol.LogicalOperator.LO_NOT;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Filter> SubFiltersList {
        get { return PrepareBuilder().subFilters_; }
      }
      public int SubFiltersCount {
        get { return result.SubFiltersCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Filter GetSubFilters(int index) {
        return result.GetSubFilters(index);
      }
      public Builder SetSubFilters(int index, global::com.alicloud.openservices.tablestore.core.protocol.Filter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subFilters_[index] = value;
        return this;
      }
      public Builder SetSubFilters(int index, global::com.alicloud.openservices.tablestore.core.protocol.Filter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subFilters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSubFilters(global::com.alicloud.openservices.tablestore.core.protocol.Filter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subFilters_.Add(value);
        return this;
      }
      public Builder AddSubFilters(global::com.alicloud.openservices.tablestore.core.protocol.Filter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subFilters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSubFilters(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Filter> values) {
        PrepareBuilder();
        result.subFilters_.Add(values);
        return this;
      }
      public Builder ClearSubFilters() {
        PrepareBuilder();
        result.subFilters_.Clear();
        return this;
      }
    }
    static CompositeColumnValueFilter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnPaginationFilter : pb::GeneratedMessage<ColumnPaginationFilter, ColumnPaginationFilter.Builder> {
    private ColumnPaginationFilter() { }
    private static readonly ColumnPaginationFilter defaultInstance = new ColumnPaginationFilter().MakeReadOnly();
    private static readonly string[] _columnPaginationFilterFieldNames = new string[] { "limit", "offset" };
    private static readonly uint[] _columnPaginationFilterFieldTags = new uint[] { 16, 8 };
    public static ColumnPaginationFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnPaginationFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnPaginationFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnPaginationFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnPaginationFilter, ColumnPaginationFilter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnPaginationFilter__FieldAccessorTable; }
    }
    
    public const int OffsetFieldNumber = 1;
    private bool hasOffset;
    private int offset_;
    public bool HasOffset {
      get { return hasOffset; }
    }
    public int Offset {
      get { return offset_; }
    }
    
    public const int LimitFieldNumber = 2;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffset) return false;
        if (!hasLimit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _columnPaginationFilterFieldNames;
      if (hasOffset) {
        output.WriteInt32(1, field_names[1], Offset);
      }
      if (hasLimit) {
        output.WriteInt32(2, field_names[0], Limit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOffset) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Offset);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Limit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ColumnPaginationFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnPaginationFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnPaginationFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnPaginationFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnPaginationFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnPaginationFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnPaginationFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnPaginationFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnPaginationFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnPaginationFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnPaginationFilter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnPaginationFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnPaginationFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnPaginationFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnPaginationFilter result;
      
      private ColumnPaginationFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnPaginationFilter original = result;
          result = new ColumnPaginationFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnPaginationFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ColumnPaginationFilter.Descriptor; }
      }
      
      public override ColumnPaginationFilter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ColumnPaginationFilter.DefaultInstance; }
      }
      
      public override ColumnPaginationFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnPaginationFilter) {
          return MergeFrom((ColumnPaginationFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnPaginationFilter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ColumnPaginationFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffset) {
          Offset = other.Offset;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnPaginationFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnPaginationFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOffset = input.ReadInt32(ref result.offset_);
              break;
            }
            case 16: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffset {
        get { return result.hasOffset; }
      }
      public int Offset {
        get { return result.Offset; }
        set { SetOffset(value); }
      }
      public Builder SetOffset(int value) {
        PrepareBuilder();
        result.hasOffset = true;
        result.offset_ = value;
        return this;
      }
      public Builder ClearOffset() {
        PrepareBuilder();
        result.hasOffset = false;
        result.offset_ = 0;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
    }
    static ColumnPaginationFilter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Filter : pb::GeneratedMessage<Filter, Filter.Builder> {
    private Filter() { }
    private static readonly Filter defaultInstance = new Filter().MakeReadOnly();
    private static readonly string[] _filterFieldNames = new string[] { "filter", "type" };
    private static readonly uint[] _filterFieldTags = new uint[] { 18, 8 };
    public static Filter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Filter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Filter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_Filter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Filter, Filter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.internal__static_com_alicloud_openservices_tablestore_core_protocol_Filter__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.FilterType type_ = global::com.alicloud.openservices.tablestore.core.protocol.FilterType.FT_SINGLE_COLUMN_VALUE;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FilterType Type {
      get { return type_; }
    }
    
    public const int Filter_FieldNumber = 2;
    private bool hasFilter_;
    private pb::ByteString filter_ = pb::ByteString.Empty;
    public bool HasFilter_ {
      get { return hasFilter_; }
    }
    public pb::ByteString Filter_ {
      get { return filter_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasFilter_) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _filterFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasFilter_) {
        output.WriteBytes(2, field_names[0], Filter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasFilter_) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Filter_);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Filter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Filter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Filter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Filter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Filter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Filter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Filter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Filter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Filter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Filter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Filter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Filter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Filter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Filter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Filter result;
      
      private Filter PrepareBuilder() {
        if (resultIsReadOnly) {
          Filter original = result;
          result = new Filter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Filter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Filter.Descriptor; }
      }
      
      public override Filter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Filter.DefaultInstance; }
      }
      
      public override Filter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Filter) {
          return MergeFrom((Filter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Filter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Filter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasFilter_) {
          Filter_ = other.Filter_;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_filterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _filterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasFilter_ = input.ReadBytes(ref result.filter_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FilterType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.FilterType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.FilterType.FT_SINGLE_COLUMN_VALUE;
        return this;
      }
      
      public bool HasFilter_ {
        get { return result.hasFilter_; }
      }
      public pb::ByteString Filter_ {
        get { return result.Filter_; }
        set { SetFilter_(value); }
      }
      public Builder SetFilter_(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter_ = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter_() {
        PrepareBuilder();
        result.hasFilter_ = false;
        result.filter_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Filter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStoreFilter.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
