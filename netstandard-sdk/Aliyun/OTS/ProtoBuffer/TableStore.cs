// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.alicloud.openservices.tablestore.core.protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class TableStore {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Error__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Error, global::com.alicloud.openservices.tablestore.core.protocol.Error.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Error__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySchema__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySchema__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DefinedColumnSchema__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema, global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DefinedColumnSchema__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PartitionRange__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange, global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PartitionRange__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TableOptions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableOptions, global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TableOptions__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexMeta__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexMeta__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TableMeta__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableMeta, global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TableMeta__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Condition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Condition, global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Condition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CapacityUnit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit, global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CapacityUnit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughputDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails, global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughputDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughput__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput, global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughput__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ConsumedCapacity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity, global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ConsumedCapacity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamSpecification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification, global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamSpecification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails, global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateTableRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateTableResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DropIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DropIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DropIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DropIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListTableRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListTableResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.LoadTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.LoadTableRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.LoadTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.LoadTableResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TimeRange__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TimeRange, global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TimeRange__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ReturnContent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent, global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ReturnContent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PutRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.PutRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PutRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.PutRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchGetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchGetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRangeRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetRangeRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRangeResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetRangeResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionRequest, global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionResponse, global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionRequest, global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionResponse, global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionRequest, global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionResponse, global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListStreamRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListStreamRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Stream__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Stream, global::com.alicloud.openservices.tablestore.core.protocol.Stream.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Stream__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListStreamResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListStreamResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamShard__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StreamShard, global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamShard__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse_StreamRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse_StreamRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeRequest, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse_SplitLocation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse_SplitLocation__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static TableStore() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChF0YWJsZV9zdG9yZS5wcm90bxIyY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNl", 
            "cy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wiJgoFRXJyb3ISDAoEY29kZRgB", 
            "IAIoCRIPCgdtZXNzYWdlGAIgASgJIsgBChBQcmltYXJ5S2V5U2NoZW1hEgwK", 
            "BG5hbWUYASACKAkSUAoEdHlwZRgCIAIoDjJCLmNvbS5hbGljbG91ZC5vcGVu", 
            "c2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlByaW1hcnlLZXlU", 
            "eXBlElQKBm9wdGlvbhgDIAEoDjJELmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlByaW1hcnlLZXlPcHRpb24i", 
            "eAoTRGVmaW5lZENvbHVtblNjaGVtYRIMCgRuYW1lGAEgAigJElMKBHR5cGUY", 
            "AiACKA4yRS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5EZWZpbmVkQ29sdW1uVHlwZSIsCg5QYXJ0aXRpb25S", 
            "YW5nZRINCgViZWdpbhgBIAIoDBILCgNlbmQYAiACKAwi1QEKDFRhYmxlT3B0", 
            "aW9ucxIUCgx0aW1lX3RvX2xpdmUYASABKAUSFAoMbWF4X3ZlcnNpb25zGAIg", 
            "ASgFEl4KEWJsb29tX2ZpbHRlcl90eXBlGAMgASgOMkMuY29tLmFsaWNsb3Vk", 
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQmxvb21G", 
            "aWx0ZXJUeXBlEhIKCmJsb2NrX3NpemUYBCABKAUSJQodZGV2aWF0aW9uX2Nl", 
            "bGxfdmVyc2lvbl9pbl9zZWMYBSABKAMi+QEKCUluZGV4TWV0YRIMCgRuYW1l", 
            "GAEgAigJEhMKC3ByaW1hcnlfa2V5GAIgAygJEhYKDmRlZmluZWRfY29sdW1u", 
            "GAMgAygJEl4KEWluZGV4X3VwZGF0ZV9tb2RlGAQgAigOMkMuY29tLmFsaWNs", 
            "b3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuSW5k", 
            "ZXhVcGRhdGVNb2RlElEKCmluZGV4X3R5cGUYBSACKA4yPS5jb20uYWxpY2xv", 
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5JbmRl", 
            "eFR5cGUirgIKCVRhYmxlTWV0YRISCgp0YWJsZV9uYW1lGAEgAigJElkKC3By", 
            "aW1hcnlfa2V5GAIgAygLMkQuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50", 
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUHJpbWFyeUtleVNjaGVtYRJfCg5k", 
            "ZWZpbmVkX2NvbHVtbhgDIAMoCzJHLmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkRlZmluZWRDb2x1bW5TY2hl", 
            "bWESUQoKaW5kZXhfbWV0YRgEIAMoCzI9LmNvbS5hbGljbG91ZC5vcGVuc2Vy", 
            "dmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkluZGV4TWV0YSKJAQoJ", 
            "Q29uZGl0aW9uEmIKDXJvd19leGlzdGVuY2UYASACKA4ySy5jb20uYWxpY2xv", 
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Sb3dF", 
            "eGlzdGVuY2VFeHBlY3RhdGlvbhIYChBjb2x1bW5fY29uZGl0aW9uGAIgASgM", 
            "IisKDENhcGFjaXR5VW5pdBIMCgRyZWFkGAEgASgFEg0KBXdyaXRlGAIgASgF", 
            "IqwBChlSZXNlcnZlZFRocm91Z2hwdXREZXRhaWxzElcKDWNhcGFjaXR5X3Vu", 
            "aXQYASACKAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3Rv", 
            "cmUuY29yZS5wcm90b2NvbC5DYXBhY2l0eVVuaXQSGgoSbGFzdF9pbmNyZWFz", 
            "ZV90aW1lGAIgAigDEhoKEmxhc3RfZGVjcmVhc2VfdGltZRgDIAEoAyJtChJS", 
            "ZXNlcnZlZFRocm91Z2hwdXQSVwoNY2FwYWNpdHlfdW5pdBgBIAIoCzJALmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLkNhcGFjaXR5VW5pdCJrChBDb25zdW1lZENhcGFjaXR5ElcKDWNhcGFj", 
            "aXR5X3VuaXQYASACKAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRh", 
            "Ymxlc3RvcmUuY29yZS5wcm90b2NvbC5DYXBhY2l0eVVuaXQiRQoTU3RyZWFt", 
            "U3BlY2lmaWNhdGlvbhIVCg1lbmFibGVfc3RyZWFtGAEgAigIEhcKD2V4cGly", 
            "YXRpb25fdGltZRgCIAEoBSJsCg1TdHJlYW1EZXRhaWxzEhUKDWVuYWJsZV9z", 
            "dHJlYW0YASACKAgSEQoJc3RyZWFtX2lkGAIgASgJEhcKD2V4cGlyYXRpb25f", 
            "dGltZRgDIAEoBRIYChBsYXN0X2VuYWJsZV90aW1lGAQgASgDIq8EChJDcmVh", 
            "dGVUYWJsZVJlcXVlc3QSUQoKdGFibGVfbWV0YRgBIAIoCzI9LmNvbS5hbGlj", 
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRh", 
            "YmxlTWV0YRJjChNyZXNlcnZlZF90aHJvdWdocHV0GAIgAigLMkYuY29tLmFs", 
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu", 
            "UmVzZXJ2ZWRUaHJvdWdocHV0ElcKDXRhYmxlX29wdGlvbnMYAyABKAsyQC5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5UYWJsZU9wdGlvbnMSVgoKcGFydGl0aW9ucxgEIAMoCzJCLmNvbS5h", 
            "bGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29s", 
            "LlBhcnRpdGlvblJhbmdlElwKC3N0cmVhbV9zcGVjGAUgASgLMkcuY29tLmFs", 
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu", 
            "U3RyZWFtU3BlY2lmaWNhdGlvbhJSCgtpbmRleF9tZXRhcxgHIAMoCzI9LmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLkluZGV4TWV0YSIVChNDcmVhdGVUYWJsZVJlc3BvbnNlIpsBChJDcmVh", 
            "dGVJbmRleFJlcXVlc3QSFwoPbWFpbl90YWJsZV9uYW1lGAEgAigJElEKCmlu", 
            "ZGV4X21ldGEYAiACKAsyPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRh", 
            "Ymxlc3RvcmUuY29yZS5wcm90b2NvbC5JbmRleE1ldGESGQoRaW5jbHVkZV9i", 
            "YXNlX2RhdGEYAyABKAgiFQoTQ3JlYXRlSW5kZXhSZXNwb25zZSI/ChBEcm9w", 
            "SW5kZXhSZXF1ZXN0EhcKD21haW5fdGFibGVfbmFtZRgBIAIoCRISCgppbmRl", 
            "eF9uYW1lGAIgAigJIhMKEURyb3BJbmRleFJlc3BvbnNlIsQCChJVcGRhdGVU", 
            "YWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRJjChNyZXNlcnZlZF90", 
            "aHJvdWdocHV0GAIgASgLMkYuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50", 
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUmVzZXJ2ZWRUaHJvdWdocHV0ElcK", 
            "DXRhYmxlX29wdGlvbnMYAyABKAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZp", 
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5UYWJsZU9wdGlvbnMSXAoL", 
            "c3RyZWFtX3NwZWMYBCABKAsyRy5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2Vz", 
            "LnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5TdHJlYW1TcGVjaWZpY2F0aW9u", 
            "Ir0CChNVcGRhdGVUYWJsZVJlc3BvbnNlEnIKG3Jlc2VydmVkX3Rocm91Z2hw", 
            "dXRfZGV0YWlscxgBIAIoCzJNLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJlc2VydmVkVGhyb3VnaHB1dERl", 
            "dGFpbHMSVwoNdGFibGVfb3B0aW9ucxgCIAIoCzJALmNvbS5hbGljbG91ZC5v", 
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRhYmxlT3B0", 
            "aW9ucxJZCg5zdHJlYW1fZGV0YWlscxgDIAEoCzJBLmNvbS5hbGljbG91ZC5v", 
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlN0cmVhbURl", 
            "dGFpbHMiKgoURGVzY3JpYmVUYWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgB", 
            "IAIoCSLTBAoVRGVzY3JpYmVUYWJsZVJlc3BvbnNlElEKCnRhYmxlX21ldGEY", 
            "ASACKAsyPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5UYWJsZU1ldGEScgobcmVzZXJ2ZWRfdGhyb3VnaHB1", 
            "dF9kZXRhaWxzGAIgAigLMk0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50", 
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUmVzZXJ2ZWRUaHJvdWdocHV0RGV0", 
            "YWlscxJXCg10YWJsZV9vcHRpb25zGAMgAigLMkAuY29tLmFsaWNsb3VkLm9w", 
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuVGFibGVPcHRp", 
            "b25zElUKDHRhYmxlX3N0YXR1cxgEIAIoDjI/LmNvbS5hbGljbG91ZC5vcGVu", 
            "c2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRhYmxlU3RhdHVz", 
            "ElkKDnN0cmVhbV9kZXRhaWxzGAUgASgLMkEuY29tLmFsaWNsb3VkLm9wZW5z", 
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU3RyZWFtRGV0YWls", 
            "cxIUCgxzaGFyZF9zcGxpdHMYBiADKAwSUgoLaW5kZXhfbWV0YXMYCCADKAsy", 
            "PS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5w", 
            "cm90b2NvbC5JbmRleE1ldGEiEgoQTGlzdFRhYmxlUmVxdWVzdCIoChFMaXN0", 
            "VGFibGVSZXNwb25zZRITCgt0YWJsZV9uYW1lcxgBIAMoCSIoChJEZWxldGVU", 
            "YWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCSIVChNEZWxldGVUYWJs", 
            "ZVJlc3BvbnNlIiYKEExvYWRUYWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgB", 
            "IAIoCSITChFMb2FkVGFibGVSZXNwb25zZSIoChJVbmxvYWRUYWJsZVJlcXVl", 
            "c3QSEgoKdGFibGVfbmFtZRgBIAIoCSIVChNVbmxvYWRUYWJsZVJlc3BvbnNl", 
            "IkgKCVRpbWVSYW5nZRISCgpzdGFydF90aW1lGAEgASgDEhAKCGVuZF90aW1l", 
            "GAIgASgDEhUKDXNwZWNpZmljX3RpbWUYAyABKAMigQEKDVJldHVybkNvbnRl", 
            "bnQSUwoLcmV0dXJuX3R5cGUYASABKA4yPi5jb20uYWxpY2xvdWQub3BlbnNl", 
            "cnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5SZXR1cm5UeXBlEhsK", 
            "E3JldHVybl9jb2x1bW5fbmFtZXMYAiADKAkitgIKDUdldFJvd1JlcXVlc3QS", 
            "EgoKdGFibGVfbmFtZRgBIAIoCRITCgtwcmltYXJ5X2tleRgCIAIoDBIWCg5j", 
            "b2x1bW5zX3RvX2dldBgDIAMoCRJRCgp0aW1lX3JhbmdlGAQgASgLMj0uY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuVGltZVJhbmdlEhQKDG1heF92ZXJzaW9ucxgFIAEoBRIaCgxjYWNoZV9i", 
            "bG9ja3MYBiABKAg6BHRydWUSDgoGZmlsdGVyGAcgASgMEhQKDHN0YXJ0X2Nv", 
            "bHVtbhgIIAEoCRISCgplbmRfY29sdW1uGAkgASgJEg0KBXRva2VuGAogASgM", 
            "EhYKDnRyYW5zYWN0aW9uX2lkGAsgASgJIokBCg5HZXRSb3dSZXNwb25zZRJW", 
            "Cghjb25zdW1lZBgBIAIoCzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkSCwoD", 
            "cm93GAIgAigMEhIKCm5leHRfdG9rZW4YAyABKAwi/wEKEFVwZGF0ZVJvd1Jl", 
            "cXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRISCgpyb3dfY2hhbmdlGAIgAigM", 
            "ElAKCWNvbmRpdGlvbhgDIAIoCzI9LmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbmRpdGlvbhJZCg5yZXR1", 
            "cm5fY29udGVudBgEIAEoCzJBLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJldHVybkNvbnRlbnQSFgoOdHJh", 
            "bnNhY3Rpb25faWQYBSABKAkieAoRVXBkYXRlUm93UmVzcG9uc2USVgoIY29u", 
            "c3VtZWQYASACKAsyRC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl", 
            "c3RvcmUuY29yZS5wcm90b2NvbC5Db25zdW1lZENhcGFjaXR5EgsKA3JvdxgC", 
            "IAEoDCL1AQoNUHV0Um93UmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgAigJEgsK", 
            "A3JvdxgCIAIoDBJQCgljb25kaXRpb24YAyACKAsyPS5jb20uYWxpY2xvdWQu", 
            "b3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Db25kaXRp", 
            "b24SWQoOcmV0dXJuX2NvbnRlbnQYBCABKAsyQS5jb20uYWxpY2xvdWQub3Bl", 
            "bnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5SZXR1cm5Db250", 
            "ZW50EhYKDnRyYW5zYWN0aW9uX2lkGAUgASgJInUKDlB1dFJvd1Jlc3BvbnNl", 
            "ElYKCGNvbnN1bWVkGAEgAigLMkQuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNl", 
            "cy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQ29uc3VtZWRDYXBhY2l0eRIL", 
            "CgNyb3cYAiABKAwigAIKEERlbGV0ZVJvd1JlcXVlc3QSEgoKdGFibGVfbmFt", 
            "ZRgBIAIoCRITCgtwcmltYXJ5X2tleRgCIAIoDBJQCgljb25kaXRpb24YAyAC", 
            "KAsyPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29y", 
            "ZS5wcm90b2NvbC5Db25kaXRpb24SWQoOcmV0dXJuX2NvbnRlbnQYBCABKAsy", 
            "QS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5w", 
            "cm90b2NvbC5SZXR1cm5Db250ZW50EhYKDnRyYW5zYWN0aW9uX2lkGAUgASgJ", 
            "IngKEURlbGV0ZVJvd1Jlc3BvbnNlElYKCGNvbnN1bWVkGAEgAigLMkQuY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuQ29uc3VtZWRDYXBhY2l0eRILCgNyb3cYAiABKAwiqgIKGVRhYmxlSW5C", 
            "YXRjaEdldFJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRITCgtwcmlt", 
            "YXJ5X2tleRgCIAMoDBINCgV0b2tlbhgDIAMoDBIWCg5jb2x1bW5zX3RvX2dl", 
            "dBgEIAMoCRJRCgp0aW1lX3JhbmdlGAUgASgLMj0uY29tLmFsaWNsb3VkLm9w", 
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuVGltZVJhbmdl", 
            "EhQKDG1heF92ZXJzaW9ucxgGIAEoBRIaCgxjYWNoZV9ibG9ja3MYByABKAg6", 
            "BHRydWUSDgoGZmlsdGVyGAggASgMEhQKDHN0YXJ0X2NvbHVtbhgJIAEoCRIS", 
            "CgplbmRfY29sdW1uGAogASgJInMKEkJhdGNoR2V0Um93UmVxdWVzdBJdCgZ0", 
            "YWJsZXMYASADKAsyTS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl", 
            "c3RvcmUuY29yZS5wcm90b2NvbC5UYWJsZUluQmF0Y2hHZXRSb3dSZXF1ZXN0", 
            "IuwBChhSb3dJbkJhdGNoR2V0Um93UmVzcG9uc2USDQoFaXNfb2sYASACKAgS", 
            "SAoFZXJyb3IYAiABKAsyOS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRh", 
            "Ymxlc3RvcmUuY29yZS5wcm90b2NvbC5FcnJvchJWCghjb25zdW1lZBgDIAEo", 
            "CzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3Jl", 
            "LnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkSCwoDcm93GAQgASgMEhIKCm5l", 
            "eHRfdG9rZW4YBSABKAwijAEKGlRhYmxlSW5CYXRjaEdldFJvd1Jlc3BvbnNl", 
            "EhIKCnRhYmxlX25hbWUYASACKAkSWgoEcm93cxgCIAMoCzJMLmNvbS5hbGlj", 
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJv", 
            "d0luQmF0Y2hHZXRSb3dSZXNwb25zZSJ1ChNCYXRjaEdldFJvd1Jlc3BvbnNl", 
            "El4KBnRhYmxlcxgBIAMoCzJOLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRhYmxlSW5CYXRjaEdldFJvd1Jl", 
            "c3BvbnNlIq0CChlSb3dJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0Ek8KBHR5cGUY", 
            "ASACKA4yQS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5PcGVyYXRpb25UeXBlEhIKCnJvd19jaGFuZ2UYAiAC", 
            "KAwSUAoJY29uZGl0aW9uGAMgAigLMj0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2", 
            "aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQ29uZGl0aW9uElkKDnJl", 
            "dHVybl9jb250ZW50GAQgASgLMkEuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNl", 
            "cy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUmV0dXJuQ29udGVudCKOAQob", 
            "VGFibGVJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0EhIKCnRhYmxlX25hbWUYASAC", 
            "KAkSWwoEcm93cxgCIAMoCzJNLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJvd0luQmF0Y2hXcml0ZVJvd1Jl", 
            "cXVlc3QijwEKFEJhdGNoV3JpdGVSb3dSZXF1ZXN0El8KBnRhYmxlcxgBIAMo", 
            "CzJPLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3Jl", 
            "LnByb3RvY29sLlRhYmxlSW5CYXRjaFdyaXRlUm93UmVxdWVzdBIWCg50cmFu", 
            "c2FjdGlvbl9pZBgCIAEoCSLaAQoaUm93SW5CYXRjaFdyaXRlUm93UmVzcG9u", 
            "c2USDQoFaXNfb2sYASACKAgSSAoFZXJyb3IYAiABKAsyOS5jb20uYWxpY2xv", 
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5FcnJv", 
            "chJWCghjb25zdW1lZBgDIAEoCzJELmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkS", 
            "CwoDcm93GAQgASgMIpABChxUYWJsZUluQmF0Y2hXcml0ZVJvd1Jlc3BvbnNl", 
            "EhIKCnRhYmxlX25hbWUYASACKAkSXAoEcm93cxgCIAMoCzJOLmNvbS5hbGlj", 
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJv", 
            "d0luQmF0Y2hXcml0ZVJvd1Jlc3BvbnNlInkKFUJhdGNoV3JpdGVSb3dSZXNw", 
            "b25zZRJgCgZ0YWJsZXMYASADKAsyUC5jb20uYWxpY2xvdWQub3BlbnNlcnZp", 
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5UYWJsZUluQmF0Y2hXcml0", 
            "ZVJvd1Jlc3BvbnNlItEFCg9HZXRSYW5nZVJlcXVlc3QSEgoKdGFibGVfbmFt", 
            "ZRgBIAIoCRJQCglkaXJlY3Rpb24YAiACKA4yPS5jb20uYWxpY2xvdWQub3Bl", 
            "bnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5EaXJlY3Rpb24S", 
            "FgoOY29sdW1uc190b19nZXQYAyADKAkSUQoKdGltZV9yYW5nZRgEIAEoCzI9", 
            "LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnBy", 
            "b3RvY29sLlRpbWVSYW5nZRIUCgxtYXhfdmVyc2lvbnMYBSABKAUSDQoFbGlt", 
            "aXQYBiABKAUSIwobaW5jbHVzaXZlX3N0YXJ0X3ByaW1hcnlfa2V5GAcgAigM", 
            "EiEKGWV4Y2x1c2l2ZV9lbmRfcHJpbWFyeV9rZXkYCCACKAwSGgoMY2FjaGVf", 
            "YmxvY2tzGAkgASgIOgR0cnVlEg4KBmZpbHRlchgKIAEoDBIUCgxzdGFydF9j", 
            "b2x1bW4YCyABKAkSEgoKZW5kX2NvbHVtbhgMIAEoCRINCgV0b2tlbhgNIAEo", 
            "DBIWCg50cmFuc2FjdGlvbl9pZBgOIAEoCRJxChRkYXRhX2Jsb2NrX3R5cGVf", 
            "aGludBgPIAEoDjJBLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz", 
            "dG9yZS5jb3JlLnByb3RvY29sLkRhdGFCbG9ja1R5cGU6EERCVF9QTEFJTl9C", 
            "VUZGRVISKAoacmV0dXJuX2VudGlyZV9wcmltYXJ5X2tleXMYECABKAg6BHRy", 
            "dWUSZgoSY29tcHJlc3NfdHlwZV9oaW50GBEgASgOMkAuY29tLmFsaWNsb3Vk", 
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQ29tcHJl", 
            "c3NUeXBlOghDUFRfTk9ORSLhAgoQR2V0UmFuZ2VSZXNwb25zZRJWCghjb25z", 
            "dW1lZBgBIAIoCzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz", 
            "dG9yZS5jb3JlLnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkSDAoEcm93cxgC", 
            "IAIoDBIeChZuZXh0X3N0YXJ0X3ByaW1hcnlfa2V5GAMgASgMEhIKCm5leHRf", 
            "dG9rZW4YBCABKAwSWgoPZGF0YV9ibG9ja190eXBlGAUgASgOMkEuY29tLmFs", 
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu", 
            "RGF0YUJsb2NrVHlwZRJXCg1jb21wcmVzc190eXBlGAYgASgOMkAuY29tLmFs", 
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu", 
            "Q29tcHJlc3NUeXBlIj8KHFN0YXJ0TG9jYWxUcmFuc2FjdGlvblJlcXVlc3QS", 
            "EgoKdGFibGVfbmFtZRgBIAIoCRILCgNrZXkYAiACKAwiNwodU3RhcnRMb2Nh", 
            "bFRyYW5zYWN0aW9uUmVzcG9uc2USFgoOdHJhbnNhY3Rpb25faWQYASACKAki", 
            "MgoYQ29tbWl0VHJhbnNhY3Rpb25SZXF1ZXN0EhYKDnRyYW5zYWN0aW9uX2lk", 
            "GAEgAigJIhsKGUNvbW1pdFRyYW5zYWN0aW9uUmVzcG9uc2UiMQoXQWJvcnRU", 
            "cmFuc2FjdGlvblJlcXVlc3QSFgoOdHJhbnNhY3Rpb25faWQYASACKAkiGgoY", 
            "QWJvcnRUcmFuc2FjdGlvblJlc3BvbnNlIicKEUxpc3RTdHJlYW1SZXF1ZXN0", 
            "EhIKCnRhYmxlX25hbWUYASABKAkiRgoGU3RyZWFtEhEKCXN0cmVhbV9pZBgB", 
            "IAIoCRISCgp0YWJsZV9uYW1lGAIgAigJEhUKDWNyZWF0aW9uX3RpbWUYAyAC", 
            "KAMiYQoSTGlzdFN0cmVhbVJlc3BvbnNlEksKB3N0cmVhbXMYASADKAsyOi5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5TdHJlYW0iTQoLU3RyZWFtU2hhcmQSEAoIc2hhcmRfaWQYASACKAkS", 
            "EQoJcGFyZW50X2lkGAIgASgJEhkKEXBhcmVudF9zaWJsaW5nX2lkGAMgASgJ", 
            "ImEKFURlc2NyaWJlU3RyZWFtUmVxdWVzdBIRCglzdHJlYW1faWQYASACKAkS", 
            "IAoYaW5jbHVzaXZlX3N0YXJ0X3NoYXJkX2lkGAIgASgJEhMKC3NoYXJkX2xp", 
            "bWl0GAMgASgFIrACChZEZXNjcmliZVN0cmVhbVJlc3BvbnNlEhEKCXN0cmVh", 
            "bV9pZBgBIAIoCRIXCg9leHBpcmF0aW9uX3RpbWUYAiACKAUSEgoKdGFibGVf", 
            "bmFtZRgDIAIoCRIVCg1jcmVhdGlvbl90aW1lGAQgAigDElcKDXN0cmVhbV9z", 
            "dGF0dXMYBSACKA4yQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl", 
            "c3RvcmUuY29yZS5wcm90b2NvbC5TdHJlYW1TdGF0dXMSTwoGc2hhcmRzGAYg", 
            "AygLMj8uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNv", 
            "cmUucHJvdG9jb2wuU3RyZWFtU2hhcmQSFQoNbmV4dF9zaGFyZF9pZBgHIAEo", 
            "CSI+ChdHZXRTaGFyZEl0ZXJhdG9yUmVxdWVzdBIRCglzdHJlYW1faWQYASAC", 
            "KAkSEAoIc2hhcmRfaWQYAiACKAkiMgoYR2V0U2hhcmRJdGVyYXRvclJlc3Bv", 
            "bnNlEhYKDnNoYXJkX2l0ZXJhdG9yGAEgAigJIj8KFkdldFN0cmVhbVJlY29y", 
            "ZFJlcXVlc3QSFgoOc2hhcmRfaXRlcmF0b3IYASACKAkSDQoFbGltaXQYAiAB", 
            "KAUinQIKF0dldFN0cmVhbVJlY29yZFJlc3BvbnNlEnAKDnN0cmVhbV9yZWNv", 
            "cmRzGAEgAygLMlguY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0", 
            "b3JlLmNvcmUucHJvdG9jb2wuR2V0U3RyZWFtUmVjb3JkUmVzcG9uc2UuU3Ry", 
            "ZWFtUmVjb3JkEhsKE25leHRfc2hhcmRfaXRlcmF0b3IYAiABKAkacwoMU3Ry", 
            "ZWFtUmVjb3JkElMKC2FjdGlvbl90eXBlGAEgAigOMj4uY29tLmFsaWNsb3Vk", 
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQWN0aW9u", 
            "VHlwZRIOCgZyZWNvcmQYAiACKAwiagofQ29tcHV0ZVNwbGl0UG9pbnRzQnlT", 
            "aXplUmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgAigJEhIKCnNwbGl0X3NpemUY", 
            "AiACKAMSHwoXc3BsaXRfc2l6ZV91bml0X2luX2J5dGUYAyABKAMikAMKIENv", 
            "bXB1dGVTcGxpdFBvaW50c0J5U2l6ZVJlc3BvbnNlElYKCGNvbnN1bWVkGAEg", 
            "AigLMkQuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNv", 
            "cmUucHJvdG9jb2wuQ29uc3VtZWRDYXBhY2l0eRJUCgZzY2hlbWEYAiADKAsy", 
            "RC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5w", 
            "cm90b2NvbC5QcmltYXJ5S2V5U2NoZW1hEhQKDHNwbGl0X3BvaW50cxgDIAMo", 
            "DBJ1Cglsb2NhdGlvbnMYBCADKAsyYi5jb20uYWxpY2xvdWQub3BlbnNlcnZp", 
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Db21wdXRlU3BsaXRQb2lu", 
            "dHNCeVNpemVSZXNwb25zZS5TcGxpdExvY2F0aW9uGjEKDVNwbGl0TG9jYXRp", 
            "b24SEAoIbG9jYXRpb24YASACKAkSDgoGcmVwZWF0GAIgAigSKjUKDlByaW1h", 
            "cnlLZXlUeXBlEgsKB0lOVEVHRVIQARIKCgZTVFJJTkcQAhIKCgZCSU5BUlkQ", 
            "AypjChFEZWZpbmVkQ29sdW1uVHlwZRIPCgtEQ1RfSU5URUdFUhABEg4KCkRD", 
            "VF9ET1VCTEUQAhIPCgtEQ1RfQk9PTEVBThADEg4KCkRDVF9TVFJJTkcQBBIM", 
            "CghEQ1RfQkxPQhAHKiYKEFByaW1hcnlLZXlPcHRpb24SEgoOQVVUT19JTkNS", 
            "RU1FTlQQASouCg9CbG9vbUZpbHRlclR5cGUSCAoETk9ORRABEggKBENFTEwQ", 
            "AhIHCgNST1cQAypACg1EYXRhQmxvY2tUeXBlEhQKEERCVF9QTEFJTl9CVUZG", 
            "RVIQABIZChVEQlRfU0lNUExFX1JPV19NQVRSSVgQASocCgxDb21wcmVzc1R5", 
            "cGUSDAoIQ1BUX05PTkUQACo6Cg9JbmRleFVwZGF0ZU1vZGUSEwoPSVVNX0FT", 
            "WU5DX0lOREVYEAASEgoOSVVNX1NZTkNfSU5ERVgQASo0CglJbmRleFR5cGUS", 
            "EwoPSVRfR0xPQkFMX0lOREVYEAASEgoOSVRfTE9DQUxfSU5ERVgQASpRCgtU", 
            "YWJsZVN0YXR1cxIKCgZBQ1RJVkUQARIMCghJTkFDVElWRRACEgsKB0xPQURJ", 
            "TkcQAxINCglVTkxPQURJTkcQBBIMCghVUERBVElORxAFKk0KF1Jvd0V4aXN0", 
            "ZW5jZUV4cGVjdGF0aW9uEgoKBklHTk9SRRAAEhAKDEVYUEVDVF9FWElTVBAB", 
            "EhQKEEVYUEVDVF9OT1RfRVhJU1QQAio5CgpSZXR1cm5UeXBlEgsKB1JUX05P", 
            "TkUQABIJCgVSVF9QSxABEhMKD1JUX0FGVEVSX01PRElGWRACKjAKDU9wZXJh", 
            "dGlvblR5cGUSBwoDUFVUEAESCgoGVVBEQVRFEAISCgoGREVMRVRFEAMqJgoJ", 
            "RGlyZWN0aW9uEgsKB0ZPUldBUkQQABIMCghCQUNLV0FSRBABKjYKDFN0cmVh", 
            "bVN0YXR1cxITCg9TVFJFQU1fRU5BQkxJTkcQARIRCg1TVFJFQU1fQUNUSVZF", 
            "EAIqOQoKQWN0aW9uVHlwZRILCgdQVVRfUk9XEAESDgoKVVBEQVRFX1JPVxAC", 
          "Eg4KCkRFTEVURV9ST1cQAw=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Error__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Error__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Error, global::com.alicloud.openservices.tablestore.core.protocol.Error.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Error__Descriptor,
                new string[] { "Code", "Message", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySchema__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySchema__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySchema__Descriptor,
                new string[] { "Name", "Type", "Option", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DefinedColumnSchema__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DefinedColumnSchema__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema, global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DefinedColumnSchema__Descriptor,
                new string[] { "Name", "Type", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PartitionRange__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PartitionRange__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange, global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PartitionRange__Descriptor,
                new string[] { "Begin", "End", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableOptions__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableOptions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableOptions, global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TableOptions__Descriptor,
                new string[] { "TimeToLive", "MaxVersions", "BloomFilterType", "BlockSize", "DeviationCellVersionInSec", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexMeta__Descriptor = Descriptor.MessageTypes[5];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexMeta__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexMeta__Descriptor,
                new string[] { "Name", "PrimaryKey", "DefinedColumn", "IndexUpdateMode", "IndexType", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableMeta__Descriptor = Descriptor.MessageTypes[6];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableMeta__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableMeta, global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TableMeta__Descriptor,
                new string[] { "TableName", "PrimaryKey", "DefinedColumn", "IndexMeta", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Condition__Descriptor = Descriptor.MessageTypes[7];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Condition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Condition, global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Condition__Descriptor,
                new string[] { "RowExistence", "ColumnCondition", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CapacityUnit__Descriptor = Descriptor.MessageTypes[8];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CapacityUnit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit, global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CapacityUnit__Descriptor,
                new string[] { "Read", "Write", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughputDetails__Descriptor = Descriptor.MessageTypes[9];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughputDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails, global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughputDetails__Descriptor,
                new string[] { "CapacityUnit", "LastIncreaseTime", "LastDecreaseTime", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughput__Descriptor = Descriptor.MessageTypes[10];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughput__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput, global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughput__Descriptor,
                new string[] { "CapacityUnit", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ConsumedCapacity__Descriptor = Descriptor.MessageTypes[11];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ConsumedCapacity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity, global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ConsumedCapacity__Descriptor,
                new string[] { "CapacityUnit", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamSpecification__Descriptor = Descriptor.MessageTypes[12];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamSpecification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification, global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamSpecification__Descriptor,
                new string[] { "EnableStream", "ExpirationTime", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamDetails__Descriptor = Descriptor.MessageTypes[13];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails, global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamDetails__Descriptor,
                new string[] { "EnableStream", "StreamId", "ExpirationTime", "LastEnableTime", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableRequest__Descriptor = Descriptor.MessageTypes[14];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateTableRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableRequest__Descriptor,
                new string[] { "TableMeta", "ReservedThroughput", "TableOptions", "Partitions", "StreamSpec", "IndexMetas", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableResponse__Descriptor = Descriptor.MessageTypes[15];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateTableResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexRequest__Descriptor = Descriptor.MessageTypes[16];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexRequest__Descriptor,
                new string[] { "MainTableName", "IndexMeta", "IncludeBaseData", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexResponse__Descriptor = Descriptor.MessageTypes[17];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexRequest__Descriptor = Descriptor.MessageTypes[18];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DropIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DropIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexRequest__Descriptor,
                new string[] { "MainTableName", "IndexName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexResponse__Descriptor = Descriptor.MessageTypes[19];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DropIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DropIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableRequest__Descriptor = Descriptor.MessageTypes[20];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableRequest__Descriptor,
                new string[] { "TableName", "ReservedThroughput", "TableOptions", "StreamSpec", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableResponse__Descriptor = Descriptor.MessageTypes[21];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableResponse__Descriptor,
                new string[] { "ReservedThroughputDetails", "TableOptions", "StreamDetails", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableRequest__Descriptor = Descriptor.MessageTypes[22];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableResponse__Descriptor = Descriptor.MessageTypes[23];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableResponse__Descriptor,
                new string[] { "TableMeta", "ReservedThroughputDetails", "TableOptions", "TableStatus", "StreamDetails", "ShardSplits", "IndexMetas", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableRequest__Descriptor = Descriptor.MessageTypes[24];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListTableRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableRequest__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableResponse__Descriptor = Descriptor.MessageTypes[25];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListTableResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableResponse__Descriptor,
                new string[] { "TableNames", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableRequest__Descriptor = Descriptor.MessageTypes[26];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableResponse__Descriptor = Descriptor.MessageTypes[27];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableRequest__Descriptor = Descriptor.MessageTypes[28];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.LoadTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.LoadTableRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableResponse__Descriptor = Descriptor.MessageTypes[29];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.LoadTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.LoadTableResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableRequest__Descriptor = Descriptor.MessageTypes[30];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableRequest, global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableResponse__Descriptor = Descriptor.MessageTypes[31];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableResponse, global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TimeRange__Descriptor = Descriptor.MessageTypes[32];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TimeRange__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TimeRange, global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TimeRange__Descriptor,
                new string[] { "StartTime", "EndTime", "SpecificTime", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ReturnContent__Descriptor = Descriptor.MessageTypes[33];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ReturnContent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent, global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ReturnContent__Descriptor,
                new string[] { "ReturnType", "ReturnColumnNames", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowRequest__Descriptor = Descriptor.MessageTypes[34];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowRequest__Descriptor,
                new string[] { "TableName", "PrimaryKey", "ColumnsToGet", "TimeRange", "MaxVersions", "CacheBlocks", "Filter", "StartColumn", "EndColumn", "Token", "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowResponse__Descriptor = Descriptor.MessageTypes[35];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowResponse__Descriptor,
                new string[] { "Consumed", "Row", "NextToken", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowRequest__Descriptor = Descriptor.MessageTypes[36];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowRequest__Descriptor,
                new string[] { "TableName", "RowChange", "Condition", "ReturnContent", "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowResponse__Descriptor = Descriptor.MessageTypes[37];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowResponse__Descriptor,
                new string[] { "Consumed", "Row", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowRequest__Descriptor = Descriptor.MessageTypes[38];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PutRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.PutRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowRequest__Descriptor,
                new string[] { "TableName", "Row", "Condition", "ReturnContent", "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowResponse__Descriptor = Descriptor.MessageTypes[39];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PutRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.PutRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowResponse__Descriptor,
                new string[] { "Consumed", "Row", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowRequest__Descriptor = Descriptor.MessageTypes[40];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowRequest__Descriptor,
                new string[] { "TableName", "PrimaryKey", "Condition", "ReturnContent", "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowResponse__Descriptor = Descriptor.MessageTypes[41];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowResponse__Descriptor,
                new string[] { "Consumed", "Row", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowRequest__Descriptor = Descriptor.MessageTypes[42];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowRequest__Descriptor,
                new string[] { "TableName", "PrimaryKey", "Token", "ColumnsToGet", "TimeRange", "MaxVersions", "CacheBlocks", "Filter", "StartColumn", "EndColumn", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowRequest__Descriptor = Descriptor.MessageTypes[43];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowRequest__Descriptor,
                new string[] { "Tables", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchGetRowResponse__Descriptor = Descriptor.MessageTypes[44];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchGetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchGetRowResponse__Descriptor,
                new string[] { "IsOk", "Error", "Consumed", "Row", "NextToken", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowResponse__Descriptor = Descriptor.MessageTypes[45];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowResponse__Descriptor,
                new string[] { "TableName", "Rows", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowResponse__Descriptor = Descriptor.MessageTypes[46];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowResponse__Descriptor,
                new string[] { "Tables", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[47];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowRequest__Descriptor,
                new string[] { "Type", "RowChange", "Condition", "ReturnContent", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[48];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowRequest__Descriptor,
                new string[] { "TableName", "Rows", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowRequest__Descriptor = Descriptor.MessageTypes[49];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowRequest, global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowRequest__Descriptor,
                new string[] { "Tables", "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowResponse__Descriptor = Descriptor.MessageTypes[50];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowResponse__Descriptor,
                new string[] { "IsOk", "Error", "Consumed", "Row", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowResponse__Descriptor = Descriptor.MessageTypes[51];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowResponse__Descriptor,
                new string[] { "TableName", "Rows", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowResponse__Descriptor = Descriptor.MessageTypes[52];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowResponse, global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowResponse__Descriptor,
                new string[] { "Tables", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeRequest__Descriptor = Descriptor.MessageTypes[53];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRangeRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetRangeRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeRequest__Descriptor,
                new string[] { "TableName", "Direction", "ColumnsToGet", "TimeRange", "MaxVersions", "Limit", "InclusiveStartPrimaryKey", "ExclusiveEndPrimaryKey", "CacheBlocks", "Filter", "StartColumn", "EndColumn", "Token", "TransactionId", "DataBlockTypeHint", "ReturnEntirePrimaryKeys", "CompressTypeHint", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeResponse__Descriptor = Descriptor.MessageTypes[54];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetRangeResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetRangeResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeResponse__Descriptor,
                new string[] { "Consumed", "Rows", "NextStartPrimaryKey", "NextToken", "DataBlockType", "CompressType", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionRequest__Descriptor = Descriptor.MessageTypes[55];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionRequest, global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionRequest__Descriptor,
                new string[] { "TableName", "Key", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionResponse__Descriptor = Descriptor.MessageTypes[56];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionResponse, global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionResponse__Descriptor,
                new string[] { "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionRequest__Descriptor = Descriptor.MessageTypes[57];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionRequest, global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionRequest__Descriptor,
                new string[] { "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionResponse__Descriptor = Descriptor.MessageTypes[58];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionResponse, global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionRequest__Descriptor = Descriptor.MessageTypes[59];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionRequest, global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionRequest__Descriptor,
                new string[] { "TransactionId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionResponse__Descriptor = Descriptor.MessageTypes[60];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionResponse, global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamRequest__Descriptor = Descriptor.MessageTypes[61];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListStreamRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListStreamRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Stream__Descriptor = Descriptor.MessageTypes[62];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Stream__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Stream, global::com.alicloud.openservices.tablestore.core.protocol.Stream.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Stream__Descriptor,
                new string[] { "StreamId", "TableName", "CreationTime", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamResponse__Descriptor = Descriptor.MessageTypes[63];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListStreamResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListStreamResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamResponse__Descriptor,
                new string[] { "Streams", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamShard__Descriptor = Descriptor.MessageTypes[64];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamShard__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.StreamShard, global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamShard__Descriptor,
                new string[] { "ShardId", "ParentId", "ParentSiblingId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamRequest__Descriptor = Descriptor.MessageTypes[65];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamRequest__Descriptor,
                new string[] { "StreamId", "InclusiveStartShardId", "ShardLimit", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamResponse__Descriptor = Descriptor.MessageTypes[66];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamResponse__Descriptor,
                new string[] { "StreamId", "ExpirationTime", "TableName", "CreationTime", "StreamStatus", "Shards", "NextShardId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorRequest__Descriptor = Descriptor.MessageTypes[67];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorRequest__Descriptor,
                new string[] { "StreamId", "ShardId", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorResponse__Descriptor = Descriptor.MessageTypes[68];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorResponse__Descriptor,
                new string[] { "ShardIterator", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordRequest__Descriptor = Descriptor.MessageTypes[69];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordRequest, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordRequest__Descriptor,
                new string[] { "ShardIterator", "Limit", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__Descriptor = Descriptor.MessageTypes[70];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__Descriptor,
                new string[] { "StreamRecords", "NextShardIterator", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse_StreamRecord__Descriptor = internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__Descriptor.NestedTypes[0];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse_StreamRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse_StreamRecord__Descriptor,
                new string[] { "ActionType", "Record", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeRequest__Descriptor = Descriptor.MessageTypes[71];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeRequest, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeRequest__Descriptor,
                new string[] { "TableName", "SplitSize", "SplitSizeUnitInByte", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__Descriptor = Descriptor.MessageTypes[72];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__Descriptor,
                new string[] { "Consumed", "Schema", "SplitPoints", "Locations", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse_SplitLocation__Descriptor = internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__Descriptor.NestedTypes[0];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse_SplitLocation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse_SplitLocation__Descriptor,
                new string[] { "Location", "Repeat", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum PrimaryKeyType {
    INTEGER = 1,
    STRING = 2,
    BINARY = 3,
  }
  
  public enum DefinedColumnType {
    DCT_INTEGER = 1,
    DCT_DOUBLE = 2,
    DCT_BOOLEAN = 3,
    DCT_STRING = 4,
    DCT_BLOB = 7,
  }
  
  public enum PrimaryKeyOption {
    AUTO_INCREMENT = 1,
  }
  
  public enum BloomFilterType {
    NONE = 1,
    CELL = 2,
    ROW = 3,
  }
  
  public enum DataBlockType {
    DBT_PLAIN_BUFFER = 0,
    DBT_SIMPLE_ROW_MATRIX = 1,
  }
  
  public enum CompressType {
    CPT_NONE = 0,
  }
  
  public enum IndexUpdateMode {
    IUM_ASYNC_INDEX = 0,
    IUM_SYNC_INDEX = 1,
  }
  
  public enum IndexType {
    IT_GLOBAL_INDEX = 0,
    IT_LOCAL_INDEX = 1,
  }
  
  public enum TableStatus {
    ACTIVE = 1,
    INACTIVE = 2,
    LOADING = 3,
    UNLOADING = 4,
    UPDATING = 5,
  }
  
  public enum RowExistenceExpectation {
    IGNORE = 0,
    EXPECT_EXIST = 1,
    EXPECT_NOT_EXIST = 2,
  }
  
  public enum ReturnType {
    RT_NONE = 0,
    RT_PK = 1,
    RT_AFTER_MODIFY = 2,
  }
  
  public enum OperationType {
    PUT = 1,
    UPDATE = 2,
    DELETE = 3,
  }
  
  public enum Direction {
    FORWARD = 0,
    BACKWARD = 1,
  }
  
  public enum StreamStatus {
    STREAM_ENABLING = 1,
    STREAM_ACTIVE = 2,
  }
  
  public enum ActionType {
    PUT_ROW = 1,
    UPDATE_ROW = 2,
    DELETE_ROW = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Error : pb::GeneratedMessage<Error, Error.Builder> {
    private Error() { }
    private static readonly Error defaultInstance = new Error().MakeReadOnly();
    private static readonly string[] _errorFieldNames = new string[] { "code", "message" };
    private static readonly uint[] _errorFieldTags = new uint[] { 10, 18 };
    public static Error DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Error DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Error ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_Error__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Error, Error.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_Error__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private string code_ = "";
    public bool HasCode {
      get { return hasCode; }
    }
    public string Code {
      get { return code_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _errorFieldNames;
      if (hasCode) {
        output.WriteString(1, field_names[0], Code);
      }
      if (hasMessage) {
        output.WriteString(2, field_names[1], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Code);
      }
      if (hasMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Message);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Error ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Error ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Error ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Error ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Error ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Error ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Error ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Error ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Error ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Error ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Error MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Error prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Error, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Error cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Error result;
      
      private Error PrepareBuilder() {
        if (resultIsReadOnly) {
          Error original = result;
          result = new Error();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Error MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Error.Descriptor; }
      }
      
      public override Error DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Error.DefaultInstance; }
      }
      
      public override Error BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Error) {
          return MergeFrom((Error) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Error other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Error.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_errorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _errorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCode = input.ReadString(ref result.code_);
              break;
            }
            case 18: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public string Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = "";
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static Error() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PrimaryKeySchema : pb::GeneratedMessage<PrimaryKeySchema, PrimaryKeySchema.Builder> {
    private PrimaryKeySchema() { }
    private static readonly PrimaryKeySchema defaultInstance = new PrimaryKeySchema().MakeReadOnly();
    private static readonly string[] _primaryKeySchemaFieldNames = new string[] { "name", "option", "type" };
    private static readonly uint[] _primaryKeySchemaFieldTags = new uint[] { 10, 24, 16 };
    public static PrimaryKeySchema DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PrimaryKeySchema DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PrimaryKeySchema ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySchema__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PrimaryKeySchema, PrimaryKeySchema.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySchema__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyType type_ = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyType.INTEGER;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyType Type {
      get { return type_; }
    }
    
    public const int OptionFieldNumber = 3;
    private bool hasOption;
    private global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyOption option_ = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyOption.AUTO_INCREMENT;
    public bool HasOption {
      get { return hasOption; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyOption Option {
      get { return option_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _primaryKeySchemaFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[2], (int) Type, Type);
      }
      if (hasOption) {
        output.WriteEnum(3, field_names[1], (int) Option, Option);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasOption) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Option);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PrimaryKeySchema ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrimaryKeySchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySchema ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrimaryKeySchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySchema ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrimaryKeySchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySchema ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PrimaryKeySchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PrimaryKeySchema ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrimaryKeySchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PrimaryKeySchema MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PrimaryKeySchema prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PrimaryKeySchema, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PrimaryKeySchema cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PrimaryKeySchema result;
      
      private PrimaryKeySchema PrepareBuilder() {
        if (resultIsReadOnly) {
          PrimaryKeySchema original = result;
          result = new PrimaryKeySchema();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PrimaryKeySchema MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.Descriptor; }
      }
      
      public override PrimaryKeySchema DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.DefaultInstance; }
      }
      
      public override PrimaryKeySchema BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PrimaryKeySchema) {
          return MergeFrom((PrimaryKeySchema) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PrimaryKeySchema other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasOption) {
          Option = other.Option;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_primaryKeySchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _primaryKeySchemaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.option_, out unknown)) {
                result.hasOption = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyType.INTEGER;
        return this;
      }
      
      public bool HasOption {
       get { return result.hasOption; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyOption Option {
        get { return result.Option; }
        set { SetOption(value); }
      }
      public Builder SetOption(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyOption value) {
        PrepareBuilder();
        result.hasOption = true;
        result.option_ = value;
        return this;
      }
      public Builder ClearOption() {
        PrepareBuilder();
        result.hasOption = false;
        result.option_ = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeyOption.AUTO_INCREMENT;
        return this;
      }
    }
    static PrimaryKeySchema() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DefinedColumnSchema : pb::GeneratedMessage<DefinedColumnSchema, DefinedColumnSchema.Builder> {
    private DefinedColumnSchema() { }
    private static readonly DefinedColumnSchema defaultInstance = new DefinedColumnSchema().MakeReadOnly();
    private static readonly string[] _definedColumnSchemaFieldNames = new string[] { "name", "type" };
    private static readonly uint[] _definedColumnSchemaFieldTags = new uint[] { 10, 16 };
    public static DefinedColumnSchema DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DefinedColumnSchema DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DefinedColumnSchema ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DefinedColumnSchema__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DefinedColumnSchema, DefinedColumnSchema.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DefinedColumnSchema__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnType type_ = global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnType.DCT_INTEGER;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnType Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _definedColumnSchemaFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[1], (int) Type, Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DefinedColumnSchema ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DefinedColumnSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DefinedColumnSchema ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DefinedColumnSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DefinedColumnSchema ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DefinedColumnSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DefinedColumnSchema ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DefinedColumnSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DefinedColumnSchema ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DefinedColumnSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DefinedColumnSchema MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DefinedColumnSchema prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DefinedColumnSchema, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DefinedColumnSchema cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DefinedColumnSchema result;
      
      private DefinedColumnSchema PrepareBuilder() {
        if (resultIsReadOnly) {
          DefinedColumnSchema original = result;
          result = new DefinedColumnSchema();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DefinedColumnSchema MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.Descriptor; }
      }
      
      public override DefinedColumnSchema DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.DefaultInstance; }
      }
      
      public override DefinedColumnSchema BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DefinedColumnSchema) {
          return MergeFrom((DefinedColumnSchema) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DefinedColumnSchema other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_definedColumnSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _definedColumnSchemaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnType.DCT_INTEGER;
        return this;
      }
    }
    static DefinedColumnSchema() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PartitionRange : pb::GeneratedMessage<PartitionRange, PartitionRange.Builder> {
    private PartitionRange() { }
    private static readonly PartitionRange defaultInstance = new PartitionRange().MakeReadOnly();
    private static readonly string[] _partitionRangeFieldNames = new string[] { "begin", "end" };
    private static readonly uint[] _partitionRangeFieldTags = new uint[] { 10, 18 };
    public static PartitionRange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PartitionRange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PartitionRange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PartitionRange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PartitionRange, PartitionRange.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PartitionRange__FieldAccessorTable; }
    }
    
    public const int BeginFieldNumber = 1;
    private bool hasBegin;
    private pb::ByteString begin_ = pb::ByteString.Empty;
    public bool HasBegin {
      get { return hasBegin; }
    }
    public pb::ByteString Begin {
      get { return begin_; }
    }
    
    public const int EndFieldNumber = 2;
    private bool hasEnd;
    private pb::ByteString end_ = pb::ByteString.Empty;
    public bool HasEnd {
      get { return hasEnd; }
    }
    public pb::ByteString End {
      get { return end_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBegin) return false;
        if (!hasEnd) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _partitionRangeFieldNames;
      if (hasBegin) {
        output.WriteBytes(1, field_names[0], Begin);
      }
      if (hasEnd) {
        output.WriteBytes(2, field_names[1], End);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBegin) {
        size += pb::CodedOutputStream.ComputeBytesSize(1, Begin);
      }
      if (hasEnd) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, End);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PartitionRange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PartitionRange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PartitionRange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PartitionRange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PartitionRange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PartitionRange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PartitionRange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PartitionRange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PartitionRange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PartitionRange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PartitionRange MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PartitionRange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PartitionRange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PartitionRange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PartitionRange result;
      
      private PartitionRange PrepareBuilder() {
        if (resultIsReadOnly) {
          PartitionRange original = result;
          result = new PartitionRange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PartitionRange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.Descriptor; }
      }
      
      public override PartitionRange DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.DefaultInstance; }
      }
      
      public override PartitionRange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PartitionRange) {
          return MergeFrom((PartitionRange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PartitionRange other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBegin) {
          Begin = other.Begin;
        }
        if (other.HasEnd) {
          End = other.End;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_partitionRangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _partitionRangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBegin = input.ReadBytes(ref result.begin_);
              break;
            }
            case 18: {
              result.hasEnd = input.ReadBytes(ref result.end_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBegin {
        get { return result.hasBegin; }
      }
      public pb::ByteString Begin {
        get { return result.Begin; }
        set { SetBegin(value); }
      }
      public Builder SetBegin(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBegin = true;
        result.begin_ = value;
        return this;
      }
      public Builder ClearBegin() {
        PrepareBuilder();
        result.hasBegin = false;
        result.begin_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasEnd {
        get { return result.hasEnd; }
      }
      public pb::ByteString End {
        get { return result.End; }
        set { SetEnd(value); }
      }
      public Builder SetEnd(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEnd = true;
        result.end_ = value;
        return this;
      }
      public Builder ClearEnd() {
        PrepareBuilder();
        result.hasEnd = false;
        result.end_ = pb::ByteString.Empty;
        return this;
      }
    }
    static PartitionRange() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableOptions : pb::GeneratedMessage<TableOptions, TableOptions.Builder> {
    private TableOptions() { }
    private static readonly TableOptions defaultInstance = new TableOptions().MakeReadOnly();
    private static readonly string[] _tableOptionsFieldNames = new string[] { "block_size", "bloom_filter_type", "deviation_cell_version_in_sec", "max_versions", "time_to_live" };
    private static readonly uint[] _tableOptionsFieldTags = new uint[] { 32, 24, 40, 16, 8 };
    public static TableOptions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableOptions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableOptions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableOptions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableOptions, TableOptions.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableOptions__FieldAccessorTable; }
    }
    
    public const int TimeToLiveFieldNumber = 1;
    private bool hasTimeToLive;
    private int timeToLive_;
    public bool HasTimeToLive {
      get { return hasTimeToLive; }
    }
    public int TimeToLive {
      get { return timeToLive_; }
    }
    
    public const int MaxVersionsFieldNumber = 2;
    private bool hasMaxVersions;
    private int maxVersions_;
    public bool HasMaxVersions {
      get { return hasMaxVersions; }
    }
    public int MaxVersions {
      get { return maxVersions_; }
    }
    
    public const int BloomFilterTypeFieldNumber = 3;
    private bool hasBloomFilterType;
    private global::com.alicloud.openservices.tablestore.core.protocol.BloomFilterType bloomFilterType_ = global::com.alicloud.openservices.tablestore.core.protocol.BloomFilterType.NONE;
    public bool HasBloomFilterType {
      get { return hasBloomFilterType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.BloomFilterType BloomFilterType {
      get { return bloomFilterType_; }
    }
    
    public const int BlockSizeFieldNumber = 4;
    private bool hasBlockSize;
    private int blockSize_;
    public bool HasBlockSize {
      get { return hasBlockSize; }
    }
    public int BlockSize {
      get { return blockSize_; }
    }
    
    public const int DeviationCellVersionInSecFieldNumber = 5;
    private bool hasDeviationCellVersionInSec;
    private long deviationCellVersionInSec_;
    public bool HasDeviationCellVersionInSec {
      get { return hasDeviationCellVersionInSec; }
    }
    public long DeviationCellVersionInSec {
      get { return deviationCellVersionInSec_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableOptionsFieldNames;
      if (hasTimeToLive) {
        output.WriteInt32(1, field_names[4], TimeToLive);
      }
      if (hasMaxVersions) {
        output.WriteInt32(2, field_names[3], MaxVersions);
      }
      if (hasBloomFilterType) {
        output.WriteEnum(3, field_names[1], (int) BloomFilterType, BloomFilterType);
      }
      if (hasBlockSize) {
        output.WriteInt32(4, field_names[0], BlockSize);
      }
      if (hasDeviationCellVersionInSec) {
        output.WriteInt64(5, field_names[2], DeviationCellVersionInSec);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTimeToLive) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TimeToLive);
      }
      if (hasMaxVersions) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, MaxVersions);
      }
      if (hasBloomFilterType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) BloomFilterType);
      }
      if (hasBlockSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, BlockSize);
      }
      if (hasDeviationCellVersionInSec) {
        size += pb::CodedOutputStream.ComputeInt64Size(5, DeviationCellVersionInSec);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableOptions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableOptions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableOptions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableOptions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableOptions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableOptions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableOptions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableOptions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableOptions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableOptions result;
      
      private TableOptions PrepareBuilder() {
        if (resultIsReadOnly) {
          TableOptions original = result;
          result = new TableOptions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableOptions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Descriptor; }
      }
      
      public override TableOptions DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance; }
      }
      
      public override TableOptions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableOptions) {
          return MergeFrom((TableOptions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableOptions other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTimeToLive) {
          TimeToLive = other.TimeToLive;
        }
        if (other.HasMaxVersions) {
          MaxVersions = other.MaxVersions;
        }
        if (other.HasBloomFilterType) {
          BloomFilterType = other.BloomFilterType;
        }
        if (other.HasBlockSize) {
          BlockSize = other.BlockSize;
        }
        if (other.HasDeviationCellVersionInSec) {
          DeviationCellVersionInSec = other.DeviationCellVersionInSec;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableOptionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTimeToLive = input.ReadInt32(ref result.timeToLive_);
              break;
            }
            case 16: {
              result.hasMaxVersions = input.ReadInt32(ref result.maxVersions_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.bloomFilterType_, out unknown)) {
                result.hasBloomFilterType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasBlockSize = input.ReadInt32(ref result.blockSize_);
              break;
            }
            case 40: {
              result.hasDeviationCellVersionInSec = input.ReadInt64(ref result.deviationCellVersionInSec_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTimeToLive {
        get { return result.hasTimeToLive; }
      }
      public int TimeToLive {
        get { return result.TimeToLive; }
        set { SetTimeToLive(value); }
      }
      public Builder SetTimeToLive(int value) {
        PrepareBuilder();
        result.hasTimeToLive = true;
        result.timeToLive_ = value;
        return this;
      }
      public Builder ClearTimeToLive() {
        PrepareBuilder();
        result.hasTimeToLive = false;
        result.timeToLive_ = 0;
        return this;
      }
      
      public bool HasMaxVersions {
        get { return result.hasMaxVersions; }
      }
      public int MaxVersions {
        get { return result.MaxVersions; }
        set { SetMaxVersions(value); }
      }
      public Builder SetMaxVersions(int value) {
        PrepareBuilder();
        result.hasMaxVersions = true;
        result.maxVersions_ = value;
        return this;
      }
      public Builder ClearMaxVersions() {
        PrepareBuilder();
        result.hasMaxVersions = false;
        result.maxVersions_ = 0;
        return this;
      }
      
      public bool HasBloomFilterType {
       get { return result.hasBloomFilterType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.BloomFilterType BloomFilterType {
        get { return result.BloomFilterType; }
        set { SetBloomFilterType(value); }
      }
      public Builder SetBloomFilterType(global::com.alicloud.openservices.tablestore.core.protocol.BloomFilterType value) {
        PrepareBuilder();
        result.hasBloomFilterType = true;
        result.bloomFilterType_ = value;
        return this;
      }
      public Builder ClearBloomFilterType() {
        PrepareBuilder();
        result.hasBloomFilterType = false;
        result.bloomFilterType_ = global::com.alicloud.openservices.tablestore.core.protocol.BloomFilterType.NONE;
        return this;
      }
      
      public bool HasBlockSize {
        get { return result.hasBlockSize; }
      }
      public int BlockSize {
        get { return result.BlockSize; }
        set { SetBlockSize(value); }
      }
      public Builder SetBlockSize(int value) {
        PrepareBuilder();
        result.hasBlockSize = true;
        result.blockSize_ = value;
        return this;
      }
      public Builder ClearBlockSize() {
        PrepareBuilder();
        result.hasBlockSize = false;
        result.blockSize_ = 0;
        return this;
      }
      
      public bool HasDeviationCellVersionInSec {
        get { return result.hasDeviationCellVersionInSec; }
      }
      public long DeviationCellVersionInSec {
        get { return result.DeviationCellVersionInSec; }
        set { SetDeviationCellVersionInSec(value); }
      }
      public Builder SetDeviationCellVersionInSec(long value) {
        PrepareBuilder();
        result.hasDeviationCellVersionInSec = true;
        result.deviationCellVersionInSec_ = value;
        return this;
      }
      public Builder ClearDeviationCellVersionInSec() {
        PrepareBuilder();
        result.hasDeviationCellVersionInSec = false;
        result.deviationCellVersionInSec_ = 0L;
        return this;
      }
    }
    static TableOptions() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IndexMeta : pb::GeneratedMessage<IndexMeta, IndexMeta.Builder> {
    private IndexMeta() { }
    private static readonly IndexMeta defaultInstance = new IndexMeta().MakeReadOnly();
    private static readonly string[] _indexMetaFieldNames = new string[] { "defined_column", "index_type", "index_update_mode", "name", "primary_key" };
    private static readonly uint[] _indexMetaFieldTags = new uint[] { 26, 40, 32, 10, 18 };
    public static IndexMeta DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexMeta DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IndexMeta ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexMeta__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexMeta, IndexMeta.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexMeta__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<string> primaryKey_ = new pbc::PopsicleList<string>();
    public scg::IList<string> PrimaryKeyList {
      get { return pbc::Lists.AsReadOnly(primaryKey_); }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public string GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int DefinedColumnFieldNumber = 3;
    private pbc::PopsicleList<string> definedColumn_ = new pbc::PopsicleList<string>();
    public scg::IList<string> DefinedColumnList {
      get { return pbc::Lists.AsReadOnly(definedColumn_); }
    }
    public int DefinedColumnCount {
      get { return definedColumn_.Count; }
    }
    public string GetDefinedColumn(int index) {
      return definedColumn_[index];
    }
    
    public const int IndexUpdateModeFieldNumber = 4;
    private bool hasIndexUpdateMode;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexUpdateMode indexUpdateMode_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexUpdateMode.IUM_ASYNC_INDEX;
    public bool HasIndexUpdateMode {
      get { return hasIndexUpdateMode; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexUpdateMode IndexUpdateMode {
      get { return indexUpdateMode_; }
    }
    
    public const int IndexTypeFieldNumber = 5;
    private bool hasIndexType;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexType indexType_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexType.IT_GLOBAL_INDEX;
    public bool HasIndexType {
      get { return hasIndexType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexType IndexType {
      get { return indexType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasIndexUpdateMode) return false;
        if (!hasIndexType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _indexMetaFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[3], Name);
      }
      if (primaryKey_.Count > 0) {
        output.WriteStringArray(2, field_names[4], primaryKey_);
      }
      if (definedColumn_.Count > 0) {
        output.WriteStringArray(3, field_names[0], definedColumn_);
      }
      if (hasIndexUpdateMode) {
        output.WriteEnum(4, field_names[2], (int) IndexUpdateMode, IndexUpdateMode);
      }
      if (hasIndexType) {
        output.WriteEnum(5, field_names[1], (int) IndexType, IndexType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      {
        int dataSize = 0;
        foreach (string element in PrimaryKeyList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * primaryKey_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in DefinedColumnList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * definedColumn_.Count;
      }
      if (hasIndexUpdateMode) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) IndexUpdateMode);
      }
      if (hasIndexType) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) IndexType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IndexMeta ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexMeta ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexMeta ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexMeta ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexMeta ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexMeta ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexMeta ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexMeta ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexMeta ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexMeta ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IndexMeta MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      definedColumn_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexMeta prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IndexMeta, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IndexMeta cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IndexMeta result;
      
      private IndexMeta PrepareBuilder() {
        if (resultIsReadOnly) {
          IndexMeta original = result;
          result = new IndexMeta();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IndexMeta MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Descriptor; }
      }
      
      public override IndexMeta DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.DefaultInstance; }
      }
      
      public override IndexMeta BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexMeta) {
          return MergeFrom((IndexMeta) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexMeta other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.definedColumn_.Count != 0) {
          result.definedColumn_.Add(other.definedColumn_);
        }
        if (other.HasIndexUpdateMode) {
          IndexUpdateMode = other.IndexUpdateMode;
        }
        if (other.HasIndexType) {
          IndexType = other.IndexType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_indexMetaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _indexMetaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.primaryKey_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.definedColumn_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.indexUpdateMode_, out unknown)) {
                result.hasIndexUpdateMode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.indexType_, out unknown)) {
                result.hasIndexType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public string GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder AddPrimaryKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> DefinedColumnList {
        get { return PrepareBuilder().definedColumn_; }
      }
      public int DefinedColumnCount {
        get { return result.DefinedColumnCount; }
      }
      public string GetDefinedColumn(int index) {
        return result.GetDefinedColumn(index);
      }
      public Builder SetDefinedColumn(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.definedColumn_[index] = value;
        return this;
      }
      public Builder AddDefinedColumn(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.definedColumn_.Add(value);
        return this;
      }
      public Builder AddRangeDefinedColumn(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.definedColumn_.Add(values);
        return this;
      }
      public Builder ClearDefinedColumn() {
        PrepareBuilder();
        result.definedColumn_.Clear();
        return this;
      }
      
      public bool HasIndexUpdateMode {
       get { return result.hasIndexUpdateMode; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexUpdateMode IndexUpdateMode {
        get { return result.IndexUpdateMode; }
        set { SetIndexUpdateMode(value); }
      }
      public Builder SetIndexUpdateMode(global::com.alicloud.openservices.tablestore.core.protocol.IndexUpdateMode value) {
        PrepareBuilder();
        result.hasIndexUpdateMode = true;
        result.indexUpdateMode_ = value;
        return this;
      }
      public Builder ClearIndexUpdateMode() {
        PrepareBuilder();
        result.hasIndexUpdateMode = false;
        result.indexUpdateMode_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexUpdateMode.IUM_ASYNC_INDEX;
        return this;
      }
      
      public bool HasIndexType {
       get { return result.hasIndexType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexType IndexType {
        get { return result.IndexType; }
        set { SetIndexType(value); }
      }
      public Builder SetIndexType(global::com.alicloud.openservices.tablestore.core.protocol.IndexType value) {
        PrepareBuilder();
        result.hasIndexType = true;
        result.indexType_ = value;
        return this;
      }
      public Builder ClearIndexType() {
        PrepareBuilder();
        result.hasIndexType = false;
        result.indexType_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexType.IT_GLOBAL_INDEX;
        return this;
      }
    }
    static IndexMeta() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableMeta : pb::GeneratedMessage<TableMeta, TableMeta.Builder> {
    private TableMeta() { }
    private static readonly TableMeta defaultInstance = new TableMeta().MakeReadOnly();
    private static readonly string[] _tableMetaFieldNames = new string[] { "defined_column", "index_meta", "primary_key", "table_name" };
    private static readonly uint[] _tableMetaFieldTags = new uint[] { 26, 34, 18, 10 };
    public static TableMeta DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableMeta DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableMeta ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableMeta__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableMeta, TableMeta.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableMeta__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> primaryKey_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> PrimaryKeyList {
      get { return primaryKey_; }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int DefinedColumnFieldNumber = 3;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema> definedColumn_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema> DefinedColumnList {
      get { return definedColumn_; }
    }
    public int DefinedColumnCount {
      get { return definedColumn_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema GetDefinedColumn(int index) {
      return definedColumn_[index];
    }
    
    public const int IndexMetaFieldNumber = 4;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> indexMeta_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> IndexMetaList {
      get { return indexMeta_; }
    }
    public int IndexMetaCount {
      get { return indexMeta_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta GetIndexMeta(int index) {
      return indexMeta_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema element in PrimaryKeyList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema element in DefinedColumnList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta element in IndexMetaList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableMetaFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (primaryKey_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], primaryKey_);
      }
      if (definedColumn_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], definedColumn_);
      }
      if (indexMeta_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], indexMeta_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema element in PrimaryKeyList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema element in DefinedColumnList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta element in IndexMetaList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableMeta ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableMeta ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableMeta ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableMeta ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableMeta ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableMeta ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableMeta ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableMeta ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableMeta ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableMeta ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableMeta MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      definedColumn_.MakeReadOnly();
      indexMeta_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableMeta prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableMeta, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableMeta cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableMeta result;
      
      private TableMeta PrepareBuilder() {
        if (resultIsReadOnly) {
          TableMeta original = result;
          result = new TableMeta();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableMeta MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.Descriptor; }
      }
      
      public override TableMeta DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.DefaultInstance; }
      }
      
      public override TableMeta BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableMeta) {
          return MergeFrom((TableMeta) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableMeta other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.definedColumn_.Count != 0) {
          result.definedColumn_.Add(other.definedColumn_);
        }
        if (other.indexMeta_.Count != 0) {
          result.indexMeta_.Add(other.indexMeta_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableMetaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableMetaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.primaryKey_, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.definedColumn_, global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.indexMeta_, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder SetPrimaryKey(int index, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrimaryKey(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddPrimaryKey(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.primaryKey_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema> DefinedColumnList {
        get { return PrepareBuilder().definedColumn_; }
      }
      public int DefinedColumnCount {
        get { return result.DefinedColumnCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema GetDefinedColumn(int index) {
        return result.GetDefinedColumn(index);
      }
      public Builder SetDefinedColumn(int index, global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.definedColumn_[index] = value;
        return this;
      }
      public Builder SetDefinedColumn(int index, global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.definedColumn_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDefinedColumn(global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.definedColumn_.Add(value);
        return this;
      }
      public Builder AddDefinedColumn(global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.definedColumn_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDefinedColumn(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.DefinedColumnSchema> values) {
        PrepareBuilder();
        result.definedColumn_.Add(values);
        return this;
      }
      public Builder ClearDefinedColumn() {
        PrepareBuilder();
        result.definedColumn_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> IndexMetaList {
        get { return PrepareBuilder().indexMeta_; }
      }
      public int IndexMetaCount {
        get { return result.IndexMetaCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta GetIndexMeta(int index) {
        return result.GetIndexMeta(index);
      }
      public Builder SetIndexMeta(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indexMeta_[index] = value;
        return this;
      }
      public Builder SetIndexMeta(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indexMeta_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIndexMeta(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indexMeta_.Add(value);
        return this;
      }
      public Builder AddIndexMeta(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indexMeta_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIndexMeta(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> values) {
        PrepareBuilder();
        result.indexMeta_.Add(values);
        return this;
      }
      public Builder ClearIndexMeta() {
        PrepareBuilder();
        result.indexMeta_.Clear();
        return this;
      }
    }
    static TableMeta() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Condition : pb::GeneratedMessage<Condition, Condition.Builder> {
    private Condition() { }
    private static readonly Condition defaultInstance = new Condition().MakeReadOnly();
    private static readonly string[] _conditionFieldNames = new string[] { "column_condition", "row_existence" };
    private static readonly uint[] _conditionFieldTags = new uint[] { 18, 8 };
    public static Condition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Condition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Condition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_Condition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Condition, Condition.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_Condition__FieldAccessorTable; }
    }
    
    public const int RowExistenceFieldNumber = 1;
    private bool hasRowExistence;
    private global::com.alicloud.openservices.tablestore.core.protocol.RowExistenceExpectation rowExistence_ = global::com.alicloud.openservices.tablestore.core.protocol.RowExistenceExpectation.IGNORE;
    public bool HasRowExistence {
      get { return hasRowExistence; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.RowExistenceExpectation RowExistence {
      get { return rowExistence_; }
    }
    
    public const int ColumnConditionFieldNumber = 2;
    private bool hasColumnCondition;
    private pb::ByteString columnCondition_ = pb::ByteString.Empty;
    public bool HasColumnCondition {
      get { return hasColumnCondition; }
    }
    public pb::ByteString ColumnCondition {
      get { return columnCondition_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRowExistence) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conditionFieldNames;
      if (hasRowExistence) {
        output.WriteEnum(1, field_names[1], (int) RowExistence, RowExistence);
      }
      if (hasColumnCondition) {
        output.WriteBytes(2, field_names[0], ColumnCondition);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRowExistence) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) RowExistence);
      }
      if (hasColumnCondition) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, ColumnCondition);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Condition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Condition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Condition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Condition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Condition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Condition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Condition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Condition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Condition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Condition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Condition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Condition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Condition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Condition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Condition result;
      
      private Condition PrepareBuilder() {
        if (resultIsReadOnly) {
          Condition original = result;
          result = new Condition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Condition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Condition.Descriptor; }
      }
      
      public override Condition DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance; }
      }
      
      public override Condition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Condition) {
          return MergeFrom((Condition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Condition other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRowExistence) {
          RowExistence = other.RowExistence;
        }
        if (other.HasColumnCondition) {
          ColumnCondition = other.ColumnCondition;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conditionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conditionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.rowExistence_, out unknown)) {
                result.hasRowExistence = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasColumnCondition = input.ReadBytes(ref result.columnCondition_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRowExistence {
       get { return result.hasRowExistence; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.RowExistenceExpectation RowExistence {
        get { return result.RowExistence; }
        set { SetRowExistence(value); }
      }
      public Builder SetRowExistence(global::com.alicloud.openservices.tablestore.core.protocol.RowExistenceExpectation value) {
        PrepareBuilder();
        result.hasRowExistence = true;
        result.rowExistence_ = value;
        return this;
      }
      public Builder ClearRowExistence() {
        PrepareBuilder();
        result.hasRowExistence = false;
        result.rowExistence_ = global::com.alicloud.openservices.tablestore.core.protocol.RowExistenceExpectation.IGNORE;
        return this;
      }
      
      public bool HasColumnCondition {
        get { return result.hasColumnCondition; }
      }
      public pb::ByteString ColumnCondition {
        get { return result.ColumnCondition; }
        set { SetColumnCondition(value); }
      }
      public Builder SetColumnCondition(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnCondition = true;
        result.columnCondition_ = value;
        return this;
      }
      public Builder ClearColumnCondition() {
        PrepareBuilder();
        result.hasColumnCondition = false;
        result.columnCondition_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Condition() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CapacityUnit : pb::GeneratedMessage<CapacityUnit, CapacityUnit.Builder> {
    private CapacityUnit() { }
    private static readonly CapacityUnit defaultInstance = new CapacityUnit().MakeReadOnly();
    private static readonly string[] _capacityUnitFieldNames = new string[] { "read", "write" };
    private static readonly uint[] _capacityUnitFieldTags = new uint[] { 8, 16 };
    public static CapacityUnit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CapacityUnit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CapacityUnit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CapacityUnit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CapacityUnit, CapacityUnit.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CapacityUnit__FieldAccessorTable; }
    }
    
    public const int ReadFieldNumber = 1;
    private bool hasRead;
    private int read_;
    public bool HasRead {
      get { return hasRead; }
    }
    public int Read {
      get { return read_; }
    }
    
    public const int WriteFieldNumber = 2;
    private bool hasWrite;
    private int write_;
    public bool HasWrite {
      get { return hasWrite; }
    }
    public int Write {
      get { return write_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _capacityUnitFieldNames;
      if (hasRead) {
        output.WriteInt32(1, field_names[0], Read);
      }
      if (hasWrite) {
        output.WriteInt32(2, field_names[1], Write);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRead) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Read);
      }
      if (hasWrite) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Write);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CapacityUnit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CapacityUnit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CapacityUnit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CapacityUnit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CapacityUnit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CapacityUnit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CapacityUnit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CapacityUnit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CapacityUnit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CapacityUnit result;
      
      private CapacityUnit PrepareBuilder() {
        if (resultIsReadOnly) {
          CapacityUnit original = result;
          result = new CapacityUnit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CapacityUnit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Descriptor; }
      }
      
      public override CapacityUnit DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance; }
      }
      
      public override CapacityUnit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CapacityUnit) {
          return MergeFrom((CapacityUnit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CapacityUnit other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRead) {
          Read = other.Read;
        }
        if (other.HasWrite) {
          Write = other.Write;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_capacityUnitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _capacityUnitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRead = input.ReadInt32(ref result.read_);
              break;
            }
            case 16: {
              result.hasWrite = input.ReadInt32(ref result.write_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRead {
        get { return result.hasRead; }
      }
      public int Read {
        get { return result.Read; }
        set { SetRead(value); }
      }
      public Builder SetRead(int value) {
        PrepareBuilder();
        result.hasRead = true;
        result.read_ = value;
        return this;
      }
      public Builder ClearRead() {
        PrepareBuilder();
        result.hasRead = false;
        result.read_ = 0;
        return this;
      }
      
      public bool HasWrite {
        get { return result.hasWrite; }
      }
      public int Write {
        get { return result.Write; }
        set { SetWrite(value); }
      }
      public Builder SetWrite(int value) {
        PrepareBuilder();
        result.hasWrite = true;
        result.write_ = value;
        return this;
      }
      public Builder ClearWrite() {
        PrepareBuilder();
        result.hasWrite = false;
        result.write_ = 0;
        return this;
      }
    }
    static CapacityUnit() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReservedThroughputDetails : pb::GeneratedMessage<ReservedThroughputDetails, ReservedThroughputDetails.Builder> {
    private ReservedThroughputDetails() { }
    private static readonly ReservedThroughputDetails defaultInstance = new ReservedThroughputDetails().MakeReadOnly();
    private static readonly string[] _reservedThroughputDetailsFieldNames = new string[] { "capacity_unit", "last_decrease_time", "last_increase_time" };
    private static readonly uint[] _reservedThroughputDetailsFieldTags = new uint[] { 10, 24, 16 };
    public static ReservedThroughputDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReservedThroughputDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReservedThroughputDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughputDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReservedThroughputDetails, ReservedThroughputDetails.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughputDetails__FieldAccessorTable; }
    }
    
    public const int CapacityUnitFieldNumber = 1;
    private bool hasCapacityUnit;
    private global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit capacityUnit_;
    public bool HasCapacityUnit {
      get { return hasCapacityUnit; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_ ?? global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance; }
    }
    
    public const int LastIncreaseTimeFieldNumber = 2;
    private bool hasLastIncreaseTime;
    private long lastIncreaseTime_;
    public bool HasLastIncreaseTime {
      get { return hasLastIncreaseTime; }
    }
    public long LastIncreaseTime {
      get { return lastIncreaseTime_; }
    }
    
    public const int LastDecreaseTimeFieldNumber = 3;
    private bool hasLastDecreaseTime;
    private long lastDecreaseTime_;
    public bool HasLastDecreaseTime {
      get { return hasLastDecreaseTime; }
    }
    public long LastDecreaseTime {
      get { return lastDecreaseTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCapacityUnit) return false;
        if (!hasLastIncreaseTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reservedThroughputDetailsFieldNames;
      if (hasCapacityUnit) {
        output.WriteMessage(1, field_names[0], CapacityUnit);
      }
      if (hasLastIncreaseTime) {
        output.WriteInt64(2, field_names[2], LastIncreaseTime);
      }
      if (hasLastDecreaseTime) {
        output.WriteInt64(3, field_names[1], LastDecreaseTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCapacityUnit) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, CapacityUnit);
      }
      if (hasLastIncreaseTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, LastIncreaseTime);
      }
      if (hasLastDecreaseTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, LastDecreaseTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReservedThroughputDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReservedThroughputDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughputDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReservedThroughputDetails MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReservedThroughputDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReservedThroughputDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReservedThroughputDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReservedThroughputDetails result;
      
      private ReservedThroughputDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          ReservedThroughputDetails original = result;
          result = new ReservedThroughputDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReservedThroughputDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.Descriptor; }
      }
      
      public override ReservedThroughputDetails DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.DefaultInstance; }
      }
      
      public override ReservedThroughputDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReservedThroughputDetails) {
          return MergeFrom((ReservedThroughputDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReservedThroughputDetails other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCapacityUnit) {
          MergeCapacityUnit(other.CapacityUnit);
        }
        if (other.HasLastIncreaseTime) {
          LastIncreaseTime = other.LastIncreaseTime;
        }
        if (other.HasLastDecreaseTime) {
          LastDecreaseTime = other.LastDecreaseTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reservedThroughputDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reservedThroughputDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.CreateBuilder();
              if (result.hasCapacityUnit) {
                subBuilder.MergeFrom(CapacityUnit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CapacityUnit = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasLastIncreaseTime = input.ReadInt64(ref result.lastIncreaseTime_);
              break;
            }
            case 24: {
              result.hasLastDecreaseTime = input.ReadInt64(ref result.lastDecreaseTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCapacityUnit {
       get { return result.hasCapacityUnit; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit CapacityUnit {
        get { return result.CapacityUnit; }
        set { SetCapacityUnit(value); }
      }
      public Builder SetCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = value;
        return this;
      }
      public Builder SetCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCapacityUnit &&
            result.capacityUnit_ != global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance) {
            result.capacityUnit_ = global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.CreateBuilder(result.capacityUnit_).MergeFrom(value).BuildPartial();
        } else {
          result.capacityUnit_ = value;
        }
        result.hasCapacityUnit = true;
        return this;
      }
      public Builder ClearCapacityUnit() {
        PrepareBuilder();
        result.hasCapacityUnit = false;
        result.capacityUnit_ = null;
        return this;
      }
      
      public bool HasLastIncreaseTime {
        get { return result.hasLastIncreaseTime; }
      }
      public long LastIncreaseTime {
        get { return result.LastIncreaseTime; }
        set { SetLastIncreaseTime(value); }
      }
      public Builder SetLastIncreaseTime(long value) {
        PrepareBuilder();
        result.hasLastIncreaseTime = true;
        result.lastIncreaseTime_ = value;
        return this;
      }
      public Builder ClearLastIncreaseTime() {
        PrepareBuilder();
        result.hasLastIncreaseTime = false;
        result.lastIncreaseTime_ = 0L;
        return this;
      }
      
      public bool HasLastDecreaseTime {
        get { return result.hasLastDecreaseTime; }
      }
      public long LastDecreaseTime {
        get { return result.LastDecreaseTime; }
        set { SetLastDecreaseTime(value); }
      }
      public Builder SetLastDecreaseTime(long value) {
        PrepareBuilder();
        result.hasLastDecreaseTime = true;
        result.lastDecreaseTime_ = value;
        return this;
      }
      public Builder ClearLastDecreaseTime() {
        PrepareBuilder();
        result.hasLastDecreaseTime = false;
        result.lastDecreaseTime_ = 0L;
        return this;
      }
    }
    static ReservedThroughputDetails() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReservedThroughput : pb::GeneratedMessage<ReservedThroughput, ReservedThroughput.Builder> {
    private ReservedThroughput() { }
    private static readonly ReservedThroughput defaultInstance = new ReservedThroughput().MakeReadOnly();
    private static readonly string[] _reservedThroughputFieldNames = new string[] { "capacity_unit" };
    private static readonly uint[] _reservedThroughputFieldTags = new uint[] { 10 };
    public static ReservedThroughput DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReservedThroughput DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReservedThroughput ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughput__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReservedThroughput, ReservedThroughput.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ReservedThroughput__FieldAccessorTable; }
    }
    
    public const int CapacityUnitFieldNumber = 1;
    private bool hasCapacityUnit;
    private global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit capacityUnit_;
    public bool HasCapacityUnit {
      get { return hasCapacityUnit; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_ ?? global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCapacityUnit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reservedThroughputFieldNames;
      if (hasCapacityUnit) {
        output.WriteMessage(1, field_names[0], CapacityUnit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCapacityUnit) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, CapacityUnit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReservedThroughput ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReservedThroughput ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReservedThroughput ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReservedThroughput ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReservedThroughput MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReservedThroughput prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReservedThroughput, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReservedThroughput cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReservedThroughput result;
      
      private ReservedThroughput PrepareBuilder() {
        if (resultIsReadOnly) {
          ReservedThroughput original = result;
          result = new ReservedThroughput();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReservedThroughput MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.Descriptor; }
      }
      
      public override ReservedThroughput DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.DefaultInstance; }
      }
      
      public override ReservedThroughput BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReservedThroughput) {
          return MergeFrom((ReservedThroughput) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReservedThroughput other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCapacityUnit) {
          MergeCapacityUnit(other.CapacityUnit);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reservedThroughputFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reservedThroughputFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.CreateBuilder();
              if (result.hasCapacityUnit) {
                subBuilder.MergeFrom(CapacityUnit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CapacityUnit = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCapacityUnit {
       get { return result.hasCapacityUnit; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit CapacityUnit {
        get { return result.CapacityUnit; }
        set { SetCapacityUnit(value); }
      }
      public Builder SetCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = value;
        return this;
      }
      public Builder SetCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCapacityUnit &&
            result.capacityUnit_ != global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance) {
            result.capacityUnit_ = global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.CreateBuilder(result.capacityUnit_).MergeFrom(value).BuildPartial();
        } else {
          result.capacityUnit_ = value;
        }
        result.hasCapacityUnit = true;
        return this;
      }
      public Builder ClearCapacityUnit() {
        PrepareBuilder();
        result.hasCapacityUnit = false;
        result.capacityUnit_ = null;
        return this;
      }
    }
    static ReservedThroughput() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConsumedCapacity : pb::GeneratedMessage<ConsumedCapacity, ConsumedCapacity.Builder> {
    private ConsumedCapacity() { }
    private static readonly ConsumedCapacity defaultInstance = new ConsumedCapacity().MakeReadOnly();
    private static readonly string[] _consumedCapacityFieldNames = new string[] { "capacity_unit" };
    private static readonly uint[] _consumedCapacityFieldTags = new uint[] { 10 };
    public static ConsumedCapacity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConsumedCapacity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConsumedCapacity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ConsumedCapacity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConsumedCapacity, ConsumedCapacity.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ConsumedCapacity__FieldAccessorTable; }
    }
    
    public const int CapacityUnitFieldNumber = 1;
    private bool hasCapacityUnit;
    private global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit capacityUnit_;
    public bool HasCapacityUnit {
      get { return hasCapacityUnit; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_ ?? global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCapacityUnit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _consumedCapacityFieldNames;
      if (hasCapacityUnit) {
        output.WriteMessage(1, field_names[0], CapacityUnit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCapacityUnit) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, CapacityUnit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConsumedCapacity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConsumedCapacity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConsumedCapacity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConsumedCapacity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConsumedCapacity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConsumedCapacity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConsumedCapacity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConsumedCapacity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConsumedCapacity result;
      
      private ConsumedCapacity PrepareBuilder() {
        if (resultIsReadOnly) {
          ConsumedCapacity original = result;
          result = new ConsumedCapacity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConsumedCapacity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Descriptor; }
      }
      
      public override ConsumedCapacity DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
      }
      
      public override ConsumedCapacity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConsumedCapacity) {
          return MergeFrom((ConsumedCapacity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConsumedCapacity other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCapacityUnit) {
          MergeCapacityUnit(other.CapacityUnit);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_consumedCapacityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _consumedCapacityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.CreateBuilder();
              if (result.hasCapacityUnit) {
                subBuilder.MergeFrom(CapacityUnit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CapacityUnit = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCapacityUnit {
       get { return result.hasCapacityUnit; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit CapacityUnit {
        get { return result.CapacityUnit; }
        set { SetCapacityUnit(value); }
      }
      public Builder SetCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = value;
        return this;
      }
      public Builder SetCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCapacityUnit = true;
        result.capacityUnit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCapacityUnit(global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCapacityUnit &&
            result.capacityUnit_ != global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.DefaultInstance) {
            result.capacityUnit_ = global::com.alicloud.openservices.tablestore.core.protocol.CapacityUnit.CreateBuilder(result.capacityUnit_).MergeFrom(value).BuildPartial();
        } else {
          result.capacityUnit_ = value;
        }
        result.hasCapacityUnit = true;
        return this;
      }
      public Builder ClearCapacityUnit() {
        PrepareBuilder();
        result.hasCapacityUnit = false;
        result.capacityUnit_ = null;
        return this;
      }
    }
    static ConsumedCapacity() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StreamSpecification : pb::GeneratedMessage<StreamSpecification, StreamSpecification.Builder> {
    private StreamSpecification() { }
    private static readonly StreamSpecification defaultInstance = new StreamSpecification().MakeReadOnly();
    private static readonly string[] _streamSpecificationFieldNames = new string[] { "enable_stream", "expiration_time" };
    private static readonly uint[] _streamSpecificationFieldTags = new uint[] { 8, 16 };
    public static StreamSpecification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamSpecification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamSpecification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamSpecification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamSpecification, StreamSpecification.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamSpecification__FieldAccessorTable; }
    }
    
    public const int EnableStreamFieldNumber = 1;
    private bool hasEnableStream;
    private bool enableStream_;
    public bool HasEnableStream {
      get { return hasEnableStream; }
    }
    public bool EnableStream {
      get { return enableStream_; }
    }
    
    public const int ExpirationTimeFieldNumber = 2;
    private bool hasExpirationTime;
    private int expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public int ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEnableStream) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _streamSpecificationFieldNames;
      if (hasEnableStream) {
        output.WriteBool(1, field_names[0], EnableStream);
      }
      if (hasExpirationTime) {
        output.WriteInt32(2, field_names[1], ExpirationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEnableStream) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, EnableStream);
      }
      if (hasExpirationTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, ExpirationTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StreamSpecification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamSpecification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamSpecification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamSpecification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamSpecification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamSpecification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamSpecification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamSpecification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamSpecification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamSpecification result;
      
      private StreamSpecification PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamSpecification original = result;
          result = new StreamSpecification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamSpecification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.Descriptor; }
      }
      
      public override StreamSpecification DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.DefaultInstance; }
      }
      
      public override StreamSpecification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamSpecification) {
          return MergeFrom((StreamSpecification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamSpecification other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEnableStream) {
          EnableStream = other.EnableStream;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamSpecificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamSpecificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEnableStream = input.ReadBool(ref result.enableStream_);
              break;
            }
            case 16: {
              result.hasExpirationTime = input.ReadInt32(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEnableStream {
        get { return result.hasEnableStream; }
      }
      public bool EnableStream {
        get { return result.EnableStream; }
        set { SetEnableStream(value); }
      }
      public Builder SetEnableStream(bool value) {
        PrepareBuilder();
        result.hasEnableStream = true;
        result.enableStream_ = value;
        return this;
      }
      public Builder ClearEnableStream() {
        PrepareBuilder();
        result.hasEnableStream = false;
        result.enableStream_ = false;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public int ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(int value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
    }
    static StreamSpecification() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StreamDetails : pb::GeneratedMessage<StreamDetails, StreamDetails.Builder> {
    private StreamDetails() { }
    private static readonly StreamDetails defaultInstance = new StreamDetails().MakeReadOnly();
    private static readonly string[] _streamDetailsFieldNames = new string[] { "enable_stream", "expiration_time", "last_enable_time", "stream_id" };
    private static readonly uint[] _streamDetailsFieldTags = new uint[] { 8, 24, 32, 18 };
    public static StreamDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamDetails, StreamDetails.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamDetails__FieldAccessorTable; }
    }
    
    public const int EnableStreamFieldNumber = 1;
    private bool hasEnableStream;
    private bool enableStream_;
    public bool HasEnableStream {
      get { return hasEnableStream; }
    }
    public bool EnableStream {
      get { return enableStream_; }
    }
    
    public const int StreamIdFieldNumber = 2;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int ExpirationTimeFieldNumber = 3;
    private bool hasExpirationTime;
    private int expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public int ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int LastEnableTimeFieldNumber = 4;
    private bool hasLastEnableTime;
    private long lastEnableTime_;
    public bool HasLastEnableTime {
      get { return hasLastEnableTime; }
    }
    public long LastEnableTime {
      get { return lastEnableTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEnableStream) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _streamDetailsFieldNames;
      if (hasEnableStream) {
        output.WriteBool(1, field_names[0], EnableStream);
      }
      if (hasStreamId) {
        output.WriteString(2, field_names[3], StreamId);
      }
      if (hasExpirationTime) {
        output.WriteInt32(3, field_names[1], ExpirationTime);
      }
      if (hasLastEnableTime) {
        output.WriteInt64(4, field_names[2], LastEnableTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEnableStream) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, EnableStream);
      }
      if (hasStreamId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, StreamId);
      }
      if (hasExpirationTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, ExpirationTime);
      }
      if (hasLastEnableTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, LastEnableTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StreamDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamDetails MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamDetails result;
      
      private StreamDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamDetails original = result;
          result = new StreamDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.Descriptor; }
      }
      
      public override StreamDetails DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.DefaultInstance; }
      }
      
      public override StreamDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamDetails) {
          return MergeFrom((StreamDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamDetails other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEnableStream) {
          EnableStream = other.EnableStream;
        }
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.HasLastEnableTime) {
          LastEnableTime = other.LastEnableTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEnableStream = input.ReadBool(ref result.enableStream_);
              break;
            }
            case 18: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 24: {
              result.hasExpirationTime = input.ReadInt32(ref result.expirationTime_);
              break;
            }
            case 32: {
              result.hasLastEnableTime = input.ReadInt64(ref result.lastEnableTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEnableStream {
        get { return result.hasEnableStream; }
      }
      public bool EnableStream {
        get { return result.EnableStream; }
        set { SetEnableStream(value); }
      }
      public Builder SetEnableStream(bool value) {
        PrepareBuilder();
        result.hasEnableStream = true;
        result.enableStream_ = value;
        return this;
      }
      public Builder ClearEnableStream() {
        PrepareBuilder();
        result.hasEnableStream = false;
        result.enableStream_ = false;
        return this;
      }
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public int ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(int value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
      
      public bool HasLastEnableTime {
        get { return result.hasLastEnableTime; }
      }
      public long LastEnableTime {
        get { return result.LastEnableTime; }
        set { SetLastEnableTime(value); }
      }
      public Builder SetLastEnableTime(long value) {
        PrepareBuilder();
        result.hasLastEnableTime = true;
        result.lastEnableTime_ = value;
        return this;
      }
      public Builder ClearLastEnableTime() {
        PrepareBuilder();
        result.hasLastEnableTime = false;
        result.lastEnableTime_ = 0L;
        return this;
      }
    }
    static StreamDetails() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateTableRequest : pb::GeneratedMessage<CreateTableRequest, CreateTableRequest.Builder> {
    private CreateTableRequest() { }
    private static readonly CreateTableRequest defaultInstance = new CreateTableRequest().MakeReadOnly();
    private static readonly string[] _createTableRequestFieldNames = new string[] { "index_metas", "partitions", "reserved_throughput", "stream_spec", "table_meta", "table_options" };
    private static readonly uint[] _createTableRequestFieldTags = new uint[] { 58, 34, 18, 42, 10, 26 };
    public static CreateTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateTableRequest, CreateTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableRequest__FieldAccessorTable; }
    }
    
    public const int TableMetaFieldNumber = 1;
    private bool hasTableMeta;
    private global::com.alicloud.openservices.tablestore.core.protocol.TableMeta tableMeta_;
    public bool HasTableMeta {
      get { return hasTableMeta; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableMeta TableMeta {
      get { return tableMeta_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.DefaultInstance; }
    }
    
    public const int ReservedThroughputFieldNumber = 2;
    private bool hasReservedThroughput;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput reservedThroughput_;
    public bool HasReservedThroughput {
      get { return hasReservedThroughput; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.DefaultInstance; }
    }
    
    public const int TableOptionsFieldNumber = 3;
    private bool hasTableOptions;
    private global::com.alicloud.openservices.tablestore.core.protocol.TableOptions tableOptions_;
    public bool HasTableOptions {
      get { return hasTableOptions; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
      get { return tableOptions_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance; }
    }
    
    public const int PartitionsFieldNumber = 4;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange> partitions_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange> PartitionsList {
      get { return partitions_; }
    }
    public int PartitionsCount {
      get { return partitions_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange GetPartitions(int index) {
      return partitions_[index];
    }
    
    public const int StreamSpecFieldNumber = 5;
    private bool hasStreamSpec;
    private global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification streamSpec_;
    public bool HasStreamSpec {
      get { return hasStreamSpec; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification StreamSpec {
      get { return streamSpec_ ?? global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.DefaultInstance; }
    }
    
    public const int IndexMetasFieldNumber = 7;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> indexMetas_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> IndexMetasList {
      get { return indexMetas_; }
    }
    public int IndexMetasCount {
      get { return indexMetas_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta GetIndexMetas(int index) {
      return indexMetas_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableMeta) return false;
        if (!hasReservedThroughput) return false;
        if (!TableMeta.IsInitialized) return false;
        if (!ReservedThroughput.IsInitialized) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange element in PartitionsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasStreamSpec) {
          if (!StreamSpec.IsInitialized) return false;
        }
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta element in IndexMetasList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createTableRequestFieldNames;
      if (hasTableMeta) {
        output.WriteMessage(1, field_names[4], TableMeta);
      }
      if (hasReservedThroughput) {
        output.WriteMessage(2, field_names[2], ReservedThroughput);
      }
      if (hasTableOptions) {
        output.WriteMessage(3, field_names[5], TableOptions);
      }
      if (partitions_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], partitions_);
      }
      if (hasStreamSpec) {
        output.WriteMessage(5, field_names[3], StreamSpec);
      }
      if (indexMetas_.Count > 0) {
        output.WriteMessageArray(7, field_names[0], indexMetas_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableMeta) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, TableMeta);
      }
      if (hasReservedThroughput) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ReservedThroughput);
      }
      if (hasTableOptions) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, TableOptions);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange element in PartitionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasStreamSpec) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, StreamSpec);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta element in IndexMetasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateTableRequest MakeReadOnly() {
      partitions_.MakeReadOnly();
      indexMetas_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateTableRequest result;
      
      private CreateTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateTableRequest original = result;
          result = new CreateTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateTableRequest.Descriptor; }
      }
      
      public override CreateTableRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateTableRequest.DefaultInstance; }
      }
      
      public override CreateTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateTableRequest) {
          return MergeFrom((CreateTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateTableRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableMeta) {
          MergeTableMeta(other.TableMeta);
        }
        if (other.HasReservedThroughput) {
          MergeReservedThroughput(other.ReservedThroughput);
        }
        if (other.HasTableOptions) {
          MergeTableOptions(other.TableOptions);
        }
        if (other.partitions_.Count != 0) {
          result.partitions_.Add(other.partitions_);
        }
        if (other.HasStreamSpec) {
          MergeStreamSpec(other.StreamSpec);
        }
        if (other.indexMetas_.Count != 0) {
          result.indexMetas_.Add(other.indexMetas_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.CreateBuilder();
              if (result.hasTableMeta) {
                subBuilder.MergeFrom(TableMeta);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableMeta = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.CreateBuilder();
              if (result.hasReservedThroughput) {
                subBuilder.MergeFrom(ReservedThroughput);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughput = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder();
              if (result.hasTableOptions) {
                subBuilder.MergeFrom(TableOptions);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableOptions = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.partitions_, global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.CreateBuilder();
              if (result.hasStreamSpec) {
                subBuilder.MergeFrom(StreamSpec);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamSpec = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.indexMetas_, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableMeta {
       get { return result.hasTableMeta; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableMeta TableMeta {
        get { return result.TableMeta; }
        set { SetTableMeta(value); }
      }
      public Builder SetTableMeta(global::com.alicloud.openservices.tablestore.core.protocol.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = value;
        return this;
      }
      public Builder SetTableMeta(global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableMeta(global::com.alicloud.openservices.tablestore.core.protocol.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableMeta &&
            result.tableMeta_ != global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.DefaultInstance) {
            result.tableMeta_ = global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.CreateBuilder(result.tableMeta_).MergeFrom(value).BuildPartial();
        } else {
          result.tableMeta_ = value;
        }
        result.hasTableMeta = true;
        return this;
      }
      public Builder ClearTableMeta() {
        PrepareBuilder();
        result.hasTableMeta = false;
        result.tableMeta_ = null;
        return this;
      }
      
      public bool HasReservedThroughput {
       get { return result.hasReservedThroughput; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput ReservedThroughput {
        get { return result.ReservedThroughput; }
        set { SetReservedThroughput(value); }
      }
      public Builder SetReservedThroughput(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = value;
        return this;
      }
      public Builder SetReservedThroughput(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughput(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughput &&
            result.reservedThroughput_ != global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.DefaultInstance) {
            result.reservedThroughput_ = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.CreateBuilder(result.reservedThroughput_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughput_ = value;
        }
        result.hasReservedThroughput = true;
        return this;
      }
      public Builder ClearReservedThroughput() {
        PrepareBuilder();
        result.hasReservedThroughput = false;
        result.reservedThroughput_ = null;
        return this;
      }
      
      public bool HasTableOptions {
       get { return result.hasTableOptions; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
        get { return result.TableOptions; }
        set { SetTableOptions(value); }
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = value;
        return this;
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableOptions &&
            result.tableOptions_ != global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance) {
            result.tableOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder(result.tableOptions_).MergeFrom(value).BuildPartial();
        } else {
          result.tableOptions_ = value;
        }
        result.hasTableOptions = true;
        return this;
      }
      public Builder ClearTableOptions() {
        PrepareBuilder();
        result.hasTableOptions = false;
        result.tableOptions_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange> PartitionsList {
        get { return PrepareBuilder().partitions_; }
      }
      public int PartitionsCount {
        get { return result.PartitionsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange GetPartitions(int index) {
        return result.GetPartitions(index);
      }
      public Builder SetPartitions(int index, global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.partitions_[index] = value;
        return this;
      }
      public Builder SetPartitions(int index, global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.partitions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPartitions(global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.partitions_.Add(value);
        return this;
      }
      public Builder AddPartitions(global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.partitions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePartitions(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.PartitionRange> values) {
        PrepareBuilder();
        result.partitions_.Add(values);
        return this;
      }
      public Builder ClearPartitions() {
        PrepareBuilder();
        result.partitions_.Clear();
        return this;
      }
      
      public bool HasStreamSpec {
       get { return result.hasStreamSpec; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification StreamSpec {
        get { return result.StreamSpec; }
        set { SetStreamSpec(value); }
      }
      public Builder SetStreamSpec(global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = value;
        return this;
      }
      public Builder SetStreamSpec(global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamSpec(global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamSpec &&
            result.streamSpec_ != global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.DefaultInstance) {
            result.streamSpec_ = global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.CreateBuilder(result.streamSpec_).MergeFrom(value).BuildPartial();
        } else {
          result.streamSpec_ = value;
        }
        result.hasStreamSpec = true;
        return this;
      }
      public Builder ClearStreamSpec() {
        PrepareBuilder();
        result.hasStreamSpec = false;
        result.streamSpec_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> IndexMetasList {
        get { return PrepareBuilder().indexMetas_; }
      }
      public int IndexMetasCount {
        get { return result.IndexMetasCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta GetIndexMetas(int index) {
        return result.GetIndexMetas(index);
      }
      public Builder SetIndexMetas(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indexMetas_[index] = value;
        return this;
      }
      public Builder SetIndexMetas(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indexMetas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIndexMetas(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indexMetas_.Add(value);
        return this;
      }
      public Builder AddIndexMetas(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indexMetas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIndexMetas(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> values) {
        PrepareBuilder();
        result.indexMetas_.Add(values);
        return this;
      }
      public Builder ClearIndexMetas() {
        PrepareBuilder();
        result.indexMetas_.Clear();
        return this;
      }
    }
    static CreateTableRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateTableResponse : pb::GeneratedMessage<CreateTableResponse, CreateTableResponse.Builder> {
    private CreateTableResponse() { }
    private static readonly CreateTableResponse defaultInstance = new CreateTableResponse().MakeReadOnly();
    private static readonly string[] _createTableResponseFieldNames = new string[] {  };
    private static readonly uint[] _createTableResponseFieldTags = new uint[] {  };
    public static CreateTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateTableResponse, CreateTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateTableResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createTableResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateTableResponse result;
      
      private CreateTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateTableResponse original = result;
          result = new CreateTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateTableResponse.Descriptor; }
      }
      
      public override CreateTableResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateTableResponse.DefaultInstance; }
      }
      
      public override CreateTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateTableResponse) {
          return MergeFrom((CreateTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateTableResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CreateTableResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateIndexRequest : pb::GeneratedMessage<CreateIndexRequest, CreateIndexRequest.Builder> {
    private CreateIndexRequest() { }
    private static readonly CreateIndexRequest defaultInstance = new CreateIndexRequest().MakeReadOnly();
    private static readonly string[] _createIndexRequestFieldNames = new string[] { "include_base_data", "index_meta", "main_table_name" };
    private static readonly uint[] _createIndexRequestFieldTags = new uint[] { 24, 18, 10 };
    public static CreateIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateIndexRequest, CreateIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexRequest__FieldAccessorTable; }
    }
    
    public const int MainTableNameFieldNumber = 1;
    private bool hasMainTableName;
    private string mainTableName_ = "";
    public bool HasMainTableName {
      get { return hasMainTableName; }
    }
    public string MainTableName {
      get { return mainTableName_; }
    }
    
    public const int IndexMetaFieldNumber = 2;
    private bool hasIndexMeta;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta indexMeta_;
    public bool HasIndexMeta {
      get { return hasIndexMeta; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta IndexMeta {
      get { return indexMeta_ ?? global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.DefaultInstance; }
    }
    
    public const int IncludeBaseDataFieldNumber = 3;
    private bool hasIncludeBaseData;
    private bool includeBaseData_;
    public bool HasIncludeBaseData {
      get { return hasIncludeBaseData; }
    }
    public bool IncludeBaseData {
      get { return includeBaseData_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMainTableName) return false;
        if (!hasIndexMeta) return false;
        if (!IndexMeta.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createIndexRequestFieldNames;
      if (hasMainTableName) {
        output.WriteString(1, field_names[2], MainTableName);
      }
      if (hasIndexMeta) {
        output.WriteMessage(2, field_names[1], IndexMeta);
      }
      if (hasIncludeBaseData) {
        output.WriteBool(3, field_names[0], IncludeBaseData);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMainTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, MainTableName);
      }
      if (hasIndexMeta) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, IndexMeta);
      }
      if (hasIncludeBaseData) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, IncludeBaseData);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateIndexRequest result;
      
      private CreateIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateIndexRequest original = result;
          result = new CreateIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexRequest.Descriptor; }
      }
      
      public override CreateIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexRequest.DefaultInstance; }
      }
      
      public override CreateIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateIndexRequest) {
          return MergeFrom((CreateIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMainTableName) {
          MainTableName = other.MainTableName;
        }
        if (other.HasIndexMeta) {
          MergeIndexMeta(other.IndexMeta);
        }
        if (other.HasIncludeBaseData) {
          IncludeBaseData = other.IncludeBaseData;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMainTableName = input.ReadString(ref result.mainTableName_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.CreateBuilder();
              if (result.hasIndexMeta) {
                subBuilder.MergeFrom(IndexMeta);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              IndexMeta = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasIncludeBaseData = input.ReadBool(ref result.includeBaseData_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMainTableName {
        get { return result.hasMainTableName; }
      }
      public string MainTableName {
        get { return result.MainTableName; }
        set { SetMainTableName(value); }
      }
      public Builder SetMainTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMainTableName = true;
        result.mainTableName_ = value;
        return this;
      }
      public Builder ClearMainTableName() {
        PrepareBuilder();
        result.hasMainTableName = false;
        result.mainTableName_ = "";
        return this;
      }
      
      public bool HasIndexMeta {
       get { return result.hasIndexMeta; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta IndexMeta {
        get { return result.IndexMeta; }
        set { SetIndexMeta(value); }
      }
      public Builder SetIndexMeta(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexMeta = true;
        result.indexMeta_ = value;
        return this;
      }
      public Builder SetIndexMeta(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIndexMeta = true;
        result.indexMeta_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIndexMeta(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIndexMeta &&
            result.indexMeta_ != global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.DefaultInstance) {
            result.indexMeta_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.CreateBuilder(result.indexMeta_).MergeFrom(value).BuildPartial();
        } else {
          result.indexMeta_ = value;
        }
        result.hasIndexMeta = true;
        return this;
      }
      public Builder ClearIndexMeta() {
        PrepareBuilder();
        result.hasIndexMeta = false;
        result.indexMeta_ = null;
        return this;
      }
      
      public bool HasIncludeBaseData {
        get { return result.hasIncludeBaseData; }
      }
      public bool IncludeBaseData {
        get { return result.IncludeBaseData; }
        set { SetIncludeBaseData(value); }
      }
      public Builder SetIncludeBaseData(bool value) {
        PrepareBuilder();
        result.hasIncludeBaseData = true;
        result.includeBaseData_ = value;
        return this;
      }
      public Builder ClearIncludeBaseData() {
        PrepareBuilder();
        result.hasIncludeBaseData = false;
        result.includeBaseData_ = false;
        return this;
      }
    }
    static CreateIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateIndexResponse : pb::GeneratedMessage<CreateIndexResponse, CreateIndexResponse.Builder> {
    private CreateIndexResponse() { }
    private static readonly CreateIndexResponse defaultInstance = new CreateIndexResponse().MakeReadOnly();
    private static readonly string[] _createIndexResponseFieldNames = new string[] {  };
    private static readonly uint[] _createIndexResponseFieldTags = new uint[] {  };
    public static CreateIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateIndexResponse, CreateIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateIndexResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createIndexResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateIndexResponse result;
      
      private CreateIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateIndexResponse original = result;
          result = new CreateIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexResponse.Descriptor; }
      }
      
      public override CreateIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexResponse.DefaultInstance; }
      }
      
      public override CreateIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateIndexResponse) {
          return MergeFrom((CreateIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CreateIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DropIndexRequest : pb::GeneratedMessage<DropIndexRequest, DropIndexRequest.Builder> {
    private DropIndexRequest() { }
    private static readonly DropIndexRequest defaultInstance = new DropIndexRequest().MakeReadOnly();
    private static readonly string[] _dropIndexRequestFieldNames = new string[] { "index_name", "main_table_name" };
    private static readonly uint[] _dropIndexRequestFieldTags = new uint[] { 18, 10 };
    public static DropIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DropIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DropIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DropIndexRequest, DropIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexRequest__FieldAccessorTable; }
    }
    
    public const int MainTableNameFieldNumber = 1;
    private bool hasMainTableName;
    private string mainTableName_ = "";
    public bool HasMainTableName {
      get { return hasMainTableName; }
    }
    public string MainTableName {
      get { return mainTableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMainTableName) return false;
        if (!hasIndexName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _dropIndexRequestFieldNames;
      if (hasMainTableName) {
        output.WriteString(1, field_names[1], MainTableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMainTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, MainTableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DropIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DropIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DropIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DropIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DropIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DropIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DropIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DropIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DropIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DropIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DropIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DropIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DropIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DropIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DropIndexRequest result;
      
      private DropIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DropIndexRequest original = result;
          result = new DropIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DropIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DropIndexRequest.Descriptor; }
      }
      
      public override DropIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DropIndexRequest.DefaultInstance; }
      }
      
      public override DropIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DropIndexRequest) {
          return MergeFrom((DropIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DropIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DropIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMainTableName) {
          MainTableName = other.MainTableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dropIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dropIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMainTableName = input.ReadString(ref result.mainTableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMainTableName {
        get { return result.hasMainTableName; }
      }
      public string MainTableName {
        get { return result.MainTableName; }
        set { SetMainTableName(value); }
      }
      public Builder SetMainTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMainTableName = true;
        result.mainTableName_ = value;
        return this;
      }
      public Builder ClearMainTableName() {
        PrepareBuilder();
        result.hasMainTableName = false;
        result.mainTableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
    }
    static DropIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DropIndexResponse : pb::GeneratedMessage<DropIndexResponse, DropIndexResponse.Builder> {
    private DropIndexResponse() { }
    private static readonly DropIndexResponse defaultInstance = new DropIndexResponse().MakeReadOnly();
    private static readonly string[] _dropIndexResponseFieldNames = new string[] {  };
    private static readonly uint[] _dropIndexResponseFieldTags = new uint[] {  };
    public static DropIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DropIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DropIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DropIndexResponse, DropIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DropIndexResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _dropIndexResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DropIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DropIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DropIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DropIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DropIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DropIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DropIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DropIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DropIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DropIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DropIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DropIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DropIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DropIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DropIndexResponse result;
      
      private DropIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DropIndexResponse original = result;
          result = new DropIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DropIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DropIndexResponse.Descriptor; }
      }
      
      public override DropIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DropIndexResponse.DefaultInstance; }
      }
      
      public override DropIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DropIndexResponse) {
          return MergeFrom((DropIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DropIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DropIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dropIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dropIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static DropIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateTableRequest : pb::GeneratedMessage<UpdateTableRequest, UpdateTableRequest.Builder> {
    private UpdateTableRequest() { }
    private static readonly UpdateTableRequest defaultInstance = new UpdateTableRequest().MakeReadOnly();
    private static readonly string[] _updateTableRequestFieldNames = new string[] { "reserved_throughput", "stream_spec", "table_name", "table_options" };
    private static readonly uint[] _updateTableRequestFieldTags = new uint[] { 18, 34, 10, 26 };
    public static UpdateTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateTableRequest, UpdateTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int ReservedThroughputFieldNumber = 2;
    private bool hasReservedThroughput;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput reservedThroughput_;
    public bool HasReservedThroughput {
      get { return hasReservedThroughput; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.DefaultInstance; }
    }
    
    public const int TableOptionsFieldNumber = 3;
    private bool hasTableOptions;
    private global::com.alicloud.openservices.tablestore.core.protocol.TableOptions tableOptions_;
    public bool HasTableOptions {
      get { return hasTableOptions; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
      get { return tableOptions_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance; }
    }
    
    public const int StreamSpecFieldNumber = 4;
    private bool hasStreamSpec;
    private global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification streamSpec_;
    public bool HasStreamSpec {
      get { return hasStreamSpec; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification StreamSpec {
      get { return streamSpec_ ?? global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (HasReservedThroughput) {
          if (!ReservedThroughput.IsInitialized) return false;
        }
        if (HasStreamSpec) {
          if (!StreamSpec.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[2], TableName);
      }
      if (hasReservedThroughput) {
        output.WriteMessage(2, field_names[0], ReservedThroughput);
      }
      if (hasTableOptions) {
        output.WriteMessage(3, field_names[3], TableOptions);
      }
      if (hasStreamSpec) {
        output.WriteMessage(4, field_names[1], StreamSpec);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasReservedThroughput) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ReservedThroughput);
      }
      if (hasTableOptions) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, TableOptions);
      }
      if (hasStreamSpec) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, StreamSpec);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateTableRequest result;
      
      private UpdateTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateTableRequest original = result;
          result = new UpdateTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableRequest.Descriptor; }
      }
      
      public override UpdateTableRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableRequest.DefaultInstance; }
      }
      
      public override UpdateTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateTableRequest) {
          return MergeFrom((UpdateTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateTableRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasReservedThroughput) {
          MergeReservedThroughput(other.ReservedThroughput);
        }
        if (other.HasTableOptions) {
          MergeTableOptions(other.TableOptions);
        }
        if (other.HasStreamSpec) {
          MergeStreamSpec(other.StreamSpec);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.CreateBuilder();
              if (result.hasReservedThroughput) {
                subBuilder.MergeFrom(ReservedThroughput);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughput = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder();
              if (result.hasTableOptions) {
                subBuilder.MergeFrom(TableOptions);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableOptions = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.CreateBuilder();
              if (result.hasStreamSpec) {
                subBuilder.MergeFrom(StreamSpec);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamSpec = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasReservedThroughput {
       get { return result.hasReservedThroughput; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput ReservedThroughput {
        get { return result.ReservedThroughput; }
        set { SetReservedThroughput(value); }
      }
      public Builder SetReservedThroughput(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = value;
        return this;
      }
      public Builder SetReservedThroughput(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughput = true;
        result.reservedThroughput_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughput(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughput &&
            result.reservedThroughput_ != global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.DefaultInstance) {
            result.reservedThroughput_ = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughput.CreateBuilder(result.reservedThroughput_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughput_ = value;
        }
        result.hasReservedThroughput = true;
        return this;
      }
      public Builder ClearReservedThroughput() {
        PrepareBuilder();
        result.hasReservedThroughput = false;
        result.reservedThroughput_ = null;
        return this;
      }
      
      public bool HasTableOptions {
       get { return result.hasTableOptions; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
        get { return result.TableOptions; }
        set { SetTableOptions(value); }
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = value;
        return this;
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableOptions &&
            result.tableOptions_ != global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance) {
            result.tableOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder(result.tableOptions_).MergeFrom(value).BuildPartial();
        } else {
          result.tableOptions_ = value;
        }
        result.hasTableOptions = true;
        return this;
      }
      public Builder ClearTableOptions() {
        PrepareBuilder();
        result.hasTableOptions = false;
        result.tableOptions_ = null;
        return this;
      }
      
      public bool HasStreamSpec {
       get { return result.hasStreamSpec; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification StreamSpec {
        get { return result.StreamSpec; }
        set { SetStreamSpec(value); }
      }
      public Builder SetStreamSpec(global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = value;
        return this;
      }
      public Builder SetStreamSpec(global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamSpec = true;
        result.streamSpec_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamSpec(global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamSpec &&
            result.streamSpec_ != global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.DefaultInstance) {
            result.streamSpec_ = global::com.alicloud.openservices.tablestore.core.protocol.StreamSpecification.CreateBuilder(result.streamSpec_).MergeFrom(value).BuildPartial();
        } else {
          result.streamSpec_ = value;
        }
        result.hasStreamSpec = true;
        return this;
      }
      public Builder ClearStreamSpec() {
        PrepareBuilder();
        result.hasStreamSpec = false;
        result.streamSpec_ = null;
        return this;
      }
    }
    static UpdateTableRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateTableResponse : pb::GeneratedMessage<UpdateTableResponse, UpdateTableResponse.Builder> {
    private UpdateTableResponse() { }
    private static readonly UpdateTableResponse defaultInstance = new UpdateTableResponse().MakeReadOnly();
    private static readonly string[] _updateTableResponseFieldNames = new string[] { "reserved_throughput_details", "stream_details", "table_options" };
    private static readonly uint[] _updateTableResponseFieldTags = new uint[] { 10, 26, 18 };
    public static UpdateTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateTableResponse, UpdateTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateTableResponse__FieldAccessorTable; }
    }
    
    public const int ReservedThroughputDetailsFieldNumber = 1;
    private bool hasReservedThroughputDetails;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails reservedThroughputDetails_;
    public bool HasReservedThroughputDetails {
      get { return hasReservedThroughputDetails; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.DefaultInstance; }
    }
    
    public const int TableOptionsFieldNumber = 2;
    private bool hasTableOptions;
    private global::com.alicloud.openservices.tablestore.core.protocol.TableOptions tableOptions_;
    public bool HasTableOptions {
      get { return hasTableOptions; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
      get { return tableOptions_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance; }
    }
    
    public const int StreamDetailsFieldNumber = 3;
    private bool hasStreamDetails;
    private global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails streamDetails_;
    public bool HasStreamDetails {
      get { return hasStreamDetails; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails StreamDetails {
      get { return streamDetails_ ?? global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasReservedThroughputDetails) return false;
        if (!hasTableOptions) return false;
        if (!ReservedThroughputDetails.IsInitialized) return false;
        if (HasStreamDetails) {
          if (!StreamDetails.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateTableResponseFieldNames;
      if (hasReservedThroughputDetails) {
        output.WriteMessage(1, field_names[0], ReservedThroughputDetails);
      }
      if (hasTableOptions) {
        output.WriteMessage(2, field_names[2], TableOptions);
      }
      if (hasStreamDetails) {
        output.WriteMessage(3, field_names[1], StreamDetails);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReservedThroughputDetails) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ReservedThroughputDetails);
      }
      if (hasTableOptions) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, TableOptions);
      }
      if (hasStreamDetails) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, StreamDetails);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateTableResponse result;
      
      private UpdateTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateTableResponse original = result;
          result = new UpdateTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableResponse.Descriptor; }
      }
      
      public override UpdateTableResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableResponse.DefaultInstance; }
      }
      
      public override UpdateTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateTableResponse) {
          return MergeFrom((UpdateTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateTableResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UpdateTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReservedThroughputDetails) {
          MergeReservedThroughputDetails(other.ReservedThroughputDetails);
        }
        if (other.HasTableOptions) {
          MergeTableOptions(other.TableOptions);
        }
        if (other.HasStreamDetails) {
          MergeStreamDetails(other.StreamDetails);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.CreateBuilder();
              if (result.hasReservedThroughputDetails) {
                subBuilder.MergeFrom(ReservedThroughputDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughputDetails = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder();
              if (result.hasTableOptions) {
                subBuilder.MergeFrom(TableOptions);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableOptions = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.CreateBuilder();
              if (result.hasStreamDetails) {
                subBuilder.MergeFrom(StreamDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamDetails = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReservedThroughputDetails {
       get { return result.hasReservedThroughputDetails; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails ReservedThroughputDetails {
        get { return result.ReservedThroughputDetails; }
        set { SetReservedThroughputDetails(value); }
      }
      public Builder SetReservedThroughputDetails(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = value;
        return this;
      }
      public Builder SetReservedThroughputDetails(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughputDetails(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughputDetails &&
            result.reservedThroughputDetails_ != global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.DefaultInstance) {
            result.reservedThroughputDetails_ = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.CreateBuilder(result.reservedThroughputDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughputDetails_ = value;
        }
        result.hasReservedThroughputDetails = true;
        return this;
      }
      public Builder ClearReservedThroughputDetails() {
        PrepareBuilder();
        result.hasReservedThroughputDetails = false;
        result.reservedThroughputDetails_ = null;
        return this;
      }
      
      public bool HasTableOptions {
       get { return result.hasTableOptions; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
        get { return result.TableOptions; }
        set { SetTableOptions(value); }
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = value;
        return this;
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableOptions &&
            result.tableOptions_ != global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance) {
            result.tableOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder(result.tableOptions_).MergeFrom(value).BuildPartial();
        } else {
          result.tableOptions_ = value;
        }
        result.hasTableOptions = true;
        return this;
      }
      public Builder ClearTableOptions() {
        PrepareBuilder();
        result.hasTableOptions = false;
        result.tableOptions_ = null;
        return this;
      }
      
      public bool HasStreamDetails {
       get { return result.hasStreamDetails; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails StreamDetails {
        get { return result.StreamDetails; }
        set { SetStreamDetails(value); }
      }
      public Builder SetStreamDetails(global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = value;
        return this;
      }
      public Builder SetStreamDetails(global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamDetails(global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamDetails &&
            result.streamDetails_ != global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.DefaultInstance) {
            result.streamDetails_ = global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.CreateBuilder(result.streamDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.streamDetails_ = value;
        }
        result.hasStreamDetails = true;
        return this;
      }
      public Builder ClearStreamDetails() {
        PrepareBuilder();
        result.hasStreamDetails = false;
        result.streamDetails_ = null;
        return this;
      }
    }
    static UpdateTableResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeTableRequest : pb::GeneratedMessage<DescribeTableRequest, DescribeTableRequest.Builder> {
    private DescribeTableRequest() { }
    private static readonly DescribeTableRequest defaultInstance = new DescribeTableRequest().MakeReadOnly();
    private static readonly string[] _describeTableRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _describeTableRequestFieldTags = new uint[] { 10 };
    public static DescribeTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeTableRequest, DescribeTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeTableRequest result;
      
      private DescribeTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeTableRequest original = result;
          result = new DescribeTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableRequest.Descriptor; }
      }
      
      public override DescribeTableRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableRequest.DefaultInstance; }
      }
      
      public override DescribeTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeTableRequest) {
          return MergeFrom((DescribeTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeTableRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static DescribeTableRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeTableResponse : pb::GeneratedMessage<DescribeTableResponse, DescribeTableResponse.Builder> {
    private DescribeTableResponse() { }
    private static readonly DescribeTableResponse defaultInstance = new DescribeTableResponse().MakeReadOnly();
    private static readonly string[] _describeTableResponseFieldNames = new string[] { "index_metas", "reserved_throughput_details", "shard_splits", "stream_details", "table_meta", "table_options", "table_status" };
    private static readonly uint[] _describeTableResponseFieldTags = new uint[] { 66, 18, 50, 42, 10, 26, 32 };
    public static DescribeTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeTableResponse, DescribeTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeTableResponse__FieldAccessorTable; }
    }
    
    public const int TableMetaFieldNumber = 1;
    private bool hasTableMeta;
    private global::com.alicloud.openservices.tablestore.core.protocol.TableMeta tableMeta_;
    public bool HasTableMeta {
      get { return hasTableMeta; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableMeta TableMeta {
      get { return tableMeta_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.DefaultInstance; }
    }
    
    public const int ReservedThroughputDetailsFieldNumber = 2;
    private bool hasReservedThroughputDetails;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails reservedThroughputDetails_;
    public bool HasReservedThroughputDetails {
      get { return hasReservedThroughputDetails; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.DefaultInstance; }
    }
    
    public const int TableOptionsFieldNumber = 3;
    private bool hasTableOptions;
    private global::com.alicloud.openservices.tablestore.core.protocol.TableOptions tableOptions_;
    public bool HasTableOptions {
      get { return hasTableOptions; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
      get { return tableOptions_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance; }
    }
    
    public const int TableStatusFieldNumber = 4;
    private bool hasTableStatus;
    private global::com.alicloud.openservices.tablestore.core.protocol.TableStatus tableStatus_ = global::com.alicloud.openservices.tablestore.core.protocol.TableStatus.ACTIVE;
    public bool HasTableStatus {
      get { return hasTableStatus; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableStatus TableStatus {
      get { return tableStatus_; }
    }
    
    public const int StreamDetailsFieldNumber = 5;
    private bool hasStreamDetails;
    private global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails streamDetails_;
    public bool HasStreamDetails {
      get { return hasStreamDetails; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails StreamDetails {
      get { return streamDetails_ ?? global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.DefaultInstance; }
    }
    
    public const int ShardSplitsFieldNumber = 6;
    private pbc::PopsicleList<pb::ByteString> shardSplits_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> ShardSplitsList {
      get { return pbc::Lists.AsReadOnly(shardSplits_); }
    }
    public int ShardSplitsCount {
      get { return shardSplits_.Count; }
    }
    public pb::ByteString GetShardSplits(int index) {
      return shardSplits_[index];
    }
    
    public const int IndexMetasFieldNumber = 8;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> indexMetas_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> IndexMetasList {
      get { return indexMetas_; }
    }
    public int IndexMetasCount {
      get { return indexMetas_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta GetIndexMetas(int index) {
      return indexMetas_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableMeta) return false;
        if (!hasReservedThroughputDetails) return false;
        if (!hasTableOptions) return false;
        if (!hasTableStatus) return false;
        if (!TableMeta.IsInitialized) return false;
        if (!ReservedThroughputDetails.IsInitialized) return false;
        if (HasStreamDetails) {
          if (!StreamDetails.IsInitialized) return false;
        }
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta element in IndexMetasList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeTableResponseFieldNames;
      if (hasTableMeta) {
        output.WriteMessage(1, field_names[4], TableMeta);
      }
      if (hasReservedThroughputDetails) {
        output.WriteMessage(2, field_names[1], ReservedThroughputDetails);
      }
      if (hasTableOptions) {
        output.WriteMessage(3, field_names[5], TableOptions);
      }
      if (hasTableStatus) {
        output.WriteEnum(4, field_names[6], (int) TableStatus, TableStatus);
      }
      if (hasStreamDetails) {
        output.WriteMessage(5, field_names[3], StreamDetails);
      }
      if (shardSplits_.Count > 0) {
        output.WriteBytesArray(6, field_names[2], shardSplits_);
      }
      if (indexMetas_.Count > 0) {
        output.WriteMessageArray(8, field_names[0], indexMetas_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableMeta) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, TableMeta);
      }
      if (hasReservedThroughputDetails) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ReservedThroughputDetails);
      }
      if (hasTableOptions) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, TableOptions);
      }
      if (hasTableStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) TableStatus);
      }
      if (hasStreamDetails) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, StreamDetails);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in ShardSplitsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * shardSplits_.Count;
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta element in IndexMetasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeTableResponse MakeReadOnly() {
      shardSplits_.MakeReadOnly();
      indexMetas_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeTableResponse result;
      
      private DescribeTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeTableResponse original = result;
          result = new DescribeTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableResponse.Descriptor; }
      }
      
      public override DescribeTableResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableResponse.DefaultInstance; }
      }
      
      public override DescribeTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeTableResponse) {
          return MergeFrom((DescribeTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeTableResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableMeta) {
          MergeTableMeta(other.TableMeta);
        }
        if (other.HasReservedThroughputDetails) {
          MergeReservedThroughputDetails(other.ReservedThroughputDetails);
        }
        if (other.HasTableOptions) {
          MergeTableOptions(other.TableOptions);
        }
        if (other.HasTableStatus) {
          TableStatus = other.TableStatus;
        }
        if (other.HasStreamDetails) {
          MergeStreamDetails(other.StreamDetails);
        }
        if (other.shardSplits_.Count != 0) {
          result.shardSplits_.Add(other.shardSplits_);
        }
        if (other.indexMetas_.Count != 0) {
          result.indexMetas_.Add(other.indexMetas_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.CreateBuilder();
              if (result.hasTableMeta) {
                subBuilder.MergeFrom(TableMeta);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableMeta = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.CreateBuilder();
              if (result.hasReservedThroughputDetails) {
                subBuilder.MergeFrom(ReservedThroughputDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReservedThroughputDetails = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder();
              if (result.hasTableOptions) {
                subBuilder.MergeFrom(TableOptions);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableOptions = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.tableStatus_, out unknown)) {
                result.hasTableStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.CreateBuilder();
              if (result.hasStreamDetails) {
                subBuilder.MergeFrom(StreamDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StreamDetails = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              input.ReadBytesArray(tag, field_name, result.shardSplits_);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.indexMetas_, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableMeta {
       get { return result.hasTableMeta; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableMeta TableMeta {
        get { return result.TableMeta; }
        set { SetTableMeta(value); }
      }
      public Builder SetTableMeta(global::com.alicloud.openservices.tablestore.core.protocol.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = value;
        return this;
      }
      public Builder SetTableMeta(global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableMeta = true;
        result.tableMeta_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableMeta(global::com.alicloud.openservices.tablestore.core.protocol.TableMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableMeta &&
            result.tableMeta_ != global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.DefaultInstance) {
            result.tableMeta_ = global::com.alicloud.openservices.tablestore.core.protocol.TableMeta.CreateBuilder(result.tableMeta_).MergeFrom(value).BuildPartial();
        } else {
          result.tableMeta_ = value;
        }
        result.hasTableMeta = true;
        return this;
      }
      public Builder ClearTableMeta() {
        PrepareBuilder();
        result.hasTableMeta = false;
        result.tableMeta_ = null;
        return this;
      }
      
      public bool HasReservedThroughputDetails {
       get { return result.hasReservedThroughputDetails; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails ReservedThroughputDetails {
        get { return result.ReservedThroughputDetails; }
        set { SetReservedThroughputDetails(value); }
      }
      public Builder SetReservedThroughputDetails(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = value;
        return this;
      }
      public Builder SetReservedThroughputDetails(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReservedThroughputDetails = true;
        result.reservedThroughputDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReservedThroughputDetails(global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReservedThroughputDetails &&
            result.reservedThroughputDetails_ != global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.DefaultInstance) {
            result.reservedThroughputDetails_ = global::com.alicloud.openservices.tablestore.core.protocol.ReservedThroughputDetails.CreateBuilder(result.reservedThroughputDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.reservedThroughputDetails_ = value;
        }
        result.hasReservedThroughputDetails = true;
        return this;
      }
      public Builder ClearReservedThroughputDetails() {
        PrepareBuilder();
        result.hasReservedThroughputDetails = false;
        result.reservedThroughputDetails_ = null;
        return this;
      }
      
      public bool HasTableOptions {
       get { return result.hasTableOptions; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableOptions TableOptions {
        get { return result.TableOptions; }
        set { SetTableOptions(value); }
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = value;
        return this;
      }
      public Builder SetTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableOptions = true;
        result.tableOptions_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableOptions(global::com.alicloud.openservices.tablestore.core.protocol.TableOptions value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableOptions &&
            result.tableOptions_ != global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.DefaultInstance) {
            result.tableOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.TableOptions.CreateBuilder(result.tableOptions_).MergeFrom(value).BuildPartial();
        } else {
          result.tableOptions_ = value;
        }
        result.hasTableOptions = true;
        return this;
      }
      public Builder ClearTableOptions() {
        PrepareBuilder();
        result.hasTableOptions = false;
        result.tableOptions_ = null;
        return this;
      }
      
      public bool HasTableStatus {
       get { return result.hasTableStatus; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableStatus TableStatus {
        get { return result.TableStatus; }
        set { SetTableStatus(value); }
      }
      public Builder SetTableStatus(global::com.alicloud.openservices.tablestore.core.protocol.TableStatus value) {
        PrepareBuilder();
        result.hasTableStatus = true;
        result.tableStatus_ = value;
        return this;
      }
      public Builder ClearTableStatus() {
        PrepareBuilder();
        result.hasTableStatus = false;
        result.tableStatus_ = global::com.alicloud.openservices.tablestore.core.protocol.TableStatus.ACTIVE;
        return this;
      }
      
      public bool HasStreamDetails {
       get { return result.hasStreamDetails; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails StreamDetails {
        get { return result.StreamDetails; }
        set { SetStreamDetails(value); }
      }
      public Builder SetStreamDetails(global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = value;
        return this;
      }
      public Builder SetStreamDetails(global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStreamDetails = true;
        result.streamDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStreamDetails(global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStreamDetails &&
            result.streamDetails_ != global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.DefaultInstance) {
            result.streamDetails_ = global::com.alicloud.openservices.tablestore.core.protocol.StreamDetails.CreateBuilder(result.streamDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.streamDetails_ = value;
        }
        result.hasStreamDetails = true;
        return this;
      }
      public Builder ClearStreamDetails() {
        PrepareBuilder();
        result.hasStreamDetails = false;
        result.streamDetails_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> ShardSplitsList {
        get { return PrepareBuilder().shardSplits_; }
      }
      public int ShardSplitsCount {
        get { return result.ShardSplitsCount; }
      }
      public pb::ByteString GetShardSplits(int index) {
        return result.GetShardSplits(index);
      }
      public Builder SetShardSplits(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shardSplits_[index] = value;
        return this;
      }
      public Builder AddShardSplits(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shardSplits_.Add(value);
        return this;
      }
      public Builder AddRangeShardSplits(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.shardSplits_.Add(values);
        return this;
      }
      public Builder ClearShardSplits() {
        PrepareBuilder();
        result.shardSplits_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> IndexMetasList {
        get { return PrepareBuilder().indexMetas_; }
      }
      public int IndexMetasCount {
        get { return result.IndexMetasCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta GetIndexMetas(int index) {
        return result.GetIndexMetas(index);
      }
      public Builder SetIndexMetas(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indexMetas_[index] = value;
        return this;
      }
      public Builder SetIndexMetas(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indexMetas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIndexMetas(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indexMetas_.Add(value);
        return this;
      }
      public Builder AddIndexMetas(global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indexMetas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIndexMetas(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.IndexMeta> values) {
        PrepareBuilder();
        result.indexMetas_.Add(values);
        return this;
      }
      public Builder ClearIndexMetas() {
        PrepareBuilder();
        result.indexMetas_.Clear();
        return this;
      }
    }
    static DescribeTableResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListTableRequest : pb::GeneratedMessage<ListTableRequest, ListTableRequest.Builder> {
    private ListTableRequest() { }
    private static readonly ListTableRequest defaultInstance = new ListTableRequest().MakeReadOnly();
    private static readonly string[] _listTableRequestFieldNames = new string[] {  };
    private static readonly uint[] _listTableRequestFieldTags = new uint[] {  };
    public static ListTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListTableRequest, ListTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listTableRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListTableRequest result;
      
      private ListTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListTableRequest original = result;
          result = new ListTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListTableRequest.Descriptor; }
      }
      
      public override ListTableRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListTableRequest.DefaultInstance; }
      }
      
      public override ListTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListTableRequest) {
          return MergeFrom((ListTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListTableRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ListTableRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListTableResponse : pb::GeneratedMessage<ListTableResponse, ListTableResponse.Builder> {
    private ListTableResponse() { }
    private static readonly ListTableResponse defaultInstance = new ListTableResponse().MakeReadOnly();
    private static readonly string[] _listTableResponseFieldNames = new string[] { "table_names" };
    private static readonly uint[] _listTableResponseFieldTags = new uint[] { 10 };
    public static ListTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListTableResponse, ListTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListTableResponse__FieldAccessorTable; }
    }
    
    public const int TableNamesFieldNumber = 1;
    private pbc::PopsicleList<string> tableNames_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TableNamesList {
      get { return pbc::Lists.AsReadOnly(tableNames_); }
    }
    public int TableNamesCount {
      get { return tableNames_.Count; }
    }
    public string GetTableNames(int index) {
      return tableNames_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listTableResponseFieldNames;
      if (tableNames_.Count > 0) {
        output.WriteStringArray(1, field_names[0], tableNames_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in TableNamesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * tableNames_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListTableResponse MakeReadOnly() {
      tableNames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListTableResponse result;
      
      private ListTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListTableResponse original = result;
          result = new ListTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListTableResponse.Descriptor; }
      }
      
      public override ListTableResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListTableResponse.DefaultInstance; }
      }
      
      public override ListTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListTableResponse) {
          return MergeFrom((ListTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListTableResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tableNames_.Count != 0) {
          result.tableNames_.Add(other.tableNames_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.tableNames_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> TableNamesList {
        get { return PrepareBuilder().tableNames_; }
      }
      public int TableNamesCount {
        get { return result.TableNamesCount; }
      }
      public string GetTableNames(int index) {
        return result.GetTableNames(index);
      }
      public Builder SetTableNames(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tableNames_[index] = value;
        return this;
      }
      public Builder AddTableNames(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tableNames_.Add(value);
        return this;
      }
      public Builder AddRangeTableNames(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tableNames_.Add(values);
        return this;
      }
      public Builder ClearTableNames() {
        PrepareBuilder();
        result.tableNames_.Clear();
        return this;
      }
    }
    static ListTableResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteTableRequest : pb::GeneratedMessage<DeleteTableRequest, DeleteTableRequest.Builder> {
    private DeleteTableRequest() { }
    private static readonly DeleteTableRequest defaultInstance = new DeleteTableRequest().MakeReadOnly();
    private static readonly string[] _deleteTableRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _deleteTableRequestFieldTags = new uint[] { 10 };
    public static DeleteTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteTableRequest, DeleteTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteTableRequest result;
      
      private DeleteTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteTableRequest original = result;
          result = new DeleteTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableRequest.Descriptor; }
      }
      
      public override DeleteTableRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableRequest.DefaultInstance; }
      }
      
      public override DeleteTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteTableRequest) {
          return MergeFrom((DeleteTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteTableRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static DeleteTableRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteTableResponse : pb::GeneratedMessage<DeleteTableResponse, DeleteTableResponse.Builder> {
    private DeleteTableResponse() { }
    private static readonly DeleteTableResponse defaultInstance = new DeleteTableResponse().MakeReadOnly();
    private static readonly string[] _deleteTableResponseFieldNames = new string[] {  };
    private static readonly uint[] _deleteTableResponseFieldTags = new uint[] {  };
    public static DeleteTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteTableResponse, DeleteTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteTableResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteTableResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteTableResponse result;
      
      private DeleteTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteTableResponse original = result;
          result = new DeleteTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableResponse.Descriptor; }
      }
      
      public override DeleteTableResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableResponse.DefaultInstance; }
      }
      
      public override DeleteTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteTableResponse) {
          return MergeFrom((DeleteTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteTableResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static DeleteTableResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoadTableRequest : pb::GeneratedMessage<LoadTableRequest, LoadTableRequest.Builder> {
    private LoadTableRequest() { }
    private static readonly LoadTableRequest defaultInstance = new LoadTableRequest().MakeReadOnly();
    private static readonly string[] _loadTableRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _loadTableRequestFieldTags = new uint[] { 10 };
    public static LoadTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoadTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoadTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoadTableRequest, LoadTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loadTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoadTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoadTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoadTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoadTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoadTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoadTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoadTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoadTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoadTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoadTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoadTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoadTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoadTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoadTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoadTableRequest result;
      
      private LoadTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoadTableRequest original = result;
          result = new LoadTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoadTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.LoadTableRequest.Descriptor; }
      }
      
      public override LoadTableRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.LoadTableRequest.DefaultInstance; }
      }
      
      public override LoadTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoadTableRequest) {
          return MergeFrom((LoadTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoadTableRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.LoadTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loadTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loadTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static LoadTableRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoadTableResponse : pb::GeneratedMessage<LoadTableResponse, LoadTableResponse.Builder> {
    private LoadTableResponse() { }
    private static readonly LoadTableResponse defaultInstance = new LoadTableResponse().MakeReadOnly();
    private static readonly string[] _loadTableResponseFieldNames = new string[] {  };
    private static readonly uint[] _loadTableResponseFieldTags = new uint[] {  };
    public static LoadTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoadTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoadTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoadTableResponse, LoadTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_LoadTableResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loadTableResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoadTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoadTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoadTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoadTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoadTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoadTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoadTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoadTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoadTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoadTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoadTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoadTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoadTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoadTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoadTableResponse result;
      
      private LoadTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LoadTableResponse original = result;
          result = new LoadTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoadTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.LoadTableResponse.Descriptor; }
      }
      
      public override LoadTableResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.LoadTableResponse.DefaultInstance; }
      }
      
      public override LoadTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoadTableResponse) {
          return MergeFrom((LoadTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoadTableResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.LoadTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loadTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loadTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static LoadTableResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UnloadTableRequest : pb::GeneratedMessage<UnloadTableRequest, UnloadTableRequest.Builder> {
    private UnloadTableRequest() { }
    private static readonly UnloadTableRequest defaultInstance = new UnloadTableRequest().MakeReadOnly();
    private static readonly string[] _unloadTableRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _unloadTableRequestFieldTags = new uint[] { 10 };
    public static UnloadTableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnloadTableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnloadTableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnloadTableRequest, UnloadTableRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _unloadTableRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UnloadTableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnloadTableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnloadTableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnloadTableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnloadTableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnloadTableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnloadTableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnloadTableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnloadTableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnloadTableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnloadTableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnloadTableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UnloadTableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnloadTableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnloadTableRequest result;
      
      private UnloadTableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnloadTableRequest original = result;
          result = new UnloadTableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnloadTableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableRequest.Descriptor; }
      }
      
      public override UnloadTableRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableRequest.DefaultInstance; }
      }
      
      public override UnloadTableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnloadTableRequest) {
          return MergeFrom((UnloadTableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnloadTableRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unloadTableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unloadTableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static UnloadTableRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UnloadTableResponse : pb::GeneratedMessage<UnloadTableResponse, UnloadTableResponse.Builder> {
    private UnloadTableResponse() { }
    private static readonly UnloadTableResponse defaultInstance = new UnloadTableResponse().MakeReadOnly();
    private static readonly string[] _unloadTableResponseFieldNames = new string[] {  };
    private static readonly uint[] _unloadTableResponseFieldTags = new uint[] {  };
    public static UnloadTableResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnloadTableResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnloadTableResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnloadTableResponse, UnloadTableResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UnloadTableResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _unloadTableResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UnloadTableResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnloadTableResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnloadTableResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnloadTableResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnloadTableResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnloadTableResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnloadTableResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnloadTableResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnloadTableResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnloadTableResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnloadTableResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnloadTableResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UnloadTableResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnloadTableResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnloadTableResponse result;
      
      private UnloadTableResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UnloadTableResponse original = result;
          result = new UnloadTableResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnloadTableResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableResponse.Descriptor; }
      }
      
      public override UnloadTableResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableResponse.DefaultInstance; }
      }
      
      public override UnloadTableResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnloadTableResponse) {
          return MergeFrom((UnloadTableResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnloadTableResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UnloadTableResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unloadTableResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unloadTableResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UnloadTableResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TimeRange : pb::GeneratedMessage<TimeRange, TimeRange.Builder> {
    private TimeRange() { }
    private static readonly TimeRange defaultInstance = new TimeRange().MakeReadOnly();
    private static readonly string[] _timeRangeFieldNames = new string[] { "end_time", "specific_time", "start_time" };
    private static readonly uint[] _timeRangeFieldTags = new uint[] { 16, 24, 8 };
    public static TimeRange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TimeRange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TimeRange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TimeRange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TimeRange, TimeRange.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TimeRange__FieldAccessorTable; }
    }
    
    public const int StartTimeFieldNumber = 1;
    private bool hasStartTime;
    private long startTime_;
    public bool HasStartTime {
      get { return hasStartTime; }
    }
    public long StartTime {
      get { return startTime_; }
    }
    
    public const int EndTimeFieldNumber = 2;
    private bool hasEndTime;
    private long endTime_;
    public bool HasEndTime {
      get { return hasEndTime; }
    }
    public long EndTime {
      get { return endTime_; }
    }
    
    public const int SpecificTimeFieldNumber = 3;
    private bool hasSpecificTime;
    private long specificTime_;
    public bool HasSpecificTime {
      get { return hasSpecificTime; }
    }
    public long SpecificTime {
      get { return specificTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _timeRangeFieldNames;
      if (hasStartTime) {
        output.WriteInt64(1, field_names[2], StartTime);
      }
      if (hasEndTime) {
        output.WriteInt64(2, field_names[0], EndTime);
      }
      if (hasSpecificTime) {
        output.WriteInt64(3, field_names[1], SpecificTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStartTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, StartTime);
      }
      if (hasEndTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, EndTime);
      }
      if (hasSpecificTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, SpecificTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TimeRange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TimeRange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TimeRange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TimeRange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TimeRange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TimeRange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TimeRange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TimeRange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TimeRange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TimeRange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TimeRange MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TimeRange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TimeRange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TimeRange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TimeRange result;
      
      private TimeRange PrepareBuilder() {
        if (resultIsReadOnly) {
          TimeRange original = result;
          result = new TimeRange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TimeRange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Descriptor; }
      }
      
      public override TimeRange DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance; }
      }
      
      public override TimeRange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TimeRange) {
          return MergeFrom((TimeRange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TimeRange other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasEndTime) {
          EndTime = other.EndTime;
        }
        if (other.HasSpecificTime) {
          SpecificTime = other.SpecificTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_timeRangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _timeRangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStartTime = input.ReadInt64(ref result.startTime_);
              break;
            }
            case 16: {
              result.hasEndTime = input.ReadInt64(ref result.endTime_);
              break;
            }
            case 24: {
              result.hasSpecificTime = input.ReadInt64(ref result.specificTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStartTime {
        get { return result.hasStartTime; }
      }
      public long StartTime {
        get { return result.StartTime; }
        set { SetStartTime(value); }
      }
      public Builder SetStartTime(long value) {
        PrepareBuilder();
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder ClearStartTime() {
        PrepareBuilder();
        result.hasStartTime = false;
        result.startTime_ = 0L;
        return this;
      }
      
      public bool HasEndTime {
        get { return result.hasEndTime; }
      }
      public long EndTime {
        get { return result.EndTime; }
        set { SetEndTime(value); }
      }
      public Builder SetEndTime(long value) {
        PrepareBuilder();
        result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder ClearEndTime() {
        PrepareBuilder();
        result.hasEndTime = false;
        result.endTime_ = 0L;
        return this;
      }
      
      public bool HasSpecificTime {
        get { return result.hasSpecificTime; }
      }
      public long SpecificTime {
        get { return result.SpecificTime; }
        set { SetSpecificTime(value); }
      }
      public Builder SetSpecificTime(long value) {
        PrepareBuilder();
        result.hasSpecificTime = true;
        result.specificTime_ = value;
        return this;
      }
      public Builder ClearSpecificTime() {
        PrepareBuilder();
        result.hasSpecificTime = false;
        result.specificTime_ = 0L;
        return this;
      }
    }
    static TimeRange() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReturnContent : pb::GeneratedMessage<ReturnContent, ReturnContent.Builder> {
    private ReturnContent() { }
    private static readonly ReturnContent defaultInstance = new ReturnContent().MakeReadOnly();
    private static readonly string[] _returnContentFieldNames = new string[] { "return_column_names", "return_type" };
    private static readonly uint[] _returnContentFieldTags = new uint[] { 18, 8 };
    public static ReturnContent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReturnContent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReturnContent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ReturnContent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReturnContent, ReturnContent.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ReturnContent__FieldAccessorTable; }
    }
    
    public const int ReturnTypeFieldNumber = 1;
    private bool hasReturnType;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReturnType returnType_ = global::com.alicloud.openservices.tablestore.core.protocol.ReturnType.RT_NONE;
    public bool HasReturnType {
      get { return hasReturnType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReturnType ReturnType {
      get { return returnType_; }
    }
    
    public const int ReturnColumnNamesFieldNumber = 2;
    private pbc::PopsicleList<string> returnColumnNames_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ReturnColumnNamesList {
      get { return pbc::Lists.AsReadOnly(returnColumnNames_); }
    }
    public int ReturnColumnNamesCount {
      get { return returnColumnNames_.Count; }
    }
    public string GetReturnColumnNames(int index) {
      return returnColumnNames_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _returnContentFieldNames;
      if (hasReturnType) {
        output.WriteEnum(1, field_names[1], (int) ReturnType, ReturnType);
      }
      if (returnColumnNames_.Count > 0) {
        output.WriteStringArray(2, field_names[0], returnColumnNames_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReturnType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ReturnType);
      }
      {
        int dataSize = 0;
        foreach (string element in ReturnColumnNamesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * returnColumnNames_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReturnContent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReturnContent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReturnContent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReturnContent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReturnContent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReturnContent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReturnContent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReturnContent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReturnContent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReturnContent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReturnContent MakeReadOnly() {
      returnColumnNames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReturnContent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReturnContent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReturnContent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReturnContent result;
      
      private ReturnContent PrepareBuilder() {
        if (resultIsReadOnly) {
          ReturnContent original = result;
          result = new ReturnContent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReturnContent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Descriptor; }
      }
      
      public override ReturnContent DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance; }
      }
      
      public override ReturnContent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReturnContent) {
          return MergeFrom((ReturnContent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReturnContent other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReturnType) {
          ReturnType = other.ReturnType;
        }
        if (other.returnColumnNames_.Count != 0) {
          result.returnColumnNames_.Add(other.returnColumnNames_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_returnContentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _returnContentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.returnType_, out unknown)) {
                result.hasReturnType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.returnColumnNames_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReturnType {
       get { return result.hasReturnType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReturnType ReturnType {
        get { return result.ReturnType; }
        set { SetReturnType(value); }
      }
      public Builder SetReturnType(global::com.alicloud.openservices.tablestore.core.protocol.ReturnType value) {
        PrepareBuilder();
        result.hasReturnType = true;
        result.returnType_ = value;
        return this;
      }
      public Builder ClearReturnType() {
        PrepareBuilder();
        result.hasReturnType = false;
        result.returnType_ = global::com.alicloud.openservices.tablestore.core.protocol.ReturnType.RT_NONE;
        return this;
      }
      
      public pbc::IPopsicleList<string> ReturnColumnNamesList {
        get { return PrepareBuilder().returnColumnNames_; }
      }
      public int ReturnColumnNamesCount {
        get { return result.ReturnColumnNamesCount; }
      }
      public string GetReturnColumnNames(int index) {
        return result.GetReturnColumnNames(index);
      }
      public Builder SetReturnColumnNames(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.returnColumnNames_[index] = value;
        return this;
      }
      public Builder AddReturnColumnNames(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.returnColumnNames_.Add(value);
        return this;
      }
      public Builder AddRangeReturnColumnNames(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.returnColumnNames_.Add(values);
        return this;
      }
      public Builder ClearReturnColumnNames() {
        PrepareBuilder();
        result.returnColumnNames_.Clear();
        return this;
      }
    }
    static ReturnContent() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRowRequest : pb::GeneratedMessage<GetRowRequest, GetRowRequest.Builder> {
    private GetRowRequest() { }
    private static readonly GetRowRequest defaultInstance = new GetRowRequest().MakeReadOnly();
    private static readonly string[] _getRowRequestFieldNames = new string[] { "cache_blocks", "columns_to_get", "end_column", "filter", "max_versions", "primary_key", "start_column", "table_name", "time_range", "token", "transaction_id" };
    private static readonly uint[] _getRowRequestFieldTags = new uint[] { 48, 26, 74, 58, 40, 18, 66, 10, 34, 82, 90 };
    public static GetRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRowRequest, GetRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private bool hasPrimaryKey;
    private pb::ByteString primaryKey_ = pb::ByteString.Empty;
    public bool HasPrimaryKey {
      get { return hasPrimaryKey; }
    }
    public pb::ByteString PrimaryKey {
      get { return primaryKey_; }
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private pbc::PopsicleList<string> columnsToGet_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnsToGetList {
      get { return pbc::Lists.AsReadOnly(columnsToGet_); }
    }
    public int ColumnsToGetCount {
      get { return columnsToGet_.Count; }
    }
    public string GetColumnsToGet(int index) {
      return columnsToGet_[index];
    }
    
    public const int TimeRangeFieldNumber = 4;
    private bool hasTimeRange;
    private global::com.alicloud.openservices.tablestore.core.protocol.TimeRange timeRange_;
    public bool HasTimeRange {
      get { return hasTimeRange; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TimeRange TimeRange {
      get { return timeRange_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance; }
    }
    
    public const int MaxVersionsFieldNumber = 5;
    private bool hasMaxVersions;
    private int maxVersions_;
    public bool HasMaxVersions {
      get { return hasMaxVersions; }
    }
    public int MaxVersions {
      get { return maxVersions_; }
    }
    
    public const int CacheBlocksFieldNumber = 6;
    private bool hasCacheBlocks;
    private bool cacheBlocks_ = true;
    public bool HasCacheBlocks {
      get { return hasCacheBlocks; }
    }
    public bool CacheBlocks {
      get { return cacheBlocks_; }
    }
    
    public const int FilterFieldNumber = 7;
    private bool hasFilter;
    private pb::ByteString filter_ = pb::ByteString.Empty;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public pb::ByteString Filter {
      get { return filter_; }
    }
    
    public const int StartColumnFieldNumber = 8;
    private bool hasStartColumn;
    private string startColumn_ = "";
    public bool HasStartColumn {
      get { return hasStartColumn; }
    }
    public string StartColumn {
      get { return startColumn_; }
    }
    
    public const int EndColumnFieldNumber = 9;
    private bool hasEndColumn;
    private string endColumn_ = "";
    public bool HasEndColumn {
      get { return hasEndColumn; }
    }
    public string EndColumn {
      get { return endColumn_; }
    }
    
    public const int TokenFieldNumber = 10;
    private bool hasToken;
    private pb::ByteString token_ = pb::ByteString.Empty;
    public bool HasToken {
      get { return hasToken; }
    }
    public pb::ByteString Token {
      get { return token_; }
    }
    
    public const int TransactionIdFieldNumber = 11;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasPrimaryKey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[7], TableName);
      }
      if (hasPrimaryKey) {
        output.WriteBytes(2, field_names[5], PrimaryKey);
      }
      if (columnsToGet_.Count > 0) {
        output.WriteStringArray(3, field_names[1], columnsToGet_);
      }
      if (hasTimeRange) {
        output.WriteMessage(4, field_names[8], TimeRange);
      }
      if (hasMaxVersions) {
        output.WriteInt32(5, field_names[4], MaxVersions);
      }
      if (hasCacheBlocks) {
        output.WriteBool(6, field_names[0], CacheBlocks);
      }
      if (hasFilter) {
        output.WriteBytes(7, field_names[3], Filter);
      }
      if (hasStartColumn) {
        output.WriteString(8, field_names[6], StartColumn);
      }
      if (hasEndColumn) {
        output.WriteString(9, field_names[2], EndColumn);
      }
      if (hasToken) {
        output.WriteBytes(10, field_names[9], Token);
      }
      if (hasTransactionId) {
        output.WriteString(11, field_names[10], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasPrimaryKey) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, PrimaryKey);
      }
      {
        int dataSize = 0;
        foreach (string element in ColumnsToGetList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * columnsToGet_.Count;
      }
      if (hasTimeRange) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, TimeRange);
      }
      if (hasMaxVersions) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, MaxVersions);
      }
      if (hasCacheBlocks) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, CacheBlocks);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeBytesSize(7, Filter);
      }
      if (hasStartColumn) {
        size += pb::CodedOutputStream.ComputeStringSize(8, StartColumn);
      }
      if (hasEndColumn) {
        size += pb::CodedOutputStream.ComputeStringSize(9, EndColumn);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(10, Token);
      }
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(11, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRowRequest MakeReadOnly() {
      columnsToGet_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRowRequest result;
      
      private GetRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRowRequest original = result;
          result = new GetRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRowRequest.Descriptor; }
      }
      
      public override GetRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRowRequest.DefaultInstance; }
      }
      
      public override GetRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRowRequest) {
          return MergeFrom((GetRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasPrimaryKey) {
          PrimaryKey = other.PrimaryKey;
        }
        if (other.columnsToGet_.Count != 0) {
          result.columnsToGet_.Add(other.columnsToGet_);
        }
        if (other.HasTimeRange) {
          MergeTimeRange(other.TimeRange);
        }
        if (other.HasMaxVersions) {
          MaxVersions = other.MaxVersions;
        }
        if (other.HasCacheBlocks) {
          CacheBlocks = other.CacheBlocks;
        }
        if (other.HasFilter) {
          Filter = other.Filter;
        }
        if (other.HasStartColumn) {
          StartColumn = other.StartColumn;
        }
        if (other.HasEndColumn) {
          EndColumn = other.EndColumn;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasPrimaryKey = input.ReadBytes(ref result.primaryKey_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.columnsToGet_);
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.CreateBuilder();
              if (result.hasTimeRange) {
                subBuilder.MergeFrom(TimeRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TimeRange = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasMaxVersions = input.ReadInt32(ref result.maxVersions_);
              break;
            }
            case 48: {
              result.hasCacheBlocks = input.ReadBool(ref result.cacheBlocks_);
              break;
            }
            case 58: {
              result.hasFilter = input.ReadBytes(ref result.filter_);
              break;
            }
            case 66: {
              result.hasStartColumn = input.ReadString(ref result.startColumn_);
              break;
            }
            case 74: {
              result.hasEndColumn = input.ReadString(ref result.endColumn_);
              break;
            }
            case 82: {
              result.hasToken = input.ReadBytes(ref result.token_);
              break;
            }
            case 90: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasPrimaryKey {
        get { return result.hasPrimaryKey; }
      }
      public pb::ByteString PrimaryKey {
        get { return result.PrimaryKey; }
        set { SetPrimaryKey(value); }
      }
      public Builder SetPrimaryKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPrimaryKey = true;
        result.primaryKey_ = value;
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.hasPrimaryKey = false;
        result.primaryKey_ = pb::ByteString.Empty;
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnsToGetList {
        get { return PrepareBuilder().columnsToGet_; }
      }
      public int ColumnsToGetCount {
        get { return result.ColumnsToGetCount; }
      }
      public string GetColumnsToGet(int index) {
        return result.GetColumnsToGet(index);
      }
      public Builder SetColumnsToGet(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_[index] = value;
        return this;
      }
      public Builder AddColumnsToGet(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_.Add(value);
        return this;
      }
      public Builder AddRangeColumnsToGet(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnsToGet_.Add(values);
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.columnsToGet_.Clear();
        return this;
      }
      
      public bool HasTimeRange {
       get { return result.hasTimeRange; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TimeRange TimeRange {
        get { return result.TimeRange; }
        set { SetTimeRange(value); }
      }
      public Builder SetTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeRange = true;
        result.timeRange_ = value;
        return this;
      }
      public Builder SetTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTimeRange = true;
        result.timeRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTimeRange &&
            result.timeRange_ != global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance) {
            result.timeRange_ = global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.CreateBuilder(result.timeRange_).MergeFrom(value).BuildPartial();
        } else {
          result.timeRange_ = value;
        }
        result.hasTimeRange = true;
        return this;
      }
      public Builder ClearTimeRange() {
        PrepareBuilder();
        result.hasTimeRange = false;
        result.timeRange_ = null;
        return this;
      }
      
      public bool HasMaxVersions {
        get { return result.hasMaxVersions; }
      }
      public int MaxVersions {
        get { return result.MaxVersions; }
        set { SetMaxVersions(value); }
      }
      public Builder SetMaxVersions(int value) {
        PrepareBuilder();
        result.hasMaxVersions = true;
        result.maxVersions_ = value;
        return this;
      }
      public Builder ClearMaxVersions() {
        PrepareBuilder();
        result.hasMaxVersions = false;
        result.maxVersions_ = 0;
        return this;
      }
      
      public bool HasCacheBlocks {
        get { return result.hasCacheBlocks; }
      }
      public bool CacheBlocks {
        get { return result.CacheBlocks; }
        set { SetCacheBlocks(value); }
      }
      public Builder SetCacheBlocks(bool value) {
        PrepareBuilder();
        result.hasCacheBlocks = true;
        result.cacheBlocks_ = value;
        return this;
      }
      public Builder ClearCacheBlocks() {
        PrepareBuilder();
        result.hasCacheBlocks = false;
        result.cacheBlocks_ = true;
        return this;
      }
      
      public bool HasFilter {
        get { return result.hasFilter; }
      }
      public pb::ByteString Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasStartColumn {
        get { return result.hasStartColumn; }
      }
      public string StartColumn {
        get { return result.StartColumn; }
        set { SetStartColumn(value); }
      }
      public Builder SetStartColumn(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStartColumn = true;
        result.startColumn_ = value;
        return this;
      }
      public Builder ClearStartColumn() {
        PrepareBuilder();
        result.hasStartColumn = false;
        result.startColumn_ = "";
        return this;
      }
      
      public bool HasEndColumn {
        get { return result.hasEndColumn; }
      }
      public string EndColumn {
        get { return result.EndColumn; }
        set { SetEndColumn(value); }
      }
      public Builder SetEndColumn(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEndColumn = true;
        result.endColumn_ = value;
        return this;
      }
      public Builder ClearEndColumn() {
        PrepareBuilder();
        result.hasEndColumn = false;
        result.endColumn_ = "";
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public pb::ByteString Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static GetRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRowResponse : pb::GeneratedMessage<GetRowResponse, GetRowResponse.Builder> {
    private GetRowResponse() { }
    private static readonly GetRowResponse defaultInstance = new GetRowResponse().MakeReadOnly();
    private static readonly string[] _getRowResponseFieldNames = new string[] { "consumed", "next_token", "row" };
    private static readonly uint[] _getRowResponseFieldTags = new uint[] { 10, 26, 18 };
    public static GetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRowResponse, GetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 2;
    private bool hasRow;
    private pb::ByteString row_ = pb::ByteString.Empty;
    public bool HasRow {
      get { return hasRow; }
    }
    public pb::ByteString Row {
      get { return row_; }
    }
    
    public const int NextTokenFieldNumber = 3;
    private bool hasNextToken;
    private pb::ByteString nextToken_ = pb::ByteString.Empty;
    public bool HasNextToken {
      get { return hasNextToken; }
    }
    public pb::ByteString NextToken {
      get { return nextToken_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!hasRow) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteBytes(2, field_names[2], Row);
      }
      if (hasNextToken) {
        output.WriteBytes(3, field_names[1], NextToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
      }
      if (hasRow) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Row);
      }
      if (hasNextToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, NextToken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRowResponse result;
      
      private GetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRowResponse original = result;
          result = new GetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRowResponse.Descriptor; }
      }
      
      public override GetRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRowResponse.DefaultInstance; }
      }
      
      public override GetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRowResponse) {
          return MergeFrom((GetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          Row = other.Row;
        }
        if (other.HasNextToken) {
          NextToken = other.NextToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasRow = input.ReadBytes(ref result.row_);
              break;
            }
            case 26: {
              result.hasNextToken = input.ReadBytes(ref result.nextToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public pb::ByteString Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasNextToken {
        get { return result.hasNextToken; }
      }
      public pb::ByteString NextToken {
        get { return result.NextToken; }
        set { SetNextToken(value); }
      }
      public Builder SetNextToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextToken = true;
        result.nextToken_ = value;
        return this;
      }
      public Builder ClearNextToken() {
        PrepareBuilder();
        result.hasNextToken = false;
        result.nextToken_ = pb::ByteString.Empty;
        return this;
      }
    }
    static GetRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateRowRequest : pb::GeneratedMessage<UpdateRowRequest, UpdateRowRequest.Builder> {
    private UpdateRowRequest() { }
    private static readonly UpdateRowRequest defaultInstance = new UpdateRowRequest().MakeReadOnly();
    private static readonly string[] _updateRowRequestFieldNames = new string[] { "condition", "return_content", "row_change", "table_name", "transaction_id" };
    private static readonly uint[] _updateRowRequestFieldTags = new uint[] { 26, 34, 18, 10, 42 };
    public static UpdateRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRowRequest, UpdateRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int RowChangeFieldNumber = 2;
    private bool hasRowChange;
    private pb::ByteString rowChange_ = pb::ByteString.Empty;
    public bool HasRowChange {
      get { return hasRowChange; }
    }
    public pb::ByteString RowChange {
      get { return rowChange_; }
    }
    
    public const int ConditionFieldNumber = 3;
    private bool hasCondition;
    private global::com.alicloud.openservices.tablestore.core.protocol.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
      get { return condition_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance; }
    }
    
    public const int ReturnContentFieldNumber = 4;
    private bool hasReturnContent;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent returnContent_;
    public bool HasReturnContent {
      get { return hasReturnContent; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
      get { return returnContent_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance; }
    }
    
    public const int TransactionIdFieldNumber = 5;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasRowChange) return false;
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (hasRowChange) {
        output.WriteBytes(2, field_names[2], RowChange);
      }
      if (hasCondition) {
        output.WriteMessage(3, field_names[0], Condition);
      }
      if (hasReturnContent) {
        output.WriteMessage(4, field_names[1], ReturnContent);
      }
      if (hasTransactionId) {
        output.WriteString(5, field_names[4], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasRowChange) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, RowChange);
      }
      if (hasCondition) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Condition);
      }
      if (hasReturnContent) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, ReturnContent);
      }
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRowRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRowRequest result;
      
      private UpdateRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRowRequest original = result;
          result = new UpdateRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowRequest.Descriptor; }
      }
      
      public override UpdateRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowRequest.DefaultInstance; }
      }
      
      public override UpdateRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRowRequest) {
          return MergeFrom((UpdateRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasRowChange) {
          RowChange = other.RowChange;
        }
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.HasReturnContent) {
          MergeReturnContent(other.ReturnContent);
        }
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasRowChange = input.ReadBytes(ref result.rowChange_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder();
              if (result.hasReturnContent) {
                subBuilder.MergeFrom(ReturnContent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReturnContent = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasRowChange {
        get { return result.hasRowChange; }
      }
      public pb::ByteString RowChange {
        get { return result.RowChange; }
        set { SetRowChange(value); }
      }
      public Builder SetRowChange(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRowChange = true;
        result.rowChange_ = value;
        return this;
      }
      public Builder ClearRowChange() {
        PrepareBuilder();
        result.hasRowChange = false;
        result.rowChange_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance) {
            result.condition_ = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public bool HasReturnContent {
       get { return result.hasReturnContent; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
        get { return result.ReturnContent; }
        set { SetReturnContent(value); }
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = value;
        return this;
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReturnContent &&
            result.returnContent_ != global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance) {
            result.returnContent_ = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder(result.returnContent_).MergeFrom(value).BuildPartial();
        } else {
          result.returnContent_ = value;
        }
        result.hasReturnContent = true;
        return this;
      }
      public Builder ClearReturnContent() {
        PrepareBuilder();
        result.hasReturnContent = false;
        result.returnContent_ = null;
        return this;
      }
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static UpdateRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateRowResponse : pb::GeneratedMessage<UpdateRowResponse, UpdateRowResponse.Builder> {
    private UpdateRowResponse() { }
    private static readonly UpdateRowResponse defaultInstance = new UpdateRowResponse().MakeReadOnly();
    private static readonly string[] _updateRowResponseFieldNames = new string[] { "consumed", "row" };
    private static readonly uint[] _updateRowResponseFieldTags = new uint[] { 10, 18 };
    public static UpdateRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRowResponse, UpdateRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 2;
    private bool hasRow;
    private pb::ByteString row_ = pb::ByteString.Empty;
    public bool HasRow {
      get { return hasRow; }
    }
    public pb::ByteString Row {
      get { return row_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteBytes(2, field_names[1], Row);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
      }
      if (hasRow) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Row);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRowResponse result;
      
      private UpdateRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRowResponse original = result;
          result = new UpdateRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowResponse.Descriptor; }
      }
      
      public override UpdateRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowResponse.DefaultInstance; }
      }
      
      public override UpdateRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRowResponse) {
          return MergeFrom((UpdateRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UpdateRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          Row = other.Row;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasRow = input.ReadBytes(ref result.row_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public pb::ByteString Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = pb::ByteString.Empty;
        return this;
      }
    }
    static UpdateRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PutRowRequest : pb::GeneratedMessage<PutRowRequest, PutRowRequest.Builder> {
    private PutRowRequest() { }
    private static readonly PutRowRequest defaultInstance = new PutRowRequest().MakeReadOnly();
    private static readonly string[] _putRowRequestFieldNames = new string[] { "condition", "return_content", "row", "table_name", "transaction_id" };
    private static readonly uint[] _putRowRequestFieldTags = new uint[] { 26, 34, 18, 10, 42 };
    public static PutRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PutRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PutRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PutRowRequest, PutRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int RowFieldNumber = 2;
    private bool hasRow;
    private pb::ByteString row_ = pb::ByteString.Empty;
    public bool HasRow {
      get { return hasRow; }
    }
    public pb::ByteString Row {
      get { return row_; }
    }
    
    public const int ConditionFieldNumber = 3;
    private bool hasCondition;
    private global::com.alicloud.openservices.tablestore.core.protocol.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
      get { return condition_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance; }
    }
    
    public const int ReturnContentFieldNumber = 4;
    private bool hasReturnContent;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent returnContent_;
    public bool HasReturnContent {
      get { return hasReturnContent; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
      get { return returnContent_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance; }
    }
    
    public const int TransactionIdFieldNumber = 5;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasRow) return false;
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _putRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (hasRow) {
        output.WriteBytes(2, field_names[2], Row);
      }
      if (hasCondition) {
        output.WriteMessage(3, field_names[0], Condition);
      }
      if (hasReturnContent) {
        output.WriteMessage(4, field_names[1], ReturnContent);
      }
      if (hasTransactionId) {
        output.WriteString(5, field_names[4], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasRow) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Row);
      }
      if (hasCondition) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Condition);
      }
      if (hasReturnContent) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, ReturnContent);
      }
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PutRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PutRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PutRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PutRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PutRowRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PutRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PutRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PutRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PutRowRequest result;
      
      private PutRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PutRowRequest original = result;
          result = new PutRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PutRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PutRowRequest.Descriptor; }
      }
      
      public override PutRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PutRowRequest.DefaultInstance; }
      }
      
      public override PutRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PutRowRequest) {
          return MergeFrom((PutRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PutRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PutRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasRow) {
          Row = other.Row;
        }
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.HasReturnContent) {
          MergeReturnContent(other.ReturnContent);
        }
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_putRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _putRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasRow = input.ReadBytes(ref result.row_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder();
              if (result.hasReturnContent) {
                subBuilder.MergeFrom(ReturnContent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReturnContent = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public pb::ByteString Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance) {
            result.condition_ = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public bool HasReturnContent {
       get { return result.hasReturnContent; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
        get { return result.ReturnContent; }
        set { SetReturnContent(value); }
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = value;
        return this;
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReturnContent &&
            result.returnContent_ != global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance) {
            result.returnContent_ = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder(result.returnContent_).MergeFrom(value).BuildPartial();
        } else {
          result.returnContent_ = value;
        }
        result.hasReturnContent = true;
        return this;
      }
      public Builder ClearReturnContent() {
        PrepareBuilder();
        result.hasReturnContent = false;
        result.returnContent_ = null;
        return this;
      }
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static PutRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PutRowResponse : pb::GeneratedMessage<PutRowResponse, PutRowResponse.Builder> {
    private PutRowResponse() { }
    private static readonly PutRowResponse defaultInstance = new PutRowResponse().MakeReadOnly();
    private static readonly string[] _putRowResponseFieldNames = new string[] { "consumed", "row" };
    private static readonly uint[] _putRowResponseFieldTags = new uint[] { 10, 18 };
    public static PutRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PutRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PutRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PutRowResponse, PutRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_PutRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 2;
    private bool hasRow;
    private pb::ByteString row_ = pb::ByteString.Empty;
    public bool HasRow {
      get { return hasRow; }
    }
    public pb::ByteString Row {
      get { return row_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _putRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteBytes(2, field_names[1], Row);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
      }
      if (hasRow) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Row);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PutRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PutRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PutRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PutRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PutRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PutRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PutRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PutRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PutRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PutRowResponse result;
      
      private PutRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PutRowResponse original = result;
          result = new PutRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PutRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PutRowResponse.Descriptor; }
      }
      
      public override PutRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PutRowResponse.DefaultInstance; }
      }
      
      public override PutRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PutRowResponse) {
          return MergeFrom((PutRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PutRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PutRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          Row = other.Row;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_putRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _putRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasRow = input.ReadBytes(ref result.row_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public pb::ByteString Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = pb::ByteString.Empty;
        return this;
      }
    }
    static PutRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteRowRequest : pb::GeneratedMessage<DeleteRowRequest, DeleteRowRequest.Builder> {
    private DeleteRowRequest() { }
    private static readonly DeleteRowRequest defaultInstance = new DeleteRowRequest().MakeReadOnly();
    private static readonly string[] _deleteRowRequestFieldNames = new string[] { "condition", "primary_key", "return_content", "table_name", "transaction_id" };
    private static readonly uint[] _deleteRowRequestFieldTags = new uint[] { 26, 18, 34, 10, 42 };
    public static DeleteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteRowRequest, DeleteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private bool hasPrimaryKey;
    private pb::ByteString primaryKey_ = pb::ByteString.Empty;
    public bool HasPrimaryKey {
      get { return hasPrimaryKey; }
    }
    public pb::ByteString PrimaryKey {
      get { return primaryKey_; }
    }
    
    public const int ConditionFieldNumber = 3;
    private bool hasCondition;
    private global::com.alicloud.openservices.tablestore.core.protocol.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
      get { return condition_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance; }
    }
    
    public const int ReturnContentFieldNumber = 4;
    private bool hasReturnContent;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent returnContent_;
    public bool HasReturnContent {
      get { return hasReturnContent; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
      get { return returnContent_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance; }
    }
    
    public const int TransactionIdFieldNumber = 5;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasPrimaryKey) return false;
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (hasPrimaryKey) {
        output.WriteBytes(2, field_names[1], PrimaryKey);
      }
      if (hasCondition) {
        output.WriteMessage(3, field_names[0], Condition);
      }
      if (hasReturnContent) {
        output.WriteMessage(4, field_names[2], ReturnContent);
      }
      if (hasTransactionId) {
        output.WriteString(5, field_names[4], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasPrimaryKey) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, PrimaryKey);
      }
      if (hasCondition) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Condition);
      }
      if (hasReturnContent) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, ReturnContent);
      }
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteRowRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteRowRequest result;
      
      private DeleteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteRowRequest original = result;
          result = new DeleteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowRequest.Descriptor; }
      }
      
      public override DeleteRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowRequest.DefaultInstance; }
      }
      
      public override DeleteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteRowRequest) {
          return MergeFrom((DeleteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasPrimaryKey) {
          PrimaryKey = other.PrimaryKey;
        }
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.HasReturnContent) {
          MergeReturnContent(other.ReturnContent);
        }
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasPrimaryKey = input.ReadBytes(ref result.primaryKey_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder();
              if (result.hasReturnContent) {
                subBuilder.MergeFrom(ReturnContent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReturnContent = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasPrimaryKey {
        get { return result.hasPrimaryKey; }
      }
      public pb::ByteString PrimaryKey {
        get { return result.PrimaryKey; }
        set { SetPrimaryKey(value); }
      }
      public Builder SetPrimaryKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPrimaryKey = true;
        result.primaryKey_ = value;
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.hasPrimaryKey = false;
        result.primaryKey_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance) {
            result.condition_ = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public bool HasReturnContent {
       get { return result.hasReturnContent; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
        get { return result.ReturnContent; }
        set { SetReturnContent(value); }
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = value;
        return this;
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReturnContent &&
            result.returnContent_ != global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance) {
            result.returnContent_ = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder(result.returnContent_).MergeFrom(value).BuildPartial();
        } else {
          result.returnContent_ = value;
        }
        result.hasReturnContent = true;
        return this;
      }
      public Builder ClearReturnContent() {
        PrepareBuilder();
        result.hasReturnContent = false;
        result.returnContent_ = null;
        return this;
      }
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static DeleteRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteRowResponse : pb::GeneratedMessage<DeleteRowResponse, DeleteRowResponse.Builder> {
    private DeleteRowResponse() { }
    private static readonly DeleteRowResponse defaultInstance = new DeleteRowResponse().MakeReadOnly();
    private static readonly string[] _deleteRowResponseFieldNames = new string[] { "consumed", "row" };
    private static readonly uint[] _deleteRowResponseFieldTags = new uint[] { 10, 18 };
    public static DeleteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteRowResponse, DeleteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteRowResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 2;
    private bool hasRow;
    private pb::ByteString row_ = pb::ByteString.Empty;
    public bool HasRow {
      get { return hasRow; }
    }
    public pb::ByteString Row {
      get { return row_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteRowResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteBytes(2, field_names[1], Row);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
      }
      if (hasRow) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Row);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteRowResponse result;
      
      private DeleteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteRowResponse original = result;
          result = new DeleteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowResponse.Descriptor; }
      }
      
      public override DeleteRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowResponse.DefaultInstance; }
      }
      
      public override DeleteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteRowResponse) {
          return MergeFrom((DeleteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          Row = other.Row;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasRow = input.ReadBytes(ref result.row_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public pb::ByteString Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = pb::ByteString.Empty;
        return this;
      }
    }
    static DeleteRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchGetRowRequest : pb::GeneratedMessage<TableInBatchGetRowRequest, TableInBatchGetRowRequest.Builder> {
    private TableInBatchGetRowRequest() { }
    private static readonly TableInBatchGetRowRequest defaultInstance = new TableInBatchGetRowRequest().MakeReadOnly();
    private static readonly string[] _tableInBatchGetRowRequestFieldNames = new string[] { "cache_blocks", "columns_to_get", "end_column", "filter", "max_versions", "primary_key", "start_column", "table_name", "time_range", "token" };
    private static readonly uint[] _tableInBatchGetRowRequestFieldTags = new uint[] { 56, 34, 82, 66, 48, 18, 74, 10, 42, 26 };
    public static TableInBatchGetRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchGetRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchGetRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchGetRowRequest, TableInBatchGetRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int PrimaryKeyFieldNumber = 2;
    private pbc::PopsicleList<pb::ByteString> primaryKey_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> PrimaryKeyList {
      get { return pbc::Lists.AsReadOnly(primaryKey_); }
    }
    public int PrimaryKeyCount {
      get { return primaryKey_.Count; }
    }
    public pb::ByteString GetPrimaryKey(int index) {
      return primaryKey_[index];
    }
    
    public const int TokenFieldNumber = 3;
    private pbc::PopsicleList<pb::ByteString> token_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> TokenList {
      get { return pbc::Lists.AsReadOnly(token_); }
    }
    public int TokenCount {
      get { return token_.Count; }
    }
    public pb::ByteString GetToken(int index) {
      return token_[index];
    }
    
    public const int ColumnsToGetFieldNumber = 4;
    private pbc::PopsicleList<string> columnsToGet_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnsToGetList {
      get { return pbc::Lists.AsReadOnly(columnsToGet_); }
    }
    public int ColumnsToGetCount {
      get { return columnsToGet_.Count; }
    }
    public string GetColumnsToGet(int index) {
      return columnsToGet_[index];
    }
    
    public const int TimeRangeFieldNumber = 5;
    private bool hasTimeRange;
    private global::com.alicloud.openservices.tablestore.core.protocol.TimeRange timeRange_;
    public bool HasTimeRange {
      get { return hasTimeRange; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TimeRange TimeRange {
      get { return timeRange_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance; }
    }
    
    public const int MaxVersionsFieldNumber = 6;
    private bool hasMaxVersions;
    private int maxVersions_;
    public bool HasMaxVersions {
      get { return hasMaxVersions; }
    }
    public int MaxVersions {
      get { return maxVersions_; }
    }
    
    public const int CacheBlocksFieldNumber = 7;
    private bool hasCacheBlocks;
    private bool cacheBlocks_ = true;
    public bool HasCacheBlocks {
      get { return hasCacheBlocks; }
    }
    public bool CacheBlocks {
      get { return cacheBlocks_; }
    }
    
    public const int FilterFieldNumber = 8;
    private bool hasFilter;
    private pb::ByteString filter_ = pb::ByteString.Empty;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public pb::ByteString Filter {
      get { return filter_; }
    }
    
    public const int StartColumnFieldNumber = 9;
    private bool hasStartColumn;
    private string startColumn_ = "";
    public bool HasStartColumn {
      get { return hasStartColumn; }
    }
    public string StartColumn {
      get { return startColumn_; }
    }
    
    public const int EndColumnFieldNumber = 10;
    private bool hasEndColumn;
    private string endColumn_ = "";
    public bool HasEndColumn {
      get { return hasEndColumn; }
    }
    public string EndColumn {
      get { return endColumn_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableInBatchGetRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[7], TableName);
      }
      if (primaryKey_.Count > 0) {
        output.WriteBytesArray(2, field_names[5], primaryKey_);
      }
      if (token_.Count > 0) {
        output.WriteBytesArray(3, field_names[9], token_);
      }
      if (columnsToGet_.Count > 0) {
        output.WriteStringArray(4, field_names[1], columnsToGet_);
      }
      if (hasTimeRange) {
        output.WriteMessage(5, field_names[8], TimeRange);
      }
      if (hasMaxVersions) {
        output.WriteInt32(6, field_names[4], MaxVersions);
      }
      if (hasCacheBlocks) {
        output.WriteBool(7, field_names[0], CacheBlocks);
      }
      if (hasFilter) {
        output.WriteBytes(8, field_names[3], Filter);
      }
      if (hasStartColumn) {
        output.WriteString(9, field_names[6], StartColumn);
      }
      if (hasEndColumn) {
        output.WriteString(10, field_names[2], EndColumn);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in PrimaryKeyList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * primaryKey_.Count;
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in TokenList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * token_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in ColumnsToGetList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * columnsToGet_.Count;
      }
      if (hasTimeRange) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, TimeRange);
      }
      if (hasMaxVersions) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, MaxVersions);
      }
      if (hasCacheBlocks) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, CacheBlocks);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeBytesSize(8, Filter);
      }
      if (hasStartColumn) {
        size += pb::CodedOutputStream.ComputeStringSize(9, StartColumn);
      }
      if (hasEndColumn) {
        size += pb::CodedOutputStream.ComputeStringSize(10, EndColumn);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableInBatchGetRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchGetRowRequest MakeReadOnly() {
      primaryKey_.MakeReadOnly();
      token_.MakeReadOnly();
      columnsToGet_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchGetRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchGetRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchGetRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchGetRowRequest result;
      
      private TableInBatchGetRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchGetRowRequest original = result;
          result = new TableInBatchGetRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchGetRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.Descriptor; }
      }
      
      public override TableInBatchGetRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.DefaultInstance; }
      }
      
      public override TableInBatchGetRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchGetRowRequest) {
          return MergeFrom((TableInBatchGetRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchGetRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.primaryKey_.Count != 0) {
          result.primaryKey_.Add(other.primaryKey_);
        }
        if (other.token_.Count != 0) {
          result.token_.Add(other.token_);
        }
        if (other.columnsToGet_.Count != 0) {
          result.columnsToGet_.Add(other.columnsToGet_);
        }
        if (other.HasTimeRange) {
          MergeTimeRange(other.TimeRange);
        }
        if (other.HasMaxVersions) {
          MaxVersions = other.MaxVersions;
        }
        if (other.HasCacheBlocks) {
          CacheBlocks = other.CacheBlocks;
        }
        if (other.HasFilter) {
          Filter = other.Filter;
        }
        if (other.HasStartColumn) {
          StartColumn = other.StartColumn;
        }
        if (other.HasEndColumn) {
          EndColumn = other.EndColumn;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchGetRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchGetRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadBytesArray(tag, field_name, result.primaryKey_);
              break;
            }
            case 26: {
              input.ReadBytesArray(tag, field_name, result.token_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.columnsToGet_);
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.CreateBuilder();
              if (result.hasTimeRange) {
                subBuilder.MergeFrom(TimeRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TimeRange = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              result.hasMaxVersions = input.ReadInt32(ref result.maxVersions_);
              break;
            }
            case 56: {
              result.hasCacheBlocks = input.ReadBool(ref result.cacheBlocks_);
              break;
            }
            case 66: {
              result.hasFilter = input.ReadBytes(ref result.filter_);
              break;
            }
            case 74: {
              result.hasStartColumn = input.ReadString(ref result.startColumn_);
              break;
            }
            case 82: {
              result.hasEndColumn = input.ReadString(ref result.endColumn_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> PrimaryKeyList {
        get { return PrepareBuilder().primaryKey_; }
      }
      public int PrimaryKeyCount {
        get { return result.PrimaryKeyCount; }
      }
      public pb::ByteString GetPrimaryKey(int index) {
        return result.GetPrimaryKey(index);
      }
      public Builder SetPrimaryKey(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_[index] = value;
        return this;
      }
      public Builder AddPrimaryKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.primaryKey_.Add(value);
        return this;
      }
      public Builder AddRangePrimaryKey(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.primaryKey_.Add(values);
        return this;
      }
      public Builder ClearPrimaryKey() {
        PrepareBuilder();
        result.primaryKey_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> TokenList {
        get { return PrepareBuilder().token_; }
      }
      public int TokenCount {
        get { return result.TokenCount; }
      }
      public pb::ByteString GetToken(int index) {
        return result.GetToken(index);
      }
      public Builder SetToken(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.token_[index] = value;
        return this;
      }
      public Builder AddToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.token_.Add(value);
        return this;
      }
      public Builder AddRangeToken(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.token_.Add(values);
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.token_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnsToGetList {
        get { return PrepareBuilder().columnsToGet_; }
      }
      public int ColumnsToGetCount {
        get { return result.ColumnsToGetCount; }
      }
      public string GetColumnsToGet(int index) {
        return result.GetColumnsToGet(index);
      }
      public Builder SetColumnsToGet(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_[index] = value;
        return this;
      }
      public Builder AddColumnsToGet(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_.Add(value);
        return this;
      }
      public Builder AddRangeColumnsToGet(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnsToGet_.Add(values);
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.columnsToGet_.Clear();
        return this;
      }
      
      public bool HasTimeRange {
       get { return result.hasTimeRange; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TimeRange TimeRange {
        get { return result.TimeRange; }
        set { SetTimeRange(value); }
      }
      public Builder SetTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeRange = true;
        result.timeRange_ = value;
        return this;
      }
      public Builder SetTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTimeRange = true;
        result.timeRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTimeRange &&
            result.timeRange_ != global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance) {
            result.timeRange_ = global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.CreateBuilder(result.timeRange_).MergeFrom(value).BuildPartial();
        } else {
          result.timeRange_ = value;
        }
        result.hasTimeRange = true;
        return this;
      }
      public Builder ClearTimeRange() {
        PrepareBuilder();
        result.hasTimeRange = false;
        result.timeRange_ = null;
        return this;
      }
      
      public bool HasMaxVersions {
        get { return result.hasMaxVersions; }
      }
      public int MaxVersions {
        get { return result.MaxVersions; }
        set { SetMaxVersions(value); }
      }
      public Builder SetMaxVersions(int value) {
        PrepareBuilder();
        result.hasMaxVersions = true;
        result.maxVersions_ = value;
        return this;
      }
      public Builder ClearMaxVersions() {
        PrepareBuilder();
        result.hasMaxVersions = false;
        result.maxVersions_ = 0;
        return this;
      }
      
      public bool HasCacheBlocks {
        get { return result.hasCacheBlocks; }
      }
      public bool CacheBlocks {
        get { return result.CacheBlocks; }
        set { SetCacheBlocks(value); }
      }
      public Builder SetCacheBlocks(bool value) {
        PrepareBuilder();
        result.hasCacheBlocks = true;
        result.cacheBlocks_ = value;
        return this;
      }
      public Builder ClearCacheBlocks() {
        PrepareBuilder();
        result.hasCacheBlocks = false;
        result.cacheBlocks_ = true;
        return this;
      }
      
      public bool HasFilter {
        get { return result.hasFilter; }
      }
      public pb::ByteString Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasStartColumn {
        get { return result.hasStartColumn; }
      }
      public string StartColumn {
        get { return result.StartColumn; }
        set { SetStartColumn(value); }
      }
      public Builder SetStartColumn(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStartColumn = true;
        result.startColumn_ = value;
        return this;
      }
      public Builder ClearStartColumn() {
        PrepareBuilder();
        result.hasStartColumn = false;
        result.startColumn_ = "";
        return this;
      }
      
      public bool HasEndColumn {
        get { return result.hasEndColumn; }
      }
      public string EndColumn {
        get { return result.EndColumn; }
        set { SetEndColumn(value); }
      }
      public Builder SetEndColumn(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEndColumn = true;
        result.endColumn_ = value;
        return this;
      }
      public Builder ClearEndColumn() {
        PrepareBuilder();
        result.hasEndColumn = false;
        result.endColumn_ = "";
        return this;
      }
    }
    static TableInBatchGetRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchGetRowRequest : pb::GeneratedMessage<BatchGetRowRequest, BatchGetRowRequest.Builder> {
    private BatchGetRowRequest() { }
    private static readonly BatchGetRowRequest defaultInstance = new BatchGetRowRequest().MakeReadOnly();
    private static readonly string[] _batchGetRowRequestFieldNames = new string[] { "tables" };
    private static readonly uint[] _batchGetRowRequestFieldTags = new uint[] { 10 };
    public static BatchGetRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchGetRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchGetRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchGetRowRequest, BatchGetRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowRequest__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest> tables_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest GetTables(int index) {
      return tables_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _batchGetRowRequestFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest element in TablesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BatchGetRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchGetRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchGetRowRequest MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchGetRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchGetRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchGetRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchGetRowRequest result;
      
      private BatchGetRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchGetRowRequest original = result;
          result = new BatchGetRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchGetRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowRequest.Descriptor; }
      }
      
      public override BatchGetRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowRequest.DefaultInstance; }
      }
      
      public override BatchGetRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchGetRowRequest) {
          return MergeFrom((BatchGetRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchGetRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchGetRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchGetRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowRequest> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
    }
    static BatchGetRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowInBatchGetRowResponse : pb::GeneratedMessage<RowInBatchGetRowResponse, RowInBatchGetRowResponse.Builder> {
    private RowInBatchGetRowResponse() { }
    private static readonly RowInBatchGetRowResponse defaultInstance = new RowInBatchGetRowResponse().MakeReadOnly();
    private static readonly string[] _rowInBatchGetRowResponseFieldNames = new string[] { "consumed", "error", "is_ok", "next_token", "row" };
    private static readonly uint[] _rowInBatchGetRowResponseFieldTags = new uint[] { 26, 18, 8, 42, 34 };
    public static RowInBatchGetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowInBatchGetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowInBatchGetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchGetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowInBatchGetRowResponse, RowInBatchGetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchGetRowResponse__FieldAccessorTable; }
    }
    
    public const int IsOkFieldNumber = 1;
    private bool hasIsOk;
    private bool isOk_;
    public bool HasIsOk {
      get { return hasIsOk; }
    }
    public bool IsOk {
      get { return isOk_; }
    }
    
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private global::com.alicloud.openservices.tablestore.core.protocol.Error error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Error Error {
      get { return error_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Error.DefaultInstance; }
    }
    
    public const int ConsumedFieldNumber = 3;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 4;
    private bool hasRow;
    private pb::ByteString row_ = pb::ByteString.Empty;
    public bool HasRow {
      get { return hasRow; }
    }
    public pb::ByteString Row {
      get { return row_; }
    }
    
    public const int NextTokenFieldNumber = 5;
    private bool hasNextToken;
    private pb::ByteString nextToken_ = pb::ByteString.Empty;
    public bool HasNextToken {
      get { return hasNextToken; }
    }
    public pb::ByteString NextToken {
      get { return nextToken_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsOk) return false;
        if (HasError) {
          if (!Error.IsInitialized) return false;
        }
        if (HasConsumed) {
          if (!Consumed.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rowInBatchGetRowResponseFieldNames;
      if (hasIsOk) {
        output.WriteBool(1, field_names[2], IsOk);
      }
      if (hasError) {
        output.WriteMessage(2, field_names[1], Error);
      }
      if (hasConsumed) {
        output.WriteMessage(3, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteBytes(4, field_names[4], Row);
      }
      if (hasNextToken) {
        output.WriteBytes(5, field_names[3], NextToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIsOk) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, IsOk);
      }
      if (hasError) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Error);
      }
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Consumed);
      }
      if (hasRow) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, Row);
      }
      if (hasNextToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(5, NextToken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RowInBatchGetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowInBatchGetRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowInBatchGetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowInBatchGetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowInBatchGetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowInBatchGetRowResponse result;
      
      private RowInBatchGetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RowInBatchGetRowResponse original = result;
          result = new RowInBatchGetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowInBatchGetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.Descriptor; }
      }
      
      public override RowInBatchGetRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.DefaultInstance; }
      }
      
      public override RowInBatchGetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowInBatchGetRowResponse) {
          return MergeFrom((RowInBatchGetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowInBatchGetRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsOk) {
          IsOk = other.IsOk;
        }
        if (other.HasError) {
          MergeError(other.Error);
        }
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          Row = other.Row;
        }
        if (other.HasNextToken) {
          NextToken = other.NextToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowInBatchGetRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowInBatchGetRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsOk = input.ReadBool(ref result.isOk_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Error.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Error.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasRow = input.ReadBytes(ref result.row_);
              break;
            }
            case 42: {
              result.hasNextToken = input.ReadBytes(ref result.nextToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsOk {
        get { return result.hasIsOk; }
      }
      public bool IsOk {
        get { return result.IsOk; }
        set { SetIsOk(value); }
      }
      public Builder SetIsOk(bool value) {
        PrepareBuilder();
        result.hasIsOk = true;
        result.isOk_ = value;
        return this;
      }
      public Builder ClearIsOk() {
        PrepareBuilder();
        result.hasIsOk = false;
        result.isOk_ = false;
        return this;
      }
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Error Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::com.alicloud.openservices.tablestore.core.protocol.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::com.alicloud.openservices.tablestore.core.protocol.Error.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::com.alicloud.openservices.tablestore.core.protocol.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::com.alicloud.openservices.tablestore.core.protocol.Error.DefaultInstance) {
            result.error_ = global::com.alicloud.openservices.tablestore.core.protocol.Error.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public pb::ByteString Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasNextToken {
        get { return result.hasNextToken; }
      }
      public pb::ByteString NextToken {
        get { return result.NextToken; }
        set { SetNextToken(value); }
      }
      public Builder SetNextToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextToken = true;
        result.nextToken_ = value;
        return this;
      }
      public Builder ClearNextToken() {
        PrepareBuilder();
        result.hasNextToken = false;
        result.nextToken_ = pb::ByteString.Empty;
        return this;
      }
    }
    static RowInBatchGetRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchGetRowResponse : pb::GeneratedMessage<TableInBatchGetRowResponse, TableInBatchGetRowResponse.Builder> {
    private TableInBatchGetRowResponse() { }
    private static readonly TableInBatchGetRowResponse defaultInstance = new TableInBatchGetRowResponse().MakeReadOnly();
    private static readonly string[] _tableInBatchGetRowResponseFieldNames = new string[] { "rows", "table_name" };
    private static readonly uint[] _tableInBatchGetRowResponseFieldTags = new uint[] { 18, 10 };
    public static TableInBatchGetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchGetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchGetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchGetRowResponse, TableInBatchGetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchGetRowResponse__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse> rows_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse> RowsList {
      get { return rows_; }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse GetRows(int index) {
      return rows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse element in RowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableInBatchGetRowResponseFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (rows_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], rows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse element in RowsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableInBatchGetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchGetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchGetRowResponse MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchGetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchGetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchGetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchGetRowResponse result;
      
      private TableInBatchGetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchGetRowResponse original = result;
          result = new TableInBatchGetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchGetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.Descriptor; }
      }
      
      public override TableInBatchGetRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.DefaultInstance; }
      }
      
      public override TableInBatchGetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchGetRowResponse) {
          return MergeFrom((TableInBatchGetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchGetRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchGetRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchGetRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.rows_, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder SetRows(int index, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRows(global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRows(global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchGetRowResponse> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
    }
    static TableInBatchGetRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchGetRowResponse : pb::GeneratedMessage<BatchGetRowResponse, BatchGetRowResponse.Builder> {
    private BatchGetRowResponse() { }
    private static readonly BatchGetRowResponse defaultInstance = new BatchGetRowResponse().MakeReadOnly();
    private static readonly string[] _batchGetRowResponseFieldNames = new string[] { "tables" };
    private static readonly uint[] _batchGetRowResponseFieldTags = new uint[] { 10 };
    public static BatchGetRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchGetRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchGetRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchGetRowResponse, BatchGetRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchGetRowResponse__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse> tables_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse GetTables(int index) {
      return tables_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _batchGetRowResponseFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse element in TablesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BatchGetRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchGetRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchGetRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchGetRowResponse MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchGetRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchGetRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchGetRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchGetRowResponse result;
      
      private BatchGetRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchGetRowResponse original = result;
          result = new BatchGetRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchGetRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowResponse.Descriptor; }
      }
      
      public override BatchGetRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowResponse.DefaultInstance; }
      }
      
      public override BatchGetRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchGetRowResponse) {
          return MergeFrom((BatchGetRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchGetRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.BatchGetRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchGetRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchGetRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchGetRowResponse> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
    }
    static BatchGetRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowInBatchWriteRowRequest : pb::GeneratedMessage<RowInBatchWriteRowRequest, RowInBatchWriteRowRequest.Builder> {
    private RowInBatchWriteRowRequest() { }
    private static readonly RowInBatchWriteRowRequest defaultInstance = new RowInBatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _rowInBatchWriteRowRequestFieldNames = new string[] { "condition", "return_content", "row_change", "type" };
    private static readonly uint[] _rowInBatchWriteRowRequestFieldTags = new uint[] { 26, 34, 18, 8 };
    public static RowInBatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowInBatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowInBatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowInBatchWriteRowRequest, RowInBatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.OperationType type_ = global::com.alicloud.openservices.tablestore.core.protocol.OperationType.PUT;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.OperationType Type {
      get { return type_; }
    }
    
    public const int RowChangeFieldNumber = 2;
    private bool hasRowChange;
    private pb::ByteString rowChange_ = pb::ByteString.Empty;
    public bool HasRowChange {
      get { return hasRowChange; }
    }
    public pb::ByteString RowChange {
      get { return rowChange_; }
    }
    
    public const int ConditionFieldNumber = 3;
    private bool hasCondition;
    private global::com.alicloud.openservices.tablestore.core.protocol.Condition condition_;
    public bool HasCondition {
      get { return hasCondition; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
      get { return condition_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance; }
    }
    
    public const int ReturnContentFieldNumber = 4;
    private bool hasReturnContent;
    private global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent returnContent_;
    public bool HasReturnContent {
      get { return hasReturnContent; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
      get { return returnContent_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasRowChange) return false;
        if (!hasCondition) return false;
        if (!Condition.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rowInBatchWriteRowRequestFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[3], (int) Type, Type);
      }
      if (hasRowChange) {
        output.WriteBytes(2, field_names[2], RowChange);
      }
      if (hasCondition) {
        output.WriteMessage(3, field_names[0], Condition);
      }
      if (hasReturnContent) {
        output.WriteMessage(4, field_names[1], ReturnContent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasRowChange) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, RowChange);
      }
      if (hasCondition) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Condition);
      }
      if (hasReturnContent) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, ReturnContent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RowInBatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowInBatchWriteRowRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowInBatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowInBatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowInBatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowInBatchWriteRowRequest result;
      
      private RowInBatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RowInBatchWriteRowRequest original = result;
          result = new RowInBatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowInBatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.Descriptor; }
      }
      
      public override RowInBatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.DefaultInstance; }
      }
      
      public override RowInBatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowInBatchWriteRowRequest) {
          return MergeFrom((RowInBatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowInBatchWriteRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasRowChange) {
          RowChange = other.RowChange;
        }
        if (other.HasCondition) {
          MergeCondition(other.Condition);
        }
        if (other.HasReturnContent) {
          MergeReturnContent(other.ReturnContent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowInBatchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowInBatchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasRowChange = input.ReadBytes(ref result.rowChange_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder();
              if (result.hasCondition) {
                subBuilder.MergeFrom(Condition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Condition = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder();
              if (result.hasReturnContent) {
                subBuilder.MergeFrom(ReturnContent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReturnContent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.OperationType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.OperationType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.OperationType.PUT;
        return this;
      }
      
      public bool HasRowChange {
        get { return result.hasRowChange; }
      }
      public pb::ByteString RowChange {
        get { return result.RowChange; }
        set { SetRowChange(value); }
      }
      public Builder SetRowChange(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRowChange = true;
        result.rowChange_ = value;
        return this;
      }
      public Builder ClearRowChange() {
        PrepareBuilder();
        result.hasRowChange = false;
        result.rowChange_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasCondition {
       get { return result.hasCondition; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Condition Condition {
        get { return result.Condition; }
        set { SetCondition(value); }
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = value;
        return this;
      }
      public Builder SetCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCondition = true;
        result.condition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCondition(global::com.alicloud.openservices.tablestore.core.protocol.Condition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCondition &&
            result.condition_ != global::com.alicloud.openservices.tablestore.core.protocol.Condition.DefaultInstance) {
            result.condition_ = global::com.alicloud.openservices.tablestore.core.protocol.Condition.CreateBuilder(result.condition_).MergeFrom(value).BuildPartial();
        } else {
          result.condition_ = value;
        }
        result.hasCondition = true;
        return this;
      }
      public Builder ClearCondition() {
        PrepareBuilder();
        result.hasCondition = false;
        result.condition_ = null;
        return this;
      }
      
      public bool HasReturnContent {
       get { return result.hasReturnContent; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent ReturnContent {
        get { return result.ReturnContent; }
        set { SetReturnContent(value); }
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = value;
        return this;
      }
      public Builder SetReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReturnContent = true;
        result.returnContent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReturnContent(global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReturnContent &&
            result.returnContent_ != global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.DefaultInstance) {
            result.returnContent_ = global::com.alicloud.openservices.tablestore.core.protocol.ReturnContent.CreateBuilder(result.returnContent_).MergeFrom(value).BuildPartial();
        } else {
          result.returnContent_ = value;
        }
        result.hasReturnContent = true;
        return this;
      }
      public Builder ClearReturnContent() {
        PrepareBuilder();
        result.hasReturnContent = false;
        result.returnContent_ = null;
        return this;
      }
    }
    static RowInBatchWriteRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchWriteRowRequest : pb::GeneratedMessage<TableInBatchWriteRowRequest, TableInBatchWriteRowRequest.Builder> {
    private TableInBatchWriteRowRequest() { }
    private static readonly TableInBatchWriteRowRequest defaultInstance = new TableInBatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _tableInBatchWriteRowRequestFieldNames = new string[] { "rows", "table_name" };
    private static readonly uint[] _tableInBatchWriteRowRequestFieldTags = new uint[] { 18, 10 };
    public static TableInBatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchWriteRowRequest, TableInBatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest> rows_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest> RowsList {
      get { return rows_; }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest GetRows(int index) {
      return rows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest element in RowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableInBatchWriteRowRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (rows_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], rows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest element in RowsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableInBatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchWriteRowRequest MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchWriteRowRequest result;
      
      private TableInBatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchWriteRowRequest original = result;
          result = new TableInBatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.Descriptor; }
      }
      
      public override TableInBatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.DefaultInstance; }
      }
      
      public override TableInBatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchWriteRowRequest) {
          return MergeFrom((TableInBatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchWriteRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.rows_, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder SetRows(int index, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRows(global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRows(global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowRequest> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
    }
    static TableInBatchWriteRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchWriteRowRequest : pb::GeneratedMessage<BatchWriteRowRequest, BatchWriteRowRequest.Builder> {
    private BatchWriteRowRequest() { }
    private static readonly BatchWriteRowRequest defaultInstance = new BatchWriteRowRequest().MakeReadOnly();
    private static readonly string[] _batchWriteRowRequestFieldNames = new string[] { "tables", "transaction_id" };
    private static readonly uint[] _batchWriteRowRequestFieldTags = new uint[] { 10, 18 };
    public static BatchWriteRowRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchWriteRowRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchWriteRowRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchWriteRowRequest, BatchWriteRowRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowRequest__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest> tables_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest GetTables(int index) {
      return tables_[index];
    }
    
    public const int TransactionIdFieldNumber = 2;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _batchWriteRowRequestFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      if (hasTransactionId) {
        output.WriteString(2, field_names[1], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest element in TablesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BatchWriteRowRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchWriteRowRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchWriteRowRequest MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchWriteRowRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchWriteRowRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchWriteRowRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchWriteRowRequest result;
      
      private BatchWriteRowRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchWriteRowRequest original = result;
          result = new BatchWriteRowRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchWriteRowRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowRequest.Descriptor; }
      }
      
      public override BatchWriteRowRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowRequest.DefaultInstance; }
      }
      
      public override BatchWriteRowRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchWriteRowRequest) {
          return MergeFrom((BatchWriteRowRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchWriteRowRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchWriteRowRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchWriteRowRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowRequest> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static BatchWriteRowRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowInBatchWriteRowResponse : pb::GeneratedMessage<RowInBatchWriteRowResponse, RowInBatchWriteRowResponse.Builder> {
    private RowInBatchWriteRowResponse() { }
    private static readonly RowInBatchWriteRowResponse defaultInstance = new RowInBatchWriteRowResponse().MakeReadOnly();
    private static readonly string[] _rowInBatchWriteRowResponseFieldNames = new string[] { "consumed", "error", "is_ok", "row" };
    private static readonly uint[] _rowInBatchWriteRowResponseFieldTags = new uint[] { 26, 18, 8, 34 };
    public static RowInBatchWriteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowInBatchWriteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowInBatchWriteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowInBatchWriteRowResponse, RowInBatchWriteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowInBatchWriteRowResponse__FieldAccessorTable; }
    }
    
    public const int IsOkFieldNumber = 1;
    private bool hasIsOk;
    private bool isOk_;
    public bool HasIsOk {
      get { return hasIsOk; }
    }
    public bool IsOk {
      get { return isOk_; }
    }
    
    public const int ErrorFieldNumber = 2;
    private bool hasError;
    private global::com.alicloud.openservices.tablestore.core.protocol.Error error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Error Error {
      get { return error_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Error.DefaultInstance; }
    }
    
    public const int ConsumedFieldNumber = 3;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowFieldNumber = 4;
    private bool hasRow;
    private pb::ByteString row_ = pb::ByteString.Empty;
    public bool HasRow {
      get { return hasRow; }
    }
    public pb::ByteString Row {
      get { return row_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIsOk) return false;
        if (HasError) {
          if (!Error.IsInitialized) return false;
        }
        if (HasConsumed) {
          if (!Consumed.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rowInBatchWriteRowResponseFieldNames;
      if (hasIsOk) {
        output.WriteBool(1, field_names[2], IsOk);
      }
      if (hasError) {
        output.WriteMessage(2, field_names[1], Error);
      }
      if (hasConsumed) {
        output.WriteMessage(3, field_names[0], Consumed);
      }
      if (hasRow) {
        output.WriteBytes(4, field_names[3], Row);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIsOk) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, IsOk);
      }
      if (hasError) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Error);
      }
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Consumed);
      }
      if (hasRow) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, Row);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RowInBatchWriteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowInBatchWriteRowResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowInBatchWriteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowInBatchWriteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowInBatchWriteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowInBatchWriteRowResponse result;
      
      private RowInBatchWriteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RowInBatchWriteRowResponse original = result;
          result = new RowInBatchWriteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowInBatchWriteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.Descriptor; }
      }
      
      public override RowInBatchWriteRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.DefaultInstance; }
      }
      
      public override RowInBatchWriteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowInBatchWriteRowResponse) {
          return MergeFrom((RowInBatchWriteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowInBatchWriteRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsOk) {
          IsOk = other.IsOk;
        }
        if (other.HasError) {
          MergeError(other.Error);
        }
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRow) {
          Row = other.Row;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowInBatchWriteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowInBatchWriteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsOk = input.ReadBool(ref result.isOk_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Error.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Error.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasRow = input.ReadBytes(ref result.row_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIsOk {
        get { return result.hasIsOk; }
      }
      public bool IsOk {
        get { return result.IsOk; }
        set { SetIsOk(value); }
      }
      public Builder SetIsOk(bool value) {
        PrepareBuilder();
        result.hasIsOk = true;
        result.isOk_ = value;
        return this;
      }
      public Builder ClearIsOk() {
        PrepareBuilder();
        result.hasIsOk = false;
        result.isOk_ = false;
        return this;
      }
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Error Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::com.alicloud.openservices.tablestore.core.protocol.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::com.alicloud.openservices.tablestore.core.protocol.Error.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::com.alicloud.openservices.tablestore.core.protocol.Error value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::com.alicloud.openservices.tablestore.core.protocol.Error.DefaultInstance) {
            result.error_ = global::com.alicloud.openservices.tablestore.core.protocol.Error.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRow {
        get { return result.hasRow; }
      }
      public pb::ByteString Row {
        get { return result.Row; }
        set { SetRow(value); }
      }
      public Builder SetRow(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRow = true;
        result.row_ = value;
        return this;
      }
      public Builder ClearRow() {
        PrepareBuilder();
        result.hasRow = false;
        result.row_ = pb::ByteString.Empty;
        return this;
      }
    }
    static RowInBatchWriteRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TableInBatchWriteRowResponse : pb::GeneratedMessage<TableInBatchWriteRowResponse, TableInBatchWriteRowResponse.Builder> {
    private TableInBatchWriteRowResponse() { }
    private static readonly TableInBatchWriteRowResponse defaultInstance = new TableInBatchWriteRowResponse().MakeReadOnly();
    private static readonly string[] _tableInBatchWriteRowResponseFieldNames = new string[] { "rows", "table_name" };
    private static readonly uint[] _tableInBatchWriteRowResponseFieldTags = new uint[] { 18, 10 };
    public static TableInBatchWriteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TableInBatchWriteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TableInBatchWriteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TableInBatchWriteRowResponse, TableInBatchWriteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_TableInBatchWriteRowResponse__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse> rows_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse> RowsList {
      get { return rows_; }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse GetRows(int index) {
      return rows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse element in RowsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tableInBatchWriteRowResponseFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (rows_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], rows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse element in RowsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TableInBatchWriteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TableInBatchWriteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TableInBatchWriteRowResponse MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TableInBatchWriteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TableInBatchWriteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TableInBatchWriteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TableInBatchWriteRowResponse result;
      
      private TableInBatchWriteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          TableInBatchWriteRowResponse original = result;
          result = new TableInBatchWriteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TableInBatchWriteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.Descriptor; }
      }
      
      public override TableInBatchWriteRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.DefaultInstance; }
      }
      
      public override TableInBatchWriteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TableInBatchWriteRowResponse) {
          return MergeFrom((TableInBatchWriteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TableInBatchWriteRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tableInBatchWriteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tableInBatchWriteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.rows_, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder SetRows(int index, global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRows(global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRows(global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.RowInBatchWriteRowResponse> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
    }
    static TableInBatchWriteRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BatchWriteRowResponse : pb::GeneratedMessage<BatchWriteRowResponse, BatchWriteRowResponse.Builder> {
    private BatchWriteRowResponse() { }
    private static readonly BatchWriteRowResponse defaultInstance = new BatchWriteRowResponse().MakeReadOnly();
    private static readonly string[] _batchWriteRowResponseFieldNames = new string[] { "tables" };
    private static readonly uint[] _batchWriteRowResponseFieldTags = new uint[] { 10 };
    public static BatchWriteRowResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BatchWriteRowResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BatchWriteRowResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BatchWriteRowResponse, BatchWriteRowResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_BatchWriteRowResponse__FieldAccessorTable; }
    }
    
    public const int TablesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse> tables_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse> TablesList {
      get { return tables_; }
    }
    public int TablesCount {
      get { return tables_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse GetTables(int index) {
      return tables_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse element in TablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _batchWriteRowResponseFieldNames;
      if (tables_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse element in TablesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BatchWriteRowResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BatchWriteRowResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BatchWriteRowResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BatchWriteRowResponse MakeReadOnly() {
      tables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BatchWriteRowResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BatchWriteRowResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BatchWriteRowResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BatchWriteRowResponse result;
      
      private BatchWriteRowResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BatchWriteRowResponse original = result;
          result = new BatchWriteRowResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BatchWriteRowResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowResponse.Descriptor; }
      }
      
      public override BatchWriteRowResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowResponse.DefaultInstance; }
      }
      
      public override BatchWriteRowResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BatchWriteRowResponse) {
          return MergeFrom((BatchWriteRowResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BatchWriteRowResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.BatchWriteRowResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tables_.Count != 0) {
          result.tables_.Add(other.tables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_batchWriteRowResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _batchWriteRowResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tables_, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse> TablesList {
        get { return PrepareBuilder().tables_; }
      }
      public int TablesCount {
        get { return result.TablesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse GetTables(int index) {
        return result.GetTables(index);
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_[index] = value;
        return this;
      }
      public Builder SetTables(int index, global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tables_.Add(value);
        return this;
      }
      public Builder AddTables(global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTables(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.TableInBatchWriteRowResponse> values) {
        PrepareBuilder();
        result.tables_.Add(values);
        return this;
      }
      public Builder ClearTables() {
        PrepareBuilder();
        result.tables_.Clear();
        return this;
      }
    }
    static BatchWriteRowResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRangeRequest : pb::GeneratedMessage<GetRangeRequest, GetRangeRequest.Builder> {
    private GetRangeRequest() { }
    private static readonly GetRangeRequest defaultInstance = new GetRangeRequest().MakeReadOnly();
    private static readonly string[] _getRangeRequestFieldNames = new string[] { "cache_blocks", "columns_to_get", "compress_type_hint", "data_block_type_hint", "direction", "end_column", "exclusive_end_primary_key", "filter", "inclusive_start_primary_key", "limit", "max_versions", "return_entire_primary_keys", "start_column", "table_name", "time_range", "token", "transaction_id" };
    private static readonly uint[] _getRangeRequestFieldTags = new uint[] { 72, 26, 136, 120, 16, 98, 66, 82, 58, 48, 40, 128, 90, 10, 34, 106, 114 };
    public static GetRangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRangeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRangeRequest, GetRangeRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int DirectionFieldNumber = 2;
    private bool hasDirection;
    private global::com.alicloud.openservices.tablestore.core.protocol.Direction direction_ = global::com.alicloud.openservices.tablestore.core.protocol.Direction.FORWARD;
    public bool HasDirection {
      get { return hasDirection; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Direction Direction {
      get { return direction_; }
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private pbc::PopsicleList<string> columnsToGet_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnsToGetList {
      get { return pbc::Lists.AsReadOnly(columnsToGet_); }
    }
    public int ColumnsToGetCount {
      get { return columnsToGet_.Count; }
    }
    public string GetColumnsToGet(int index) {
      return columnsToGet_[index];
    }
    
    public const int TimeRangeFieldNumber = 4;
    private bool hasTimeRange;
    private global::com.alicloud.openservices.tablestore.core.protocol.TimeRange timeRange_;
    public bool HasTimeRange {
      get { return hasTimeRange; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.TimeRange TimeRange {
      get { return timeRange_ ?? global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance; }
    }
    
    public const int MaxVersionsFieldNumber = 5;
    private bool hasMaxVersions;
    private int maxVersions_;
    public bool HasMaxVersions {
      get { return hasMaxVersions; }
    }
    public int MaxVersions {
      get { return maxVersions_; }
    }
    
    public const int LimitFieldNumber = 6;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public const int InclusiveStartPrimaryKeyFieldNumber = 7;
    private bool hasInclusiveStartPrimaryKey;
    private pb::ByteString inclusiveStartPrimaryKey_ = pb::ByteString.Empty;
    public bool HasInclusiveStartPrimaryKey {
      get { return hasInclusiveStartPrimaryKey; }
    }
    public pb::ByteString InclusiveStartPrimaryKey {
      get { return inclusiveStartPrimaryKey_; }
    }
    
    public const int ExclusiveEndPrimaryKeyFieldNumber = 8;
    private bool hasExclusiveEndPrimaryKey;
    private pb::ByteString exclusiveEndPrimaryKey_ = pb::ByteString.Empty;
    public bool HasExclusiveEndPrimaryKey {
      get { return hasExclusiveEndPrimaryKey; }
    }
    public pb::ByteString ExclusiveEndPrimaryKey {
      get { return exclusiveEndPrimaryKey_; }
    }
    
    public const int CacheBlocksFieldNumber = 9;
    private bool hasCacheBlocks;
    private bool cacheBlocks_ = true;
    public bool HasCacheBlocks {
      get { return hasCacheBlocks; }
    }
    public bool CacheBlocks {
      get { return cacheBlocks_; }
    }
    
    public const int FilterFieldNumber = 10;
    private bool hasFilter;
    private pb::ByteString filter_ = pb::ByteString.Empty;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public pb::ByteString Filter {
      get { return filter_; }
    }
    
    public const int StartColumnFieldNumber = 11;
    private bool hasStartColumn;
    private string startColumn_ = "";
    public bool HasStartColumn {
      get { return hasStartColumn; }
    }
    public string StartColumn {
      get { return startColumn_; }
    }
    
    public const int EndColumnFieldNumber = 12;
    private bool hasEndColumn;
    private string endColumn_ = "";
    public bool HasEndColumn {
      get { return hasEndColumn; }
    }
    public string EndColumn {
      get { return endColumn_; }
    }
    
    public const int TokenFieldNumber = 13;
    private bool hasToken;
    private pb::ByteString token_ = pb::ByteString.Empty;
    public bool HasToken {
      get { return hasToken; }
    }
    public pb::ByteString Token {
      get { return token_; }
    }
    
    public const int TransactionIdFieldNumber = 14;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public const int DataBlockTypeHintFieldNumber = 15;
    private bool hasDataBlockTypeHint;
    private global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType dataBlockTypeHint_ = global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType.DBT_PLAIN_BUFFER;
    public bool HasDataBlockTypeHint {
      get { return hasDataBlockTypeHint; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType DataBlockTypeHint {
      get { return dataBlockTypeHint_; }
    }
    
    public const int ReturnEntirePrimaryKeysFieldNumber = 16;
    private bool hasReturnEntirePrimaryKeys;
    private bool returnEntirePrimaryKeys_ = true;
    public bool HasReturnEntirePrimaryKeys {
      get { return hasReturnEntirePrimaryKeys; }
    }
    public bool ReturnEntirePrimaryKeys {
      get { return returnEntirePrimaryKeys_; }
    }
    
    public const int CompressTypeHintFieldNumber = 17;
    private bool hasCompressTypeHint;
    private global::com.alicloud.openservices.tablestore.core.protocol.CompressType compressTypeHint_ = global::com.alicloud.openservices.tablestore.core.protocol.CompressType.CPT_NONE;
    public bool HasCompressTypeHint {
      get { return hasCompressTypeHint; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.CompressType CompressTypeHint {
      get { return compressTypeHint_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasDirection) return false;
        if (!hasInclusiveStartPrimaryKey) return false;
        if (!hasExclusiveEndPrimaryKey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRangeRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[13], TableName);
      }
      if (hasDirection) {
        output.WriteEnum(2, field_names[4], (int) Direction, Direction);
      }
      if (columnsToGet_.Count > 0) {
        output.WriteStringArray(3, field_names[1], columnsToGet_);
      }
      if (hasTimeRange) {
        output.WriteMessage(4, field_names[14], TimeRange);
      }
      if (hasMaxVersions) {
        output.WriteInt32(5, field_names[10], MaxVersions);
      }
      if (hasLimit) {
        output.WriteInt32(6, field_names[9], Limit);
      }
      if (hasInclusiveStartPrimaryKey) {
        output.WriteBytes(7, field_names[8], InclusiveStartPrimaryKey);
      }
      if (hasExclusiveEndPrimaryKey) {
        output.WriteBytes(8, field_names[6], ExclusiveEndPrimaryKey);
      }
      if (hasCacheBlocks) {
        output.WriteBool(9, field_names[0], CacheBlocks);
      }
      if (hasFilter) {
        output.WriteBytes(10, field_names[7], Filter);
      }
      if (hasStartColumn) {
        output.WriteString(11, field_names[12], StartColumn);
      }
      if (hasEndColumn) {
        output.WriteString(12, field_names[5], EndColumn);
      }
      if (hasToken) {
        output.WriteBytes(13, field_names[15], Token);
      }
      if (hasTransactionId) {
        output.WriteString(14, field_names[16], TransactionId);
      }
      if (hasDataBlockTypeHint) {
        output.WriteEnum(15, field_names[3], (int) DataBlockTypeHint, DataBlockTypeHint);
      }
      if (hasReturnEntirePrimaryKeys) {
        output.WriteBool(16, field_names[11], ReturnEntirePrimaryKeys);
      }
      if (hasCompressTypeHint) {
        output.WriteEnum(17, field_names[2], (int) CompressTypeHint, CompressTypeHint);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasDirection) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Direction);
      }
      {
        int dataSize = 0;
        foreach (string element in ColumnsToGetList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * columnsToGet_.Count;
      }
      if (hasTimeRange) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, TimeRange);
      }
      if (hasMaxVersions) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, MaxVersions);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Limit);
      }
      if (hasInclusiveStartPrimaryKey) {
        size += pb::CodedOutputStream.ComputeBytesSize(7, InclusiveStartPrimaryKey);
      }
      if (hasExclusiveEndPrimaryKey) {
        size += pb::CodedOutputStream.ComputeBytesSize(8, ExclusiveEndPrimaryKey);
      }
      if (hasCacheBlocks) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, CacheBlocks);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeBytesSize(10, Filter);
      }
      if (hasStartColumn) {
        size += pb::CodedOutputStream.ComputeStringSize(11, StartColumn);
      }
      if (hasEndColumn) {
        size += pb::CodedOutputStream.ComputeStringSize(12, EndColumn);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(13, Token);
      }
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(14, TransactionId);
      }
      if (hasDataBlockTypeHint) {
        size += pb::CodedOutputStream.ComputeEnumSize(15, (int) DataBlockTypeHint);
      }
      if (hasReturnEntirePrimaryKeys) {
        size += pb::CodedOutputStream.ComputeBoolSize(16, ReturnEntirePrimaryKeys);
      }
      if (hasCompressTypeHint) {
        size += pb::CodedOutputStream.ComputeEnumSize(17, (int) CompressTypeHint);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRangeRequest MakeReadOnly() {
      columnsToGet_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRangeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRangeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRangeRequest result;
      
      private GetRangeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRangeRequest original = result;
          result = new GetRangeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRangeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRangeRequest.Descriptor; }
      }
      
      public override GetRangeRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRangeRequest.DefaultInstance; }
      }
      
      public override GetRangeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRangeRequest) {
          return MergeFrom((GetRangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRangeRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetRangeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasDirection) {
          Direction = other.Direction;
        }
        if (other.columnsToGet_.Count != 0) {
          result.columnsToGet_.Add(other.columnsToGet_);
        }
        if (other.HasTimeRange) {
          MergeTimeRange(other.TimeRange);
        }
        if (other.HasMaxVersions) {
          MaxVersions = other.MaxVersions;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        if (other.HasInclusiveStartPrimaryKey) {
          InclusiveStartPrimaryKey = other.InclusiveStartPrimaryKey;
        }
        if (other.HasExclusiveEndPrimaryKey) {
          ExclusiveEndPrimaryKey = other.ExclusiveEndPrimaryKey;
        }
        if (other.HasCacheBlocks) {
          CacheBlocks = other.CacheBlocks;
        }
        if (other.HasFilter) {
          Filter = other.Filter;
        }
        if (other.HasStartColumn) {
          StartColumn = other.StartColumn;
        }
        if (other.HasEndColumn) {
          EndColumn = other.EndColumn;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        if (other.HasDataBlockTypeHint) {
          DataBlockTypeHint = other.DataBlockTypeHint;
        }
        if (other.HasReturnEntirePrimaryKeys) {
          ReturnEntirePrimaryKeys = other.ReturnEntirePrimaryKeys;
        }
        if (other.HasCompressTypeHint) {
          CompressTypeHint = other.CompressTypeHint;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRangeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRangeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.direction_, out unknown)) {
                result.hasDirection = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.columnsToGet_);
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.CreateBuilder();
              if (result.hasTimeRange) {
                subBuilder.MergeFrom(TimeRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TimeRange = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasMaxVersions = input.ReadInt32(ref result.maxVersions_);
              break;
            }
            case 48: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
            case 58: {
              result.hasInclusiveStartPrimaryKey = input.ReadBytes(ref result.inclusiveStartPrimaryKey_);
              break;
            }
            case 66: {
              result.hasExclusiveEndPrimaryKey = input.ReadBytes(ref result.exclusiveEndPrimaryKey_);
              break;
            }
            case 72: {
              result.hasCacheBlocks = input.ReadBool(ref result.cacheBlocks_);
              break;
            }
            case 82: {
              result.hasFilter = input.ReadBytes(ref result.filter_);
              break;
            }
            case 90: {
              result.hasStartColumn = input.ReadString(ref result.startColumn_);
              break;
            }
            case 98: {
              result.hasEndColumn = input.ReadString(ref result.endColumn_);
              break;
            }
            case 106: {
              result.hasToken = input.ReadBytes(ref result.token_);
              break;
            }
            case 114: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
            case 120: {
              object unknown;
              if(input.ReadEnum(ref result.dataBlockTypeHint_, out unknown)) {
                result.hasDataBlockTypeHint = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(15, (ulong)(int)unknown);
              }
              break;
            }
            case 128: {
              result.hasReturnEntirePrimaryKeys = input.ReadBool(ref result.returnEntirePrimaryKeys_);
              break;
            }
            case 136: {
              object unknown;
              if(input.ReadEnum(ref result.compressTypeHint_, out unknown)) {
                result.hasCompressTypeHint = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(17, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasDirection {
       get { return result.hasDirection; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Direction Direction {
        get { return result.Direction; }
        set { SetDirection(value); }
      }
      public Builder SetDirection(global::com.alicloud.openservices.tablestore.core.protocol.Direction value) {
        PrepareBuilder();
        result.hasDirection = true;
        result.direction_ = value;
        return this;
      }
      public Builder ClearDirection() {
        PrepareBuilder();
        result.hasDirection = false;
        result.direction_ = global::com.alicloud.openservices.tablestore.core.protocol.Direction.FORWARD;
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnsToGetList {
        get { return PrepareBuilder().columnsToGet_; }
      }
      public int ColumnsToGetCount {
        get { return result.ColumnsToGetCount; }
      }
      public string GetColumnsToGet(int index) {
        return result.GetColumnsToGet(index);
      }
      public Builder SetColumnsToGet(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_[index] = value;
        return this;
      }
      public Builder AddColumnsToGet(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnsToGet_.Add(value);
        return this;
      }
      public Builder AddRangeColumnsToGet(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnsToGet_.Add(values);
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.columnsToGet_.Clear();
        return this;
      }
      
      public bool HasTimeRange {
       get { return result.hasTimeRange; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.TimeRange TimeRange {
        get { return result.TimeRange; }
        set { SetTimeRange(value); }
      }
      public Builder SetTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeRange = true;
        result.timeRange_ = value;
        return this;
      }
      public Builder SetTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTimeRange = true;
        result.timeRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTimeRange(global::com.alicloud.openservices.tablestore.core.protocol.TimeRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTimeRange &&
            result.timeRange_ != global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.DefaultInstance) {
            result.timeRange_ = global::com.alicloud.openservices.tablestore.core.protocol.TimeRange.CreateBuilder(result.timeRange_).MergeFrom(value).BuildPartial();
        } else {
          result.timeRange_ = value;
        }
        result.hasTimeRange = true;
        return this;
      }
      public Builder ClearTimeRange() {
        PrepareBuilder();
        result.hasTimeRange = false;
        result.timeRange_ = null;
        return this;
      }
      
      public bool HasMaxVersions {
        get { return result.hasMaxVersions; }
      }
      public int MaxVersions {
        get { return result.MaxVersions; }
        set { SetMaxVersions(value); }
      }
      public Builder SetMaxVersions(int value) {
        PrepareBuilder();
        result.hasMaxVersions = true;
        result.maxVersions_ = value;
        return this;
      }
      public Builder ClearMaxVersions() {
        PrepareBuilder();
        result.hasMaxVersions = false;
        result.maxVersions_ = 0;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      public bool HasInclusiveStartPrimaryKey {
        get { return result.hasInclusiveStartPrimaryKey; }
      }
      public pb::ByteString InclusiveStartPrimaryKey {
        get { return result.InclusiveStartPrimaryKey; }
        set { SetInclusiveStartPrimaryKey(value); }
      }
      public Builder SetInclusiveStartPrimaryKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInclusiveStartPrimaryKey = true;
        result.inclusiveStartPrimaryKey_ = value;
        return this;
      }
      public Builder ClearInclusiveStartPrimaryKey() {
        PrepareBuilder();
        result.hasInclusiveStartPrimaryKey = false;
        result.inclusiveStartPrimaryKey_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasExclusiveEndPrimaryKey {
        get { return result.hasExclusiveEndPrimaryKey; }
      }
      public pb::ByteString ExclusiveEndPrimaryKey {
        get { return result.ExclusiveEndPrimaryKey; }
        set { SetExclusiveEndPrimaryKey(value); }
      }
      public Builder SetExclusiveEndPrimaryKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExclusiveEndPrimaryKey = true;
        result.exclusiveEndPrimaryKey_ = value;
        return this;
      }
      public Builder ClearExclusiveEndPrimaryKey() {
        PrepareBuilder();
        result.hasExclusiveEndPrimaryKey = false;
        result.exclusiveEndPrimaryKey_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasCacheBlocks {
        get { return result.hasCacheBlocks; }
      }
      public bool CacheBlocks {
        get { return result.CacheBlocks; }
        set { SetCacheBlocks(value); }
      }
      public Builder SetCacheBlocks(bool value) {
        PrepareBuilder();
        result.hasCacheBlocks = true;
        result.cacheBlocks_ = value;
        return this;
      }
      public Builder ClearCacheBlocks() {
        PrepareBuilder();
        result.hasCacheBlocks = false;
        result.cacheBlocks_ = true;
        return this;
      }
      
      public bool HasFilter {
        get { return result.hasFilter; }
      }
      public pb::ByteString Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasStartColumn {
        get { return result.hasStartColumn; }
      }
      public string StartColumn {
        get { return result.StartColumn; }
        set { SetStartColumn(value); }
      }
      public Builder SetStartColumn(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStartColumn = true;
        result.startColumn_ = value;
        return this;
      }
      public Builder ClearStartColumn() {
        PrepareBuilder();
        result.hasStartColumn = false;
        result.startColumn_ = "";
        return this;
      }
      
      public bool HasEndColumn {
        get { return result.hasEndColumn; }
      }
      public string EndColumn {
        get { return result.EndColumn; }
        set { SetEndColumn(value); }
      }
      public Builder SetEndColumn(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEndColumn = true;
        result.endColumn_ = value;
        return this;
      }
      public Builder ClearEndColumn() {
        PrepareBuilder();
        result.hasEndColumn = false;
        result.endColumn_ = "";
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public pb::ByteString Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
      
      public bool HasDataBlockTypeHint {
       get { return result.hasDataBlockTypeHint; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType DataBlockTypeHint {
        get { return result.DataBlockTypeHint; }
        set { SetDataBlockTypeHint(value); }
      }
      public Builder SetDataBlockTypeHint(global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType value) {
        PrepareBuilder();
        result.hasDataBlockTypeHint = true;
        result.dataBlockTypeHint_ = value;
        return this;
      }
      public Builder ClearDataBlockTypeHint() {
        PrepareBuilder();
        result.hasDataBlockTypeHint = false;
        result.dataBlockTypeHint_ = global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType.DBT_PLAIN_BUFFER;
        return this;
      }
      
      public bool HasReturnEntirePrimaryKeys {
        get { return result.hasReturnEntirePrimaryKeys; }
      }
      public bool ReturnEntirePrimaryKeys {
        get { return result.ReturnEntirePrimaryKeys; }
        set { SetReturnEntirePrimaryKeys(value); }
      }
      public Builder SetReturnEntirePrimaryKeys(bool value) {
        PrepareBuilder();
        result.hasReturnEntirePrimaryKeys = true;
        result.returnEntirePrimaryKeys_ = value;
        return this;
      }
      public Builder ClearReturnEntirePrimaryKeys() {
        PrepareBuilder();
        result.hasReturnEntirePrimaryKeys = false;
        result.returnEntirePrimaryKeys_ = true;
        return this;
      }
      
      public bool HasCompressTypeHint {
       get { return result.hasCompressTypeHint; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.CompressType CompressTypeHint {
        get { return result.CompressTypeHint; }
        set { SetCompressTypeHint(value); }
      }
      public Builder SetCompressTypeHint(global::com.alicloud.openservices.tablestore.core.protocol.CompressType value) {
        PrepareBuilder();
        result.hasCompressTypeHint = true;
        result.compressTypeHint_ = value;
        return this;
      }
      public Builder ClearCompressTypeHint() {
        PrepareBuilder();
        result.hasCompressTypeHint = false;
        result.compressTypeHint_ = global::com.alicloud.openservices.tablestore.core.protocol.CompressType.CPT_NONE;
        return this;
      }
    }
    static GetRangeRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetRangeResponse : pb::GeneratedMessage<GetRangeResponse, GetRangeResponse.Builder> {
    private GetRangeResponse() { }
    private static readonly GetRangeResponse defaultInstance = new GetRangeResponse().MakeReadOnly();
    private static readonly string[] _getRangeResponseFieldNames = new string[] { "compress_type", "consumed", "data_block_type", "next_start_primary_key", "next_token", "rows" };
    private static readonly uint[] _getRangeResponseFieldTags = new uint[] { 48, 10, 40, 26, 34, 18 };
    public static GetRangeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetRangeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetRangeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetRangeResponse, GetRangeResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetRangeResponse__FieldAccessorTable; }
    }
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int RowsFieldNumber = 2;
    private bool hasRows;
    private pb::ByteString rows_ = pb::ByteString.Empty;
    public bool HasRows {
      get { return hasRows; }
    }
    public pb::ByteString Rows {
      get { return rows_; }
    }
    
    public const int NextStartPrimaryKeyFieldNumber = 3;
    private bool hasNextStartPrimaryKey;
    private pb::ByteString nextStartPrimaryKey_ = pb::ByteString.Empty;
    public bool HasNextStartPrimaryKey {
      get { return hasNextStartPrimaryKey; }
    }
    public pb::ByteString NextStartPrimaryKey {
      get { return nextStartPrimaryKey_; }
    }
    
    public const int NextTokenFieldNumber = 4;
    private bool hasNextToken;
    private pb::ByteString nextToken_ = pb::ByteString.Empty;
    public bool HasNextToken {
      get { return hasNextToken; }
    }
    public pb::ByteString NextToken {
      get { return nextToken_; }
    }
    
    public const int DataBlockTypeFieldNumber = 5;
    private bool hasDataBlockType;
    private global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType dataBlockType_ = global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType.DBT_PLAIN_BUFFER;
    public bool HasDataBlockType {
      get { return hasDataBlockType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType DataBlockType {
      get { return dataBlockType_; }
    }
    
    public const int CompressTypeFieldNumber = 6;
    private bool hasCompressType;
    private global::com.alicloud.openservices.tablestore.core.protocol.CompressType compressType_ = global::com.alicloud.openservices.tablestore.core.protocol.CompressType.CPT_NONE;
    public bool HasCompressType {
      get { return hasCompressType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.CompressType CompressType {
      get { return compressType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!hasRows) return false;
        if (!Consumed.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getRangeResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[1], Consumed);
      }
      if (hasRows) {
        output.WriteBytes(2, field_names[5], Rows);
      }
      if (hasNextStartPrimaryKey) {
        output.WriteBytes(3, field_names[3], NextStartPrimaryKey);
      }
      if (hasNextToken) {
        output.WriteBytes(4, field_names[4], NextToken);
      }
      if (hasDataBlockType) {
        output.WriteEnum(5, field_names[2], (int) DataBlockType, DataBlockType);
      }
      if (hasCompressType) {
        output.WriteEnum(6, field_names[0], (int) CompressType, CompressType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
      }
      if (hasRows) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Rows);
      }
      if (hasNextStartPrimaryKey) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, NextStartPrimaryKey);
      }
      if (hasNextToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, NextToken);
      }
      if (hasDataBlockType) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) DataBlockType);
      }
      if (hasCompressType) {
        size += pb::CodedOutputStream.ComputeEnumSize(6, (int) CompressType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetRangeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetRangeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetRangeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetRangeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetRangeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetRangeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetRangeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetRangeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetRangeResponse result;
      
      private GetRangeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetRangeResponse original = result;
          result = new GetRangeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetRangeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRangeResponse.Descriptor; }
      }
      
      public override GetRangeResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetRangeResponse.DefaultInstance; }
      }
      
      public override GetRangeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetRangeResponse) {
          return MergeFrom((GetRangeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetRangeResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetRangeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.HasRows) {
          Rows = other.Rows;
        }
        if (other.HasNextStartPrimaryKey) {
          NextStartPrimaryKey = other.NextStartPrimaryKey;
        }
        if (other.HasNextToken) {
          NextToken = other.NextToken;
        }
        if (other.HasDataBlockType) {
          DataBlockType = other.DataBlockType;
        }
        if (other.HasCompressType) {
          CompressType = other.CompressType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getRangeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getRangeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasRows = input.ReadBytes(ref result.rows_);
              break;
            }
            case 26: {
              result.hasNextStartPrimaryKey = input.ReadBytes(ref result.nextStartPrimaryKey_);
              break;
            }
            case 34: {
              result.hasNextToken = input.ReadBytes(ref result.nextToken_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.dataBlockType_, out unknown)) {
                result.hasDataBlockType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.compressType_, out unknown)) {
                result.hasCompressType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public bool HasRows {
        get { return result.hasRows; }
      }
      public pb::ByteString Rows {
        get { return result.Rows; }
        set { SetRows(value); }
      }
      public Builder SetRows(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRows = true;
        result.rows_ = value;
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.hasRows = false;
        result.rows_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasNextStartPrimaryKey {
        get { return result.hasNextStartPrimaryKey; }
      }
      public pb::ByteString NextStartPrimaryKey {
        get { return result.NextStartPrimaryKey; }
        set { SetNextStartPrimaryKey(value); }
      }
      public Builder SetNextStartPrimaryKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextStartPrimaryKey = true;
        result.nextStartPrimaryKey_ = value;
        return this;
      }
      public Builder ClearNextStartPrimaryKey() {
        PrepareBuilder();
        result.hasNextStartPrimaryKey = false;
        result.nextStartPrimaryKey_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasNextToken {
        get { return result.hasNextToken; }
      }
      public pb::ByteString NextToken {
        get { return result.NextToken; }
        set { SetNextToken(value); }
      }
      public Builder SetNextToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextToken = true;
        result.nextToken_ = value;
        return this;
      }
      public Builder ClearNextToken() {
        PrepareBuilder();
        result.hasNextToken = false;
        result.nextToken_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasDataBlockType {
       get { return result.hasDataBlockType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType DataBlockType {
        get { return result.DataBlockType; }
        set { SetDataBlockType(value); }
      }
      public Builder SetDataBlockType(global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType value) {
        PrepareBuilder();
        result.hasDataBlockType = true;
        result.dataBlockType_ = value;
        return this;
      }
      public Builder ClearDataBlockType() {
        PrepareBuilder();
        result.hasDataBlockType = false;
        result.dataBlockType_ = global::com.alicloud.openservices.tablestore.core.protocol.DataBlockType.DBT_PLAIN_BUFFER;
        return this;
      }
      
      public bool HasCompressType {
       get { return result.hasCompressType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.CompressType CompressType {
        get { return result.CompressType; }
        set { SetCompressType(value); }
      }
      public Builder SetCompressType(global::com.alicloud.openservices.tablestore.core.protocol.CompressType value) {
        PrepareBuilder();
        result.hasCompressType = true;
        result.compressType_ = value;
        return this;
      }
      public Builder ClearCompressType() {
        PrepareBuilder();
        result.hasCompressType = false;
        result.compressType_ = global::com.alicloud.openservices.tablestore.core.protocol.CompressType.CPT_NONE;
        return this;
      }
    }
    static GetRangeResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StartLocalTransactionRequest : pb::GeneratedMessage<StartLocalTransactionRequest, StartLocalTransactionRequest.Builder> {
    private StartLocalTransactionRequest() { }
    private static readonly StartLocalTransactionRequest defaultInstance = new StartLocalTransactionRequest().MakeReadOnly();
    private static readonly string[] _startLocalTransactionRequestFieldNames = new string[] { "key", "table_name" };
    private static readonly uint[] _startLocalTransactionRequestFieldTags = new uint[] { 18, 10 };
    public static StartLocalTransactionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StartLocalTransactionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StartLocalTransactionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StartLocalTransactionRequest, StartLocalTransactionRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int KeyFieldNumber = 2;
    private bool hasKey;
    private pb::ByteString key_ = pb::ByteString.Empty;
    public bool HasKey {
      get { return hasKey; }
    }
    public pb::ByteString Key {
      get { return key_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasKey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _startLocalTransactionRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasKey) {
        output.WriteBytes(2, field_names[0], Key);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasKey) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Key);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StartLocalTransactionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartLocalTransactionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StartLocalTransactionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StartLocalTransactionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StartLocalTransactionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StartLocalTransactionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StartLocalTransactionRequest result;
      
      private StartLocalTransactionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          StartLocalTransactionRequest original = result;
          result = new StartLocalTransactionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StartLocalTransactionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionRequest.Descriptor; }
      }
      
      public override StartLocalTransactionRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionRequest.DefaultInstance; }
      }
      
      public override StartLocalTransactionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StartLocalTransactionRequest) {
          return MergeFrom((StartLocalTransactionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StartLocalTransactionRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasKey) {
          Key = other.Key;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_startLocalTransactionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _startLocalTransactionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasKey = input.ReadBytes(ref result.key_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public pb::ByteString Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = pb::ByteString.Empty;
        return this;
      }
    }
    static StartLocalTransactionRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StartLocalTransactionResponse : pb::GeneratedMessage<StartLocalTransactionResponse, StartLocalTransactionResponse.Builder> {
    private StartLocalTransactionResponse() { }
    private static readonly StartLocalTransactionResponse defaultInstance = new StartLocalTransactionResponse().MakeReadOnly();
    private static readonly string[] _startLocalTransactionResponseFieldNames = new string[] { "transaction_id" };
    private static readonly uint[] _startLocalTransactionResponseFieldTags = new uint[] { 10 };
    public static StartLocalTransactionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StartLocalTransactionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StartLocalTransactionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StartLocalTransactionResponse, StartLocalTransactionResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StartLocalTransactionResponse__FieldAccessorTable; }
    }
    
    public const int TransactionIdFieldNumber = 1;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTransactionId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _startLocalTransactionResponseFieldNames;
      if (hasTransactionId) {
        output.WriteString(1, field_names[0], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StartLocalTransactionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StartLocalTransactionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StartLocalTransactionResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StartLocalTransactionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StartLocalTransactionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StartLocalTransactionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StartLocalTransactionResponse result;
      
      private StartLocalTransactionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          StartLocalTransactionResponse original = result;
          result = new StartLocalTransactionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StartLocalTransactionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionResponse.Descriptor; }
      }
      
      public override StartLocalTransactionResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionResponse.DefaultInstance; }
      }
      
      public override StartLocalTransactionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StartLocalTransactionResponse) {
          return MergeFrom((StartLocalTransactionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StartLocalTransactionResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.StartLocalTransactionResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_startLocalTransactionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _startLocalTransactionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static StartLocalTransactionResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommitTransactionRequest : pb::GeneratedMessage<CommitTransactionRequest, CommitTransactionRequest.Builder> {
    private CommitTransactionRequest() { }
    private static readonly CommitTransactionRequest defaultInstance = new CommitTransactionRequest().MakeReadOnly();
    private static readonly string[] _commitTransactionRequestFieldNames = new string[] { "transaction_id" };
    private static readonly uint[] _commitTransactionRequestFieldTags = new uint[] { 10 };
    public static CommitTransactionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CommitTransactionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CommitTransactionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CommitTransactionRequest, CommitTransactionRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionRequest__FieldAccessorTable; }
    }
    
    public const int TransactionIdFieldNumber = 1;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTransactionId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _commitTransactionRequestFieldNames;
      if (hasTransactionId) {
        output.WriteString(1, field_names[0], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CommitTransactionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommitTransactionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommitTransactionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommitTransactionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommitTransactionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommitTransactionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CommitTransactionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CommitTransactionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CommitTransactionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommitTransactionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CommitTransactionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CommitTransactionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CommitTransactionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CommitTransactionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CommitTransactionRequest result;
      
      private CommitTransactionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CommitTransactionRequest original = result;
          result = new CommitTransactionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CommitTransactionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionRequest.Descriptor; }
      }
      
      public override CommitTransactionRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionRequest.DefaultInstance; }
      }
      
      public override CommitTransactionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CommitTransactionRequest) {
          return MergeFrom((CommitTransactionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CommitTransactionRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_commitTransactionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _commitTransactionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static CommitTransactionRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommitTransactionResponse : pb::GeneratedMessage<CommitTransactionResponse, CommitTransactionResponse.Builder> {
    private CommitTransactionResponse() { }
    private static readonly CommitTransactionResponse defaultInstance = new CommitTransactionResponse().MakeReadOnly();
    private static readonly string[] _commitTransactionResponseFieldNames = new string[] {  };
    private static readonly uint[] _commitTransactionResponseFieldTags = new uint[] {  };
    public static CommitTransactionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CommitTransactionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CommitTransactionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CommitTransactionResponse, CommitTransactionResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_CommitTransactionResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _commitTransactionResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CommitTransactionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommitTransactionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommitTransactionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommitTransactionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommitTransactionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommitTransactionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CommitTransactionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CommitTransactionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CommitTransactionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommitTransactionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CommitTransactionResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CommitTransactionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CommitTransactionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CommitTransactionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CommitTransactionResponse result;
      
      private CommitTransactionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CommitTransactionResponse original = result;
          result = new CommitTransactionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CommitTransactionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionResponse.Descriptor; }
      }
      
      public override CommitTransactionResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionResponse.DefaultInstance; }
      }
      
      public override CommitTransactionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CommitTransactionResponse) {
          return MergeFrom((CommitTransactionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CommitTransactionResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CommitTransactionResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_commitTransactionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _commitTransactionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CommitTransactionResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AbortTransactionRequest : pb::GeneratedMessage<AbortTransactionRequest, AbortTransactionRequest.Builder> {
    private AbortTransactionRequest() { }
    private static readonly AbortTransactionRequest defaultInstance = new AbortTransactionRequest().MakeReadOnly();
    private static readonly string[] _abortTransactionRequestFieldNames = new string[] { "transaction_id" };
    private static readonly uint[] _abortTransactionRequestFieldTags = new uint[] { 10 };
    public static AbortTransactionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AbortTransactionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AbortTransactionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AbortTransactionRequest, AbortTransactionRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionRequest__FieldAccessorTable; }
    }
    
    public const int TransactionIdFieldNumber = 1;
    private bool hasTransactionId;
    private string transactionId_ = "";
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public string TransactionId {
      get { return transactionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTransactionId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _abortTransactionRequestFieldNames;
      if (hasTransactionId) {
        output.WriteString(1, field_names[0], TransactionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TransactionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AbortTransactionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AbortTransactionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AbortTransactionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AbortTransactionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AbortTransactionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AbortTransactionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AbortTransactionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AbortTransactionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AbortTransactionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AbortTransactionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AbortTransactionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AbortTransactionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AbortTransactionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AbortTransactionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AbortTransactionRequest result;
      
      private AbortTransactionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AbortTransactionRequest original = result;
          result = new AbortTransactionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AbortTransactionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionRequest.Descriptor; }
      }
      
      public override AbortTransactionRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionRequest.DefaultInstance; }
      }
      
      public override AbortTransactionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AbortTransactionRequest) {
          return MergeFrom((AbortTransactionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AbortTransactionRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_abortTransactionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _abortTransactionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTransactionId = input.ReadString(ref result.transactionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public string TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = "";
        return this;
      }
    }
    static AbortTransactionRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AbortTransactionResponse : pb::GeneratedMessage<AbortTransactionResponse, AbortTransactionResponse.Builder> {
    private AbortTransactionResponse() { }
    private static readonly AbortTransactionResponse defaultInstance = new AbortTransactionResponse().MakeReadOnly();
    private static readonly string[] _abortTransactionResponseFieldNames = new string[] {  };
    private static readonly uint[] _abortTransactionResponseFieldTags = new uint[] {  };
    public static AbortTransactionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AbortTransactionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AbortTransactionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AbortTransactionResponse, AbortTransactionResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_AbortTransactionResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _abortTransactionResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AbortTransactionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AbortTransactionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AbortTransactionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AbortTransactionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AbortTransactionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AbortTransactionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AbortTransactionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AbortTransactionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AbortTransactionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AbortTransactionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AbortTransactionResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AbortTransactionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AbortTransactionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AbortTransactionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AbortTransactionResponse result;
      
      private AbortTransactionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AbortTransactionResponse original = result;
          result = new AbortTransactionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AbortTransactionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionResponse.Descriptor; }
      }
      
      public override AbortTransactionResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionResponse.DefaultInstance; }
      }
      
      public override AbortTransactionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AbortTransactionResponse) {
          return MergeFrom((AbortTransactionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AbortTransactionResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.AbortTransactionResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_abortTransactionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _abortTransactionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static AbortTransactionResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListStreamRequest : pb::GeneratedMessage<ListStreamRequest, ListStreamRequest.Builder> {
    private ListStreamRequest() { }
    private static readonly ListStreamRequest defaultInstance = new ListStreamRequest().MakeReadOnly();
    private static readonly string[] _listStreamRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _listStreamRequestFieldTags = new uint[] { 10 };
    public static ListStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListStreamRequest, ListStreamRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listStreamRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListStreamRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListStreamRequest result;
      
      private ListStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListStreamRequest original = result;
          result = new ListStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListStreamRequest.Descriptor; }
      }
      
      public override ListStreamRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListStreamRequest.DefaultInstance; }
      }
      
      public override ListStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListStreamRequest) {
          return MergeFrom((ListStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListStreamRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static ListStreamRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Stream : pb::GeneratedMessage<Stream, Stream.Builder> {
    private Stream() { }
    private static readonly Stream defaultInstance = new Stream().MakeReadOnly();
    private static readonly string[] _streamFieldNames = new string[] { "creation_time", "stream_id", "table_name" };
    private static readonly uint[] _streamFieldTags = new uint[] { 24, 10, 18 };
    public static Stream DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Stream DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Stream ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_Stream__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Stream, Stream.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_Stream__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int TableNameFieldNumber = 2;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int CreationTimeFieldNumber = 3;
    private bool hasCreationTime;
    private long creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public long CreationTime {
      get { return creationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        if (!hasTableName) return false;
        if (!hasCreationTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _streamFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[1], StreamId);
      }
      if (hasTableName) {
        output.WriteString(2, field_names[2], TableName);
      }
      if (hasCreationTime) {
        output.WriteInt64(3, field_names[0], CreationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStreamId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
      }
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TableName);
      }
      if (hasCreationTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, CreationTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Stream ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Stream ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Stream ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Stream ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Stream ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Stream ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Stream ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Stream ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Stream MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Stream prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Stream, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Stream cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Stream result;
      
      private Stream PrepareBuilder() {
        if (resultIsReadOnly) {
          Stream original = result;
          result = new Stream();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Stream MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Stream.Descriptor; }
      }
      
      public override Stream DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Stream.DefaultInstance; }
      }
      
      public override Stream BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Stream) {
          return MergeFrom((Stream) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Stream other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Stream.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 18: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 24: {
              result.hasCreationTime = input.ReadInt64(ref result.creationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public long CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(long value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0L;
        return this;
      }
    }
    static Stream() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListStreamResponse : pb::GeneratedMessage<ListStreamResponse, ListStreamResponse.Builder> {
    private ListStreamResponse() { }
    private static readonly ListStreamResponse defaultInstance = new ListStreamResponse().MakeReadOnly();
    private static readonly string[] _listStreamResponseFieldNames = new string[] { "streams" };
    private static readonly uint[] _listStreamResponseFieldTags = new uint[] { 10 };
    public static ListStreamResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListStreamResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListStreamResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListStreamResponse, ListStreamResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListStreamResponse__FieldAccessorTable; }
    }
    
    public const int StreamsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Stream> streams_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Stream>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Stream> StreamsList {
      get { return streams_; }
    }
    public int StreamsCount {
      get { return streams_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Stream GetStreams(int index) {
      return streams_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.Stream element in StreamsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listStreamResponseFieldNames;
      if (streams_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], streams_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Stream element in StreamsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListStreamResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListStreamResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListStreamResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListStreamResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListStreamResponse MakeReadOnly() {
      streams_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListStreamResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListStreamResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListStreamResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListStreamResponse result;
      
      private ListStreamResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListStreamResponse original = result;
          result = new ListStreamResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListStreamResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListStreamResponse.Descriptor; }
      }
      
      public override ListStreamResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListStreamResponse.DefaultInstance; }
      }
      
      public override ListStreamResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListStreamResponse) {
          return MergeFrom((ListStreamResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListStreamResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListStreamResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.streams_.Count != 0) {
          result.streams_.Add(other.streams_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listStreamResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listStreamResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.streams_, global::com.alicloud.openservices.tablestore.core.protocol.Stream.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Stream> StreamsList {
        get { return PrepareBuilder().streams_; }
      }
      public int StreamsCount {
        get { return result.StreamsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Stream GetStreams(int index) {
        return result.GetStreams(index);
      }
      public Builder SetStreams(int index, global::com.alicloud.openservices.tablestore.core.protocol.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streams_[index] = value;
        return this;
      }
      public Builder SetStreams(int index, global::com.alicloud.openservices.tablestore.core.protocol.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streams_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStreams(global::com.alicloud.openservices.tablestore.core.protocol.Stream value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streams_.Add(value);
        return this;
      }
      public Builder AddStreams(global::com.alicloud.openservices.tablestore.core.protocol.Stream.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streams_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStreams(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Stream> values) {
        PrepareBuilder();
        result.streams_.Add(values);
        return this;
      }
      public Builder ClearStreams() {
        PrepareBuilder();
        result.streams_.Clear();
        return this;
      }
    }
    static ListStreamResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StreamShard : pb::GeneratedMessage<StreamShard, StreamShard.Builder> {
    private StreamShard() { }
    private static readonly StreamShard defaultInstance = new StreamShard().MakeReadOnly();
    private static readonly string[] _streamShardFieldNames = new string[] { "parent_id", "parent_sibling_id", "shard_id" };
    private static readonly uint[] _streamShardFieldTags = new uint[] { 18, 26, 10 };
    public static StreamShard DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StreamShard DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StreamShard ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamShard__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StreamShard, StreamShard.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_StreamShard__FieldAccessorTable; }
    }
    
    public const int ShardIdFieldNumber = 1;
    private bool hasShardId;
    private string shardId_ = "";
    public bool HasShardId {
      get { return hasShardId; }
    }
    public string ShardId {
      get { return shardId_; }
    }
    
    public const int ParentIdFieldNumber = 2;
    private bool hasParentId;
    private string parentId_ = "";
    public bool HasParentId {
      get { return hasParentId; }
    }
    public string ParentId {
      get { return parentId_; }
    }
    
    public const int ParentSiblingIdFieldNumber = 3;
    private bool hasParentSiblingId;
    private string parentSiblingId_ = "";
    public bool HasParentSiblingId {
      get { return hasParentSiblingId; }
    }
    public string ParentSiblingId {
      get { return parentSiblingId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShardId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _streamShardFieldNames;
      if (hasShardId) {
        output.WriteString(1, field_names[2], ShardId);
      }
      if (hasParentId) {
        output.WriteString(2, field_names[0], ParentId);
      }
      if (hasParentSiblingId) {
        output.WriteString(3, field_names[1], ParentSiblingId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasShardId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ShardId);
      }
      if (hasParentId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ParentId);
      }
      if (hasParentSiblingId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ParentSiblingId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StreamShard ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamShard ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamShard ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StreamShard ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StreamShard ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamShard ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StreamShard ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StreamShard ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StreamShard ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StreamShard ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StreamShard MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StreamShard prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StreamShard, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StreamShard cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StreamShard result;
      
      private StreamShard PrepareBuilder() {
        if (resultIsReadOnly) {
          StreamShard original = result;
          result = new StreamShard();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StreamShard MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.Descriptor; }
      }
      
      public override StreamShard DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.DefaultInstance; }
      }
      
      public override StreamShard BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StreamShard) {
          return MergeFrom((StreamShard) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StreamShard other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShardId) {
          ShardId = other.ShardId;
        }
        if (other.HasParentId) {
          ParentId = other.ParentId;
        }
        if (other.HasParentSiblingId) {
          ParentSiblingId = other.ParentSiblingId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_streamShardFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _streamShardFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasShardId = input.ReadString(ref result.shardId_);
              break;
            }
            case 18: {
              result.hasParentId = input.ReadString(ref result.parentId_);
              break;
            }
            case 26: {
              result.hasParentSiblingId = input.ReadString(ref result.parentSiblingId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShardId {
        get { return result.hasShardId; }
      }
      public string ShardId {
        get { return result.ShardId; }
        set { SetShardId(value); }
      }
      public Builder SetShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardId = true;
        result.shardId_ = value;
        return this;
      }
      public Builder ClearShardId() {
        PrepareBuilder();
        result.hasShardId = false;
        result.shardId_ = "";
        return this;
      }
      
      public bool HasParentId {
        get { return result.hasParentId; }
      }
      public string ParentId {
        get { return result.ParentId; }
        set { SetParentId(value); }
      }
      public Builder SetParentId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentId = true;
        result.parentId_ = value;
        return this;
      }
      public Builder ClearParentId() {
        PrepareBuilder();
        result.hasParentId = false;
        result.parentId_ = "";
        return this;
      }
      
      public bool HasParentSiblingId {
        get { return result.hasParentSiblingId; }
      }
      public string ParentSiblingId {
        get { return result.ParentSiblingId; }
        set { SetParentSiblingId(value); }
      }
      public Builder SetParentSiblingId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParentSiblingId = true;
        result.parentSiblingId_ = value;
        return this;
      }
      public Builder ClearParentSiblingId() {
        PrepareBuilder();
        result.hasParentSiblingId = false;
        result.parentSiblingId_ = "";
        return this;
      }
    }
    static StreamShard() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeStreamRequest : pb::GeneratedMessage<DescribeStreamRequest, DescribeStreamRequest.Builder> {
    private DescribeStreamRequest() { }
    private static readonly DescribeStreamRequest defaultInstance = new DescribeStreamRequest().MakeReadOnly();
    private static readonly string[] _describeStreamRequestFieldNames = new string[] { "inclusive_start_shard_id", "shard_limit", "stream_id" };
    private static readonly uint[] _describeStreamRequestFieldTags = new uint[] { 18, 24, 10 };
    public static DescribeStreamRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeStreamRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeStreamRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeStreamRequest, DescribeStreamRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamRequest__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int InclusiveStartShardIdFieldNumber = 2;
    private bool hasInclusiveStartShardId;
    private string inclusiveStartShardId_ = "";
    public bool HasInclusiveStartShardId {
      get { return hasInclusiveStartShardId; }
    }
    public string InclusiveStartShardId {
      get { return inclusiveStartShardId_; }
    }
    
    public const int ShardLimitFieldNumber = 3;
    private bool hasShardLimit;
    private int shardLimit_;
    public bool HasShardLimit {
      get { return hasShardLimit; }
    }
    public int ShardLimit {
      get { return shardLimit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeStreamRequestFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[2], StreamId);
      }
      if (hasInclusiveStartShardId) {
        output.WriteString(2, field_names[0], InclusiveStartShardId);
      }
      if (hasShardLimit) {
        output.WriteInt32(3, field_names[1], ShardLimit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStreamId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
      }
      if (hasInclusiveStartShardId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, InclusiveStartShardId);
      }
      if (hasShardLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, ShardLimit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeStreamRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeStreamRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeStreamRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeStreamRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeStreamRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeStreamRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeStreamRequest result;
      
      private DescribeStreamRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeStreamRequest original = result;
          result = new DescribeStreamRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeStreamRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamRequest.Descriptor; }
      }
      
      public override DescribeStreamRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamRequest.DefaultInstance; }
      }
      
      public override DescribeStreamRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeStreamRequest) {
          return MergeFrom((DescribeStreamRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeStreamRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasInclusiveStartShardId) {
          InclusiveStartShardId = other.InclusiveStartShardId;
        }
        if (other.HasShardLimit) {
          ShardLimit = other.ShardLimit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeStreamRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeStreamRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 18: {
              result.hasInclusiveStartShardId = input.ReadString(ref result.inclusiveStartShardId_);
              break;
            }
            case 24: {
              result.hasShardLimit = input.ReadInt32(ref result.shardLimit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasInclusiveStartShardId {
        get { return result.hasInclusiveStartShardId; }
      }
      public string InclusiveStartShardId {
        get { return result.InclusiveStartShardId; }
        set { SetInclusiveStartShardId(value); }
      }
      public Builder SetInclusiveStartShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInclusiveStartShardId = true;
        result.inclusiveStartShardId_ = value;
        return this;
      }
      public Builder ClearInclusiveStartShardId() {
        PrepareBuilder();
        result.hasInclusiveStartShardId = false;
        result.inclusiveStartShardId_ = "";
        return this;
      }
      
      public bool HasShardLimit {
        get { return result.hasShardLimit; }
      }
      public int ShardLimit {
        get { return result.ShardLimit; }
        set { SetShardLimit(value); }
      }
      public Builder SetShardLimit(int value) {
        PrepareBuilder();
        result.hasShardLimit = true;
        result.shardLimit_ = value;
        return this;
      }
      public Builder ClearShardLimit() {
        PrepareBuilder();
        result.hasShardLimit = false;
        result.shardLimit_ = 0;
        return this;
      }
    }
    static DescribeStreamRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeStreamResponse : pb::GeneratedMessage<DescribeStreamResponse, DescribeStreamResponse.Builder> {
    private DescribeStreamResponse() { }
    private static readonly DescribeStreamResponse defaultInstance = new DescribeStreamResponse().MakeReadOnly();
    private static readonly string[] _describeStreamResponseFieldNames = new string[] { "creation_time", "expiration_time", "next_shard_id", "shards", "stream_id", "stream_status", "table_name" };
    private static readonly uint[] _describeStreamResponseFieldTags = new uint[] { 32, 16, 58, 50, 10, 40, 26 };
    public static DescribeStreamResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeStreamResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeStreamResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeStreamResponse, DescribeStreamResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeStreamResponse__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int ExpirationTimeFieldNumber = 2;
    private bool hasExpirationTime;
    private int expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public int ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int TableNameFieldNumber = 3;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int CreationTimeFieldNumber = 4;
    private bool hasCreationTime;
    private long creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public long CreationTime {
      get { return creationTime_; }
    }
    
    public const int StreamStatusFieldNumber = 5;
    private bool hasStreamStatus;
    private global::com.alicloud.openservices.tablestore.core.protocol.StreamStatus streamStatus_ = global::com.alicloud.openservices.tablestore.core.protocol.StreamStatus.STREAM_ENABLING;
    public bool HasStreamStatus {
      get { return hasStreamStatus; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.StreamStatus StreamStatus {
      get { return streamStatus_; }
    }
    
    public const int ShardsFieldNumber = 6;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.StreamShard> shards_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.StreamShard>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.StreamShard> ShardsList {
      get { return shards_; }
    }
    public int ShardsCount {
      get { return shards_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.StreamShard GetShards(int index) {
      return shards_[index];
    }
    
    public const int NextShardIdFieldNumber = 7;
    private bool hasNextShardId;
    private string nextShardId_ = "";
    public bool HasNextShardId {
      get { return hasNextShardId; }
    }
    public string NextShardId {
      get { return nextShardId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        if (!hasExpirationTime) return false;
        if (!hasTableName) return false;
        if (!hasCreationTime) return false;
        if (!hasStreamStatus) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.StreamShard element in ShardsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeStreamResponseFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[4], StreamId);
      }
      if (hasExpirationTime) {
        output.WriteInt32(2, field_names[1], ExpirationTime);
      }
      if (hasTableName) {
        output.WriteString(3, field_names[6], TableName);
      }
      if (hasCreationTime) {
        output.WriteInt64(4, field_names[0], CreationTime);
      }
      if (hasStreamStatus) {
        output.WriteEnum(5, field_names[5], (int) StreamStatus, StreamStatus);
      }
      if (shards_.Count > 0) {
        output.WriteMessageArray(6, field_names[3], shards_);
      }
      if (hasNextShardId) {
        output.WriteString(7, field_names[2], NextShardId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStreamId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
      }
      if (hasExpirationTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, ExpirationTime);
      }
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, TableName);
      }
      if (hasCreationTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, CreationTime);
      }
      if (hasStreamStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) StreamStatus);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.StreamShard element in ShardsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      if (hasNextShardId) {
        size += pb::CodedOutputStream.ComputeStringSize(7, NextShardId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeStreamResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeStreamResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeStreamResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeStreamResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeStreamResponse MakeReadOnly() {
      shards_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeStreamResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeStreamResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeStreamResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeStreamResponse result;
      
      private DescribeStreamResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeStreamResponse original = result;
          result = new DescribeStreamResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeStreamResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamResponse.Descriptor; }
      }
      
      public override DescribeStreamResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamResponse.DefaultInstance; }
      }
      
      public override DescribeStreamResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeStreamResponse) {
          return MergeFrom((DescribeStreamResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeStreamResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeStreamResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasStreamStatus) {
          StreamStatus = other.StreamStatus;
        }
        if (other.shards_.Count != 0) {
          result.shards_.Add(other.shards_);
        }
        if (other.HasNextShardId) {
          NextShardId = other.NextShardId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeStreamResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeStreamResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 16: {
              result.hasExpirationTime = input.ReadInt32(ref result.expirationTime_);
              break;
            }
            case 26: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 32: {
              result.hasCreationTime = input.ReadInt64(ref result.creationTime_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.streamStatus_, out unknown)) {
                result.hasStreamStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.shards_, global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.DefaultInstance, extensionRegistry);
              break;
            }
            case 58: {
              result.hasNextShardId = input.ReadString(ref result.nextShardId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public int ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(int value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public long CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(long value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0L;
        return this;
      }
      
      public bool HasStreamStatus {
       get { return result.hasStreamStatus; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.StreamStatus StreamStatus {
        get { return result.StreamStatus; }
        set { SetStreamStatus(value); }
      }
      public Builder SetStreamStatus(global::com.alicloud.openservices.tablestore.core.protocol.StreamStatus value) {
        PrepareBuilder();
        result.hasStreamStatus = true;
        result.streamStatus_ = value;
        return this;
      }
      public Builder ClearStreamStatus() {
        PrepareBuilder();
        result.hasStreamStatus = false;
        result.streamStatus_ = global::com.alicloud.openservices.tablestore.core.protocol.StreamStatus.STREAM_ENABLING;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.StreamShard> ShardsList {
        get { return PrepareBuilder().shards_; }
      }
      public int ShardsCount {
        get { return result.ShardsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.StreamShard GetShards(int index) {
        return result.GetShards(index);
      }
      public Builder SetShards(int index, global::com.alicloud.openservices.tablestore.core.protocol.StreamShard value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shards_[index] = value;
        return this;
      }
      public Builder SetShards(int index, global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shards_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddShards(global::com.alicloud.openservices.tablestore.core.protocol.StreamShard value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shards_.Add(value);
        return this;
      }
      public Builder AddShards(global::com.alicloud.openservices.tablestore.core.protocol.StreamShard.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shards_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeShards(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.StreamShard> values) {
        PrepareBuilder();
        result.shards_.Add(values);
        return this;
      }
      public Builder ClearShards() {
        PrepareBuilder();
        result.shards_.Clear();
        return this;
      }
      
      public bool HasNextShardId {
        get { return result.hasNextShardId; }
      }
      public string NextShardId {
        get { return result.NextShardId; }
        set { SetNextShardId(value); }
      }
      public Builder SetNextShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextShardId = true;
        result.nextShardId_ = value;
        return this;
      }
      public Builder ClearNextShardId() {
        PrepareBuilder();
        result.hasNextShardId = false;
        result.nextShardId_ = "";
        return this;
      }
    }
    static DescribeStreamResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetShardIteratorRequest : pb::GeneratedMessage<GetShardIteratorRequest, GetShardIteratorRequest.Builder> {
    private GetShardIteratorRequest() { }
    private static readonly GetShardIteratorRequest defaultInstance = new GetShardIteratorRequest().MakeReadOnly();
    private static readonly string[] _getShardIteratorRequestFieldNames = new string[] { "shard_id", "stream_id" };
    private static readonly uint[] _getShardIteratorRequestFieldTags = new uint[] { 18, 10 };
    public static GetShardIteratorRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetShardIteratorRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetShardIteratorRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetShardIteratorRequest, GetShardIteratorRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorRequest__FieldAccessorTable; }
    }
    
    public const int StreamIdFieldNumber = 1;
    private bool hasStreamId;
    private string streamId_ = "";
    public bool HasStreamId {
      get { return hasStreamId; }
    }
    public string StreamId {
      get { return streamId_; }
    }
    
    public const int ShardIdFieldNumber = 2;
    private bool hasShardId;
    private string shardId_ = "";
    public bool HasShardId {
      get { return hasShardId; }
    }
    public string ShardId {
      get { return shardId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStreamId) return false;
        if (!hasShardId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getShardIteratorRequestFieldNames;
      if (hasStreamId) {
        output.WriteString(1, field_names[1], StreamId);
      }
      if (hasShardId) {
        output.WriteString(2, field_names[0], ShardId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStreamId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, StreamId);
      }
      if (hasShardId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ShardId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetShardIteratorRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetShardIteratorRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetShardIteratorRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetShardIteratorRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetShardIteratorRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetShardIteratorRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetShardIteratorRequest result;
      
      private GetShardIteratorRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetShardIteratorRequest original = result;
          result = new GetShardIteratorRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetShardIteratorRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorRequest.Descriptor; }
      }
      
      public override GetShardIteratorRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorRequest.DefaultInstance; }
      }
      
      public override GetShardIteratorRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetShardIteratorRequest) {
          return MergeFrom((GetShardIteratorRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetShardIteratorRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStreamId) {
          StreamId = other.StreamId;
        }
        if (other.HasShardId) {
          ShardId = other.ShardId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getShardIteratorRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getShardIteratorRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStreamId = input.ReadString(ref result.streamId_);
              break;
            }
            case 18: {
              result.hasShardId = input.ReadString(ref result.shardId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStreamId {
        get { return result.hasStreamId; }
      }
      public string StreamId {
        get { return result.StreamId; }
        set { SetStreamId(value); }
      }
      public Builder SetStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStreamId = true;
        result.streamId_ = value;
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.hasStreamId = false;
        result.streamId_ = "";
        return this;
      }
      
      public bool HasShardId {
        get { return result.hasShardId; }
      }
      public string ShardId {
        get { return result.ShardId; }
        set { SetShardId(value); }
      }
      public Builder SetShardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardId = true;
        result.shardId_ = value;
        return this;
      }
      public Builder ClearShardId() {
        PrepareBuilder();
        result.hasShardId = false;
        result.shardId_ = "";
        return this;
      }
    }
    static GetShardIteratorRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetShardIteratorResponse : pb::GeneratedMessage<GetShardIteratorResponse, GetShardIteratorResponse.Builder> {
    private GetShardIteratorResponse() { }
    private static readonly GetShardIteratorResponse defaultInstance = new GetShardIteratorResponse().MakeReadOnly();
    private static readonly string[] _getShardIteratorResponseFieldNames = new string[] { "shard_iterator" };
    private static readonly uint[] _getShardIteratorResponseFieldTags = new uint[] { 10 };
    public static GetShardIteratorResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetShardIteratorResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetShardIteratorResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetShardIteratorResponse, GetShardIteratorResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetShardIteratorResponse__FieldAccessorTable; }
    }
    
    public const int ShardIteratorFieldNumber = 1;
    private bool hasShardIterator;
    private string shardIterator_ = "";
    public bool HasShardIterator {
      get { return hasShardIterator; }
    }
    public string ShardIterator {
      get { return shardIterator_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShardIterator) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getShardIteratorResponseFieldNames;
      if (hasShardIterator) {
        output.WriteString(1, field_names[0], ShardIterator);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasShardIterator) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ShardIterator);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetShardIteratorResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetShardIteratorResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetShardIteratorResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetShardIteratorResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetShardIteratorResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetShardIteratorResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetShardIteratorResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetShardIteratorResponse result;
      
      private GetShardIteratorResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetShardIteratorResponse original = result;
          result = new GetShardIteratorResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetShardIteratorResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorResponse.Descriptor; }
      }
      
      public override GetShardIteratorResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorResponse.DefaultInstance; }
      }
      
      public override GetShardIteratorResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetShardIteratorResponse) {
          return MergeFrom((GetShardIteratorResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetShardIteratorResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetShardIteratorResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShardIterator) {
          ShardIterator = other.ShardIterator;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getShardIteratorResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getShardIteratorResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasShardIterator = input.ReadString(ref result.shardIterator_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShardIterator {
        get { return result.hasShardIterator; }
      }
      public string ShardIterator {
        get { return result.ShardIterator; }
        set { SetShardIterator(value); }
      }
      public Builder SetShardIterator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardIterator = true;
        result.shardIterator_ = value;
        return this;
      }
      public Builder ClearShardIterator() {
        PrepareBuilder();
        result.hasShardIterator = false;
        result.shardIterator_ = "";
        return this;
      }
    }
    static GetShardIteratorResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetStreamRecordRequest : pb::GeneratedMessage<GetStreamRecordRequest, GetStreamRecordRequest.Builder> {
    private GetStreamRecordRequest() { }
    private static readonly GetStreamRecordRequest defaultInstance = new GetStreamRecordRequest().MakeReadOnly();
    private static readonly string[] _getStreamRecordRequestFieldNames = new string[] { "limit", "shard_iterator" };
    private static readonly uint[] _getStreamRecordRequestFieldTags = new uint[] { 16, 10 };
    public static GetStreamRecordRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamRecordRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamRecordRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamRecordRequest, GetStreamRecordRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordRequest__FieldAccessorTable; }
    }
    
    public const int ShardIteratorFieldNumber = 1;
    private bool hasShardIterator;
    private string shardIterator_ = "";
    public bool HasShardIterator {
      get { return hasShardIterator; }
    }
    public string ShardIterator {
      get { return shardIterator_; }
    }
    
    public const int LimitFieldNumber = 2;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasShardIterator) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getStreamRecordRequestFieldNames;
      if (hasShardIterator) {
        output.WriteString(1, field_names[1], ShardIterator);
      }
      if (hasLimit) {
        output.WriteInt32(2, field_names[0], Limit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasShardIterator) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ShardIterator);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Limit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetStreamRecordRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamRecordRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamRecordRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamRecordRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamRecordRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamRecordRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamRecordRequest result;
      
      private GetStreamRecordRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamRecordRequest original = result;
          result = new GetStreamRecordRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamRecordRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordRequest.Descriptor; }
      }
      
      public override GetStreamRecordRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordRequest.DefaultInstance; }
      }
      
      public override GetStreamRecordRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamRecordRequest) {
          return MergeFrom((GetStreamRecordRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamRecordRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasShardIterator) {
          ShardIterator = other.ShardIterator;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamRecordRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamRecordRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasShardIterator = input.ReadString(ref result.shardIterator_);
              break;
            }
            case 16: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasShardIterator {
        get { return result.hasShardIterator; }
      }
      public string ShardIterator {
        get { return result.ShardIterator; }
        set { SetShardIterator(value); }
      }
      public Builder SetShardIterator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasShardIterator = true;
        result.shardIterator_ = value;
        return this;
      }
      public Builder ClearShardIterator() {
        PrepareBuilder();
        result.hasShardIterator = false;
        result.shardIterator_ = "";
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
    }
    static GetStreamRecordRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetStreamRecordResponse : pb::GeneratedMessage<GetStreamRecordResponse, GetStreamRecordResponse.Builder> {
    private GetStreamRecordResponse() { }
    private static readonly GetStreamRecordResponse defaultInstance = new GetStreamRecordResponse().MakeReadOnly();
    private static readonly string[] _getStreamRecordResponseFieldNames = new string[] { "next_shard_iterator", "stream_records" };
    private static readonly uint[] _getStreamRecordResponseFieldTags = new uint[] { 18, 10 };
    public static GetStreamRecordResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStreamRecordResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStreamRecordResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStreamRecordResponse, GetStreamRecordResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class StreamRecord : pb::GeneratedMessage<StreamRecord, StreamRecord.Builder> {
        private StreamRecord() { }
        private static readonly StreamRecord defaultInstance = new StreamRecord().MakeReadOnly();
        private static readonly string[] _streamRecordFieldNames = new string[] { "action_type", "record" };
        private static readonly uint[] _streamRecordFieldTags = new uint[] { 8, 18 };
        public static StreamRecord DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override StreamRecord DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override StreamRecord ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse_StreamRecord__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<StreamRecord, StreamRecord.Builder> InternalFieldAccessors {
          get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_GetStreamRecordResponse_StreamRecord__FieldAccessorTable; }
        }
        
        public const int ActionTypeFieldNumber = 1;
        private bool hasActionType;
        private global::com.alicloud.openservices.tablestore.core.protocol.ActionType actionType_ = global::com.alicloud.openservices.tablestore.core.protocol.ActionType.PUT_ROW;
        public bool HasActionType {
          get { return hasActionType; }
        }
        public global::com.alicloud.openservices.tablestore.core.protocol.ActionType ActionType {
          get { return actionType_; }
        }
        
        public const int RecordFieldNumber = 2;
        private bool hasRecord;
        private pb::ByteString record_ = pb::ByteString.Empty;
        public bool HasRecord {
          get { return hasRecord; }
        }
        public pb::ByteString Record {
          get { return record_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasActionType) return false;
            if (!hasRecord) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _streamRecordFieldNames;
          if (hasActionType) {
            output.WriteEnum(1, field_names[0], (int) ActionType, ActionType);
          }
          if (hasRecord) {
            output.WriteBytes(2, field_names[1], Record);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasActionType) {
            size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ActionType);
          }
          if (hasRecord) {
            size += pb::CodedOutputStream.ComputeBytesSize(2, Record);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static StreamRecord ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static StreamRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static StreamRecord ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static StreamRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static StreamRecord ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static StreamRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static StreamRecord ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static StreamRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static StreamRecord ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static StreamRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private StreamRecord MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(StreamRecord prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<StreamRecord, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(StreamRecord cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private StreamRecord result;
          
          private StreamRecord PrepareBuilder() {
            if (resultIsReadOnly) {
              StreamRecord original = result;
              result = new StreamRecord();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override StreamRecord MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.Descriptor; }
          }
          
          public override StreamRecord DefaultInstanceForType {
            get { return global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.DefaultInstance; }
          }
          
          public override StreamRecord BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is StreamRecord) {
              return MergeFrom((StreamRecord) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(StreamRecord other) {
            if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasActionType) {
              ActionType = other.ActionType;
            }
            if (other.HasRecord) {
              Record = other.Record;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_streamRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _streamRecordFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 8: {
                  object unknown;
                  if(input.ReadEnum(ref result.actionType_, out unknown)) {
                    result.hasActionType = true;
                  } else if(unknown is int) {
                    if (unknownFields == null) {
                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                    }
                    unknownFields.MergeVarintField(1, (ulong)(int)unknown);
                  }
                  break;
                }
                case 18: {
                  result.hasRecord = input.ReadBytes(ref result.record_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasActionType {
           get { return result.hasActionType; }
          }
          public global::com.alicloud.openservices.tablestore.core.protocol.ActionType ActionType {
            get { return result.ActionType; }
            set { SetActionType(value); }
          }
          public Builder SetActionType(global::com.alicloud.openservices.tablestore.core.protocol.ActionType value) {
            PrepareBuilder();
            result.hasActionType = true;
            result.actionType_ = value;
            return this;
          }
          public Builder ClearActionType() {
            PrepareBuilder();
            result.hasActionType = false;
            result.actionType_ = global::com.alicloud.openservices.tablestore.core.protocol.ActionType.PUT_ROW;
            return this;
          }
          
          public bool HasRecord {
            get { return result.hasRecord; }
          }
          public pb::ByteString Record {
            get { return result.Record; }
            set { SetRecord(value); }
          }
          public Builder SetRecord(pb::ByteString value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasRecord = true;
            result.record_ = value;
            return this;
          }
          public Builder ClearRecord() {
            PrepareBuilder();
            result.hasRecord = false;
            result.record_ = pb::ByteString.Empty;
            return this;
          }
        }
        static StreamRecord() {
          object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int StreamRecordsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord> streamRecords_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord> StreamRecordsList {
      get { return streamRecords_; }
    }
    public int StreamRecordsCount {
      get { return streamRecords_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord GetStreamRecords(int index) {
      return streamRecords_[index];
    }
    
    public const int NextShardIteratorFieldNumber = 2;
    private bool hasNextShardIterator;
    private string nextShardIterator_ = "";
    public bool HasNextShardIterator {
      get { return hasNextShardIterator; }
    }
    public string NextShardIterator {
      get { return nextShardIterator_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord element in StreamRecordsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getStreamRecordResponseFieldNames;
      if (streamRecords_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], streamRecords_);
      }
      if (hasNextShardIterator) {
        output.WriteString(2, field_names[0], NextShardIterator);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord element in StreamRecordsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasNextShardIterator) {
        size += pb::CodedOutputStream.ComputeStringSize(2, NextShardIterator);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetStreamRecordResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStreamRecordResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStreamRecordResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStreamRecordResponse MakeReadOnly() {
      streamRecords_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStreamRecordResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStreamRecordResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStreamRecordResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStreamRecordResponse result;
      
      private GetStreamRecordResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStreamRecordResponse original = result;
          result = new GetStreamRecordResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStreamRecordResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Descriptor; }
      }
      
      public override GetStreamRecordResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.DefaultInstance; }
      }
      
      public override GetStreamRecordResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStreamRecordResponse) {
          return MergeFrom((GetStreamRecordResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStreamRecordResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.streamRecords_.Count != 0) {
          result.streamRecords_.Add(other.streamRecords_);
        }
        if (other.HasNextShardIterator) {
          NextShardIterator = other.NextShardIterator;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStreamRecordResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStreamRecordResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.streamRecords_, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              result.hasNextShardIterator = input.ReadString(ref result.nextShardIterator_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord> StreamRecordsList {
        get { return PrepareBuilder().streamRecords_; }
      }
      public int StreamRecordsCount {
        get { return result.StreamRecordsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord GetStreamRecords(int index) {
        return result.GetStreamRecords(index);
      }
      public Builder SetStreamRecords(int index, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streamRecords_[index] = value;
        return this;
      }
      public Builder SetStreamRecords(int index, global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streamRecords_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStreamRecords(global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streamRecords_.Add(value);
        return this;
      }
      public Builder AddStreamRecords(global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.streamRecords_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStreamRecords(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GetStreamRecordResponse.Types.StreamRecord> values) {
        PrepareBuilder();
        result.streamRecords_.Add(values);
        return this;
      }
      public Builder ClearStreamRecords() {
        PrepareBuilder();
        result.streamRecords_.Clear();
        return this;
      }
      
      public bool HasNextShardIterator {
        get { return result.hasNextShardIterator; }
      }
      public string NextShardIterator {
        get { return result.NextShardIterator; }
        set { SetNextShardIterator(value); }
      }
      public Builder SetNextShardIterator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextShardIterator = true;
        result.nextShardIterator_ = value;
        return this;
      }
      public Builder ClearNextShardIterator() {
        PrepareBuilder();
        result.hasNextShardIterator = false;
        result.nextShardIterator_ = "";
        return this;
      }
    }
    static GetStreamRecordResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ComputeSplitPointsBySizeRequest : pb::GeneratedMessage<ComputeSplitPointsBySizeRequest, ComputeSplitPointsBySizeRequest.Builder> {
    private ComputeSplitPointsBySizeRequest() { }
    private static readonly ComputeSplitPointsBySizeRequest defaultInstance = new ComputeSplitPointsBySizeRequest().MakeReadOnly();
    private static readonly string[] _computeSplitPointsBySizeRequestFieldNames = new string[] { "split_size", "split_size_unit_in_byte", "table_name" };
    private static readonly uint[] _computeSplitPointsBySizeRequestFieldTags = new uint[] { 16, 24, 10 };
    public static ComputeSplitPointsBySizeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ComputeSplitPointsBySizeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ComputeSplitPointsBySizeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ComputeSplitPointsBySizeRequest, ComputeSplitPointsBySizeRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int SplitSizeFieldNumber = 2;
    private bool hasSplitSize;
    private long splitSize_;
    public bool HasSplitSize {
      get { return hasSplitSize; }
    }
    public long SplitSize {
      get { return splitSize_; }
    }
    
    public const int SplitSizeUnitInByteFieldNumber = 3;
    private bool hasSplitSizeUnitInByte;
    private long splitSizeUnitInByte_;
    public bool HasSplitSizeUnitInByte {
      get { return hasSplitSizeUnitInByte; }
    }
    public long SplitSizeUnitInByte {
      get { return splitSizeUnitInByte_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasSplitSize) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _computeSplitPointsBySizeRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[2], TableName);
      }
      if (hasSplitSize) {
        output.WriteInt64(2, field_names[0], SplitSize);
      }
      if (hasSplitSizeUnitInByte) {
        output.WriteInt64(3, field_names[1], SplitSizeUnitInByte);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasSplitSize) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, SplitSize);
      }
      if (hasSplitSizeUnitInByte) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, SplitSizeUnitInByte);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ComputeSplitPointsBySizeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ComputeSplitPointsBySizeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ComputeSplitPointsBySizeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ComputeSplitPointsBySizeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ComputeSplitPointsBySizeRequest result;
      
      private ComputeSplitPointsBySizeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ComputeSplitPointsBySizeRequest original = result;
          result = new ComputeSplitPointsBySizeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ComputeSplitPointsBySizeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeRequest.Descriptor; }
      }
      
      public override ComputeSplitPointsBySizeRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeRequest.DefaultInstance; }
      }
      
      public override ComputeSplitPointsBySizeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ComputeSplitPointsBySizeRequest) {
          return MergeFrom((ComputeSplitPointsBySizeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ComputeSplitPointsBySizeRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasSplitSize) {
          SplitSize = other.SplitSize;
        }
        if (other.HasSplitSizeUnitInByte) {
          SplitSizeUnitInByte = other.SplitSizeUnitInByte;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_computeSplitPointsBySizeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _computeSplitPointsBySizeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 16: {
              result.hasSplitSize = input.ReadInt64(ref result.splitSize_);
              break;
            }
            case 24: {
              result.hasSplitSizeUnitInByte = input.ReadInt64(ref result.splitSizeUnitInByte_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasSplitSize {
        get { return result.hasSplitSize; }
      }
      public long SplitSize {
        get { return result.SplitSize; }
        set { SetSplitSize(value); }
      }
      public Builder SetSplitSize(long value) {
        PrepareBuilder();
        result.hasSplitSize = true;
        result.splitSize_ = value;
        return this;
      }
      public Builder ClearSplitSize() {
        PrepareBuilder();
        result.hasSplitSize = false;
        result.splitSize_ = 0L;
        return this;
      }
      
      public bool HasSplitSizeUnitInByte {
        get { return result.hasSplitSizeUnitInByte; }
      }
      public long SplitSizeUnitInByte {
        get { return result.SplitSizeUnitInByte; }
        set { SetSplitSizeUnitInByte(value); }
      }
      public Builder SetSplitSizeUnitInByte(long value) {
        PrepareBuilder();
        result.hasSplitSizeUnitInByte = true;
        result.splitSizeUnitInByte_ = value;
        return this;
      }
      public Builder ClearSplitSizeUnitInByte() {
        PrepareBuilder();
        result.hasSplitSizeUnitInByte = false;
        result.splitSizeUnitInByte_ = 0L;
        return this;
      }
    }
    static ComputeSplitPointsBySizeRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ComputeSplitPointsBySizeResponse : pb::GeneratedMessage<ComputeSplitPointsBySizeResponse, ComputeSplitPointsBySizeResponse.Builder> {
    private ComputeSplitPointsBySizeResponse() { }
    private static readonly ComputeSplitPointsBySizeResponse defaultInstance = new ComputeSplitPointsBySizeResponse().MakeReadOnly();
    private static readonly string[] _computeSplitPointsBySizeResponseFieldNames = new string[] { "consumed", "locations", "schema", "split_points" };
    private static readonly uint[] _computeSplitPointsBySizeResponseFieldTags = new uint[] { 10, 34, 18, 26 };
    public static ComputeSplitPointsBySizeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ComputeSplitPointsBySizeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ComputeSplitPointsBySizeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ComputeSplitPointsBySizeResponse, ComputeSplitPointsBySizeResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class SplitLocation : pb::GeneratedMessage<SplitLocation, SplitLocation.Builder> {
        private SplitLocation() { }
        private static readonly SplitLocation defaultInstance = new SplitLocation().MakeReadOnly();
        private static readonly string[] _splitLocationFieldNames = new string[] { "location", "repeat" };
        private static readonly uint[] _splitLocationFieldTags = new uint[] { 10, 16 };
        public static SplitLocation DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override SplitLocation DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override SplitLocation ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse_SplitLocation__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<SplitLocation, SplitLocation.Builder> InternalFieldAccessors {
          get { return global::com.alicloud.openservices.tablestore.core.protocol.TableStore.internal__static_com_alicloud_openservices_tablestore_core_protocol_ComputeSplitPointsBySizeResponse_SplitLocation__FieldAccessorTable; }
        }
        
        public const int LocationFieldNumber = 1;
        private bool hasLocation;
        private string location_ = "";
        public bool HasLocation {
          get { return hasLocation; }
        }
        public string Location {
          get { return location_; }
        }
        
        public const int RepeatFieldNumber = 2;
        private bool hasRepeat;
        private long repeat_;
        public bool HasRepeat {
          get { return hasRepeat; }
        }
        public long Repeat {
          get { return repeat_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasLocation) return false;
            if (!hasRepeat) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _splitLocationFieldNames;
          if (hasLocation) {
            output.WriteString(1, field_names[0], Location);
          }
          if (hasRepeat) {
            output.WriteSInt64(2, field_names[1], Repeat);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasLocation) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Location);
          }
          if (hasRepeat) {
            size += pb::CodedOutputStream.ComputeSInt64Size(2, Repeat);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static SplitLocation ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SplitLocation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SplitLocation ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SplitLocation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SplitLocation ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SplitLocation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static SplitLocation ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static SplitLocation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static SplitLocation ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SplitLocation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private SplitLocation MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(SplitLocation prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<SplitLocation, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(SplitLocation cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private SplitLocation result;
          
          private SplitLocation PrepareBuilder() {
            if (resultIsReadOnly) {
              SplitLocation original = result;
              result = new SplitLocation();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override SplitLocation MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.Descriptor; }
          }
          
          public override SplitLocation DefaultInstanceForType {
            get { return global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.DefaultInstance; }
          }
          
          public override SplitLocation BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is SplitLocation) {
              return MergeFrom((SplitLocation) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(SplitLocation other) {
            if (other == global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasLocation) {
              Location = other.Location;
            }
            if (other.HasRepeat) {
              Repeat = other.Repeat;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_splitLocationFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _splitLocationFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasLocation = input.ReadString(ref result.location_);
                  break;
                }
                case 16: {
                  result.hasRepeat = input.ReadSInt64(ref result.repeat_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasLocation {
            get { return result.hasLocation; }
          }
          public string Location {
            get { return result.Location; }
            set { SetLocation(value); }
          }
          public Builder SetLocation(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasLocation = true;
            result.location_ = value;
            return this;
          }
          public Builder ClearLocation() {
            PrepareBuilder();
            result.hasLocation = false;
            result.location_ = "";
            return this;
          }
          
          public bool HasRepeat {
            get { return result.hasRepeat; }
          }
          public long Repeat {
            get { return result.Repeat; }
            set { SetRepeat(value); }
          }
          public Builder SetRepeat(long value) {
            PrepareBuilder();
            result.hasRepeat = true;
            result.repeat_ = value;
            return this;
          }
          public Builder ClearRepeat() {
            PrepareBuilder();
            result.hasRepeat = false;
            result.repeat_ = 0;
            return this;
          }
        }
        static SplitLocation() {
          object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int ConsumedFieldNumber = 1;
    private bool hasConsumed;
    private global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
      get { return consumed_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance; }
    }
    
    public const int SchemaFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> schema_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> SchemaList {
      get { return schema_; }
    }
    public int SchemaCount {
      get { return schema_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema GetSchema(int index) {
      return schema_[index];
    }
    
    public const int SplitPointsFieldNumber = 3;
    private pbc::PopsicleList<pb::ByteString> splitPoints_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> SplitPointsList {
      get { return pbc::Lists.AsReadOnly(splitPoints_); }
    }
    public int SplitPointsCount {
      get { return splitPoints_.Count; }
    }
    public pb::ByteString GetSplitPoints(int index) {
      return splitPoints_[index];
    }
    
    public const int LocationsFieldNumber = 4;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation> locations_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation> LocationsList {
      get { return locations_; }
    }
    public int LocationsCount {
      get { return locations_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation GetLocations(int index) {
      return locations_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConsumed) return false;
        if (!Consumed.IsInitialized) return false;
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema element in SchemaList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation element in LocationsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _computeSplitPointsBySizeResponseFieldNames;
      if (hasConsumed) {
        output.WriteMessage(1, field_names[0], Consumed);
      }
      if (schema_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], schema_);
      }
      if (splitPoints_.Count > 0) {
        output.WriteBytesArray(3, field_names[3], splitPoints_);
      }
      if (locations_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], locations_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Consumed);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema element in SchemaList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in SplitPointsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * splitPoints_.Count;
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation element in LocationsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ComputeSplitPointsBySizeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ComputeSplitPointsBySizeResponse MakeReadOnly() {
      schema_.MakeReadOnly();
      splitPoints_.MakeReadOnly();
      locations_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ComputeSplitPointsBySizeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ComputeSplitPointsBySizeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ComputeSplitPointsBySizeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ComputeSplitPointsBySizeResponse result;
      
      private ComputeSplitPointsBySizeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ComputeSplitPointsBySizeResponse original = result;
          result = new ComputeSplitPointsBySizeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ComputeSplitPointsBySizeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Descriptor; }
      }
      
      public override ComputeSplitPointsBySizeResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.DefaultInstance; }
      }
      
      public override ComputeSplitPointsBySizeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ComputeSplitPointsBySizeResponse) {
          return MergeFrom((ComputeSplitPointsBySizeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ComputeSplitPointsBySizeResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConsumed) {
          MergeConsumed(other.Consumed);
        }
        if (other.schema_.Count != 0) {
          result.schema_.Add(other.schema_);
        }
        if (other.splitPoints_.Count != 0) {
          result.splitPoints_.Add(other.splitPoints_);
        }
        if (other.locations_.Count != 0) {
          result.locations_.Add(other.locations_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_computeSplitPointsBySizeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _computeSplitPointsBySizeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder();
              if (result.hasConsumed) {
                subBuilder.MergeFrom(Consumed);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Consumed = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.schema_, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadBytesArray(tag, field_name, result.splitPoints_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.locations_, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConsumed {
       get { return result.hasConsumed; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder SetConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConsumed(global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConsumed &&
            result.consumed_ != global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.DefaultInstance) {
            result.consumed_ = global::com.alicloud.openservices.tablestore.core.protocol.ConsumedCapacity.CreateBuilder(result.consumed_).MergeFrom(value).BuildPartial();
        } else {
          result.consumed_ = value;
        }
        result.hasConsumed = true;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> SchemaList {
        get { return PrepareBuilder().schema_; }
      }
      public int SchemaCount {
        get { return result.SchemaCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema GetSchema(int index) {
        return result.GetSchema(index);
      }
      public Builder SetSchema(int index, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.schema_[index] = value;
        return this;
      }
      public Builder SetSchema(int index, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.schema_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSchema(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.schema_.Add(value);
        return this;
      }
      public Builder AddSchema(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.schema_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSchema(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySchema> values) {
        PrepareBuilder();
        result.schema_.Add(values);
        return this;
      }
      public Builder ClearSchema() {
        PrepareBuilder();
        result.schema_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> SplitPointsList {
        get { return PrepareBuilder().splitPoints_; }
      }
      public int SplitPointsCount {
        get { return result.SplitPointsCount; }
      }
      public pb::ByteString GetSplitPoints(int index) {
        return result.GetSplitPoints(index);
      }
      public Builder SetSplitPoints(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.splitPoints_[index] = value;
        return this;
      }
      public Builder AddSplitPoints(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.splitPoints_.Add(value);
        return this;
      }
      public Builder AddRangeSplitPoints(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.splitPoints_.Add(values);
        return this;
      }
      public Builder ClearSplitPoints() {
        PrepareBuilder();
        result.splitPoints_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation> LocationsList {
        get { return PrepareBuilder().locations_; }
      }
      public int LocationsCount {
        get { return result.LocationsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation GetLocations(int index) {
        return result.GetLocations(index);
      }
      public Builder SetLocations(int index, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.locations_[index] = value;
        return this;
      }
      public Builder SetLocations(int index, global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.locations_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLocations(global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.locations_.Add(value);
        return this;
      }
      public Builder AddLocations(global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.locations_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLocations(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation> values) {
        PrepareBuilder();
        result.locations_.Add(values);
        return this;
      }
      public Builder ClearLocations() {
        PrepareBuilder();
        result.locations_.Clear();
        return this;
      }
    }
    static ComputeSplitPointsBySizeResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TableStore.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
