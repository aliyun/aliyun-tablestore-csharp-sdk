// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers
{

    using Google.FlatBuffers;

    public struct SQLResponseColumns : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
        public static SQLResponseColumns GetRootAsSQLResponseColumns(ByteBuffer _bb) { return GetRootAsSQLResponseColumns(_bb, new SQLResponseColumns()); }
        public static SQLResponseColumns GetRootAsSQLResponseColumns(ByteBuffer _bb, SQLResponseColumns obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public SQLResponseColumns __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumn? Columns(int j) { int o = __p.__offset(4); return o != 0 ? (com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumn?)(new com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumn()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
        public int ColumnsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
        public long RowCount { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

        public static Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumns> CreateSQLResponseColumns(FlatBufferBuilder builder,
            VectorOffset columnsOffset = default(VectorOffset),
            long row_count = 0)
        {
            builder.StartTable(2);
            SQLResponseColumns.AddRowCount(builder, row_count);
            SQLResponseColumns.AddColumns(builder, columnsOffset);
            return SQLResponseColumns.EndSQLResponseColumns(builder);
        }

        public static void StartSQLResponseColumns(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddColumns(FlatBufferBuilder builder, VectorOffset columnsOffset) { builder.AddOffset(0, columnsOffset.Value, 0); }
        public static VectorOffset CreateColumnsVector(FlatBufferBuilder builder, Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumn>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
        public static VectorOffset CreateColumnsVectorBlock(FlatBufferBuilder builder, Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumn>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
        public static void StartColumnsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
        public static void AddRowCount(FlatBufferBuilder builder, long rowCount) { builder.AddLong(1, rowCount, 0); }
        public static Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumns> EndSQLResponseColumns(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumns>(o);
        }
        public static void FinishSQLResponseColumnsBuffer(FlatBufferBuilder builder, Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumns> offset) { builder.Finish(offset.Value); }
        public static void FinishSizePrefixedSQLResponseColumnsBuffer(FlatBufferBuilder builder, Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.SQLResponseColumns> offset) { builder.FinishSizePrefixed(offset.Value); }
    };


}
