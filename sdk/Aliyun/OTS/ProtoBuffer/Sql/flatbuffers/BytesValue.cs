// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers
{

    using global::System;
    using Google.FlatBuffers;

    public struct BytesValue : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
        public static BytesValue GetRootAsBytesValue(ByteBuffer _bb) { return GetRootAsBytesValue(_bb, new BytesValue()); }
        public static BytesValue GetRootAsBytesValue(ByteBuffer _bb, BytesValue obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public BytesValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public sbyte Value(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
        public int ValueLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<sbyte> GetValueBytes() { return __p.__vector_as_span<sbyte>(4, 1); }
#else
        public ArraySegment<byte>? GetValueBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public sbyte[] GetValueArray() { return __p.__vector_as_array<sbyte>(4); }

        public static Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue> CreateBytesValue(FlatBufferBuilder builder,
            VectorOffset valueOffset = default(VectorOffset))
        {
            builder.StartTable(1);
            BytesValue.AddValue(builder, valueOffset);
            return BytesValue.EndBytesValue(builder);
        }

        public static void StartBytesValue(FlatBufferBuilder builder) { builder.StartTable(1); }
        public static void AddValue(FlatBufferBuilder builder, VectorOffset valueOffset) { builder.AddOffset(0, valueOffset.Value, 0); }
        public static VectorOffset CreateValueVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
        public static VectorOffset CreateValueVectorBlock(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
        public static void StartValueVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
        public static Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue> EndBytesValue(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue>(o);
        }
    };


}
