// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers
{

    using global::System;
    using Google.FlatBuffers;

    public struct ColumnValues : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
        public static ColumnValues GetRootAsColumnValues(ByteBuffer _bb) { return GetRootAsColumnValues(_bb, new ColumnValues()); }
        public static ColumnValues GetRootAsColumnValues(ByteBuffer _bb, ColumnValues obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public ColumnValues __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public bool IsNullvalues(int j) { int o = __p.__offset(4); return o != 0 ? 0 != __p.bb.Get(__p.__vector(o) + j * 1) : false; }
        public int IsNullvaluesLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<bool> GetIsNullvaluesBytes() { return __p.__vector_as_span<bool>(4, 1); }
#else
        public ArraySegment<byte>? GetIsNullvaluesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public bool[] GetIsNullvaluesArray() { return __p.__vector_as_array<bool>(4); }
        public long LongValues(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
        public int LongValuesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetLongValuesBytes() { return __p.__vector_as_span<long>(6, 8); }
#else
        public ArraySegment<byte>? GetLongValuesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
        public long[] GetLongValuesArray() { return __p.__vector_as_array<long>(6); }
        public bool BoolValues(int j) { int o = __p.__offset(8); return o != 0 ? 0 != __p.bb.Get(__p.__vector(o) + j * 1) : false; }
        public int BoolValuesLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<bool> GetBoolValuesBytes() { return __p.__vector_as_span<bool>(8, 1); }
#else
        public ArraySegment<byte>? GetBoolValuesBytes() { return __p.__vector_as_arraysegment(8); }
#endif
        public bool[] GetBoolValuesArray() { return __p.__vector_as_array<bool>(8); }
        public double DoubleValues(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(__p.__vector(o) + j * 8) : (double)0; }
        public int DoubleValuesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<double> GetDoubleValuesBytes() { return __p.__vector_as_span<double>(10, 8); }
#else
        public ArraySegment<byte>? GetDoubleValuesBytes() { return __p.__vector_as_arraysegment(10); }
#endif
        public double[] GetDoubleValuesArray() { return __p.__vector_as_array<double>(10); }
        public string StringValues(int j) { int o = __p.__offset(12); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
        public int StringValuesLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
        public com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue? BinaryValues(int j) { int o = __p.__offset(14); return o != 0 ? (com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue?)(new com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
        public int BinaryValuesLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
        public com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.RLEStringValues? RleStringValues { get { int o = __p.__offset(16); return o != 0 ? (com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.RLEStringValues?)(new com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.RLEStringValues()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

        public static Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.ColumnValues> CreateColumnValues(FlatBufferBuilder builder,
            VectorOffset is_nullvaluesOffset = default(VectorOffset),
            VectorOffset long_valuesOffset = default(VectorOffset),
            VectorOffset bool_valuesOffset = default(VectorOffset),
            VectorOffset double_valuesOffset = default(VectorOffset),
            VectorOffset string_valuesOffset = default(VectorOffset),
            VectorOffset binary_valuesOffset = default(VectorOffset),
            Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.RLEStringValues> rle_string_valuesOffset = default(Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.RLEStringValues>))
        {
            builder.StartTable(7);
            ColumnValues.AddRleStringValues(builder, rle_string_valuesOffset);
            ColumnValues.AddBinaryValues(builder, binary_valuesOffset);
            ColumnValues.AddStringValues(builder, string_valuesOffset);
            ColumnValues.AddDoubleValues(builder, double_valuesOffset);
            ColumnValues.AddBoolValues(builder, bool_valuesOffset);
            ColumnValues.AddLongValues(builder, long_valuesOffset);
            ColumnValues.AddIsNullvalues(builder, is_nullvaluesOffset);
            return ColumnValues.EndColumnValues(builder);
        }

        public static void StartColumnValues(FlatBufferBuilder builder) { builder.StartTable(7); }
        public static void AddIsNullvalues(FlatBufferBuilder builder, VectorOffset isNullvaluesOffset) { builder.AddOffset(0, isNullvaluesOffset.Value, 0); }
        public static VectorOffset CreateIsNullvaluesVector(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddBool(data[i]); return builder.EndVector(); }
        public static VectorOffset CreateIsNullvaluesVectorBlock(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
        public static void StartIsNullvaluesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
        public static void AddLongValues(FlatBufferBuilder builder, VectorOffset longValuesOffset) { builder.AddOffset(1, longValuesOffset.Value, 0); }
        public static VectorOffset CreateLongValuesVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
        public static VectorOffset CreateLongValuesVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
        public static void StartLongValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
        public static void AddBoolValues(FlatBufferBuilder builder, VectorOffset boolValuesOffset) { builder.AddOffset(2, boolValuesOffset.Value, 0); }
        public static VectorOffset CreateBoolValuesVector(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddBool(data[i]); return builder.EndVector(); }
        public static VectorOffset CreateBoolValuesVectorBlock(FlatBufferBuilder builder, bool[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
        public static void StartBoolValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
        public static void AddDoubleValues(FlatBufferBuilder builder, VectorOffset doubleValuesOffset) { builder.AddOffset(3, doubleValuesOffset.Value, 0); }
        public static VectorOffset CreateDoubleValuesVector(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddDouble(data[i]); return builder.EndVector(); }
        public static VectorOffset CreateDoubleValuesVectorBlock(FlatBufferBuilder builder, double[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
        public static void StartDoubleValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
        public static void AddStringValues(FlatBufferBuilder builder, VectorOffset stringValuesOffset) { builder.AddOffset(4, stringValuesOffset.Value, 0); }
        public static VectorOffset CreateStringValuesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
        public static VectorOffset CreateStringValuesVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
        public static void StartStringValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
        public static void AddBinaryValues(FlatBufferBuilder builder, VectorOffset binaryValuesOffset) { builder.AddOffset(5, binaryValuesOffset.Value, 0); }
        public static VectorOffset CreateBinaryValuesVector(FlatBufferBuilder builder, Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
        public static VectorOffset CreateBinaryValuesVectorBlock(FlatBufferBuilder builder, Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.BytesValue>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
        public static void StartBinaryValuesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
        public static void AddRleStringValues(FlatBufferBuilder builder, Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.RLEStringValues> rleStringValuesOffset) { builder.AddOffset(6, rleStringValuesOffset.Value, 0); }
        public static Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.ColumnValues> EndColumnValues(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<com.alicloud.openservices.tablestore.core.protocol.sql.flatbuffers.ColumnValues>(o);
        }
    };


}
