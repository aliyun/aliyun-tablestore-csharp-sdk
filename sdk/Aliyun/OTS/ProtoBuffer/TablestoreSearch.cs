// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.alicloud.openservices.tablestore.core.protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class TablestoreSearch {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery, global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery, global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery, global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery, global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor, global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery, global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ExistsQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ExistsQuery, global::com.alicloud.openservices.tablestore.core.protocol.ExistsQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ExistsQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Query, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Collapse, global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter, global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort, global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSort, global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sorter, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sort, global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery, global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet, global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest, global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse, global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleWordAnalyzerParameter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SingleWordAnalyzerParameter, global::com.alicloud.openservices.tablestore.core.protocol.SingleWordAnalyzerParameter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleWordAnalyzerParameter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SplitAnalyzerParameter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SplitAnalyzerParameter, global::com.alicloud.openservices.tablestore.core.protocol.SplitAnalyzerParameter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SplitAnalyzerParameter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FuzzyAnalyzerParameter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FuzzyAnalyzerParameter, global::com.alicloud.openservices.tablestore.core.protocol.FuzzyAnalyzerParameter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FuzzyAnalyzerParameter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema, global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting, global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SyncStat, global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MeteringInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo, global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MeteringInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ScanQuery__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery, global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ScanQuery__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanRequest, global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanRequest.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanResponse, global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanResponse.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPoint__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint, global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPoint__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Aggregation, global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregations__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Aggregations, global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregations__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBy__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBy, global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBy__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBys__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBys, global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBys__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregation, global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregation, global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MinAggregation, global::com.alicloud.openservices.tablestore.core.protocol.MinAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SumAggregation, global::com.alicloud.openservices.tablestore.core.protocol.SumAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CountAggregation, global::com.alicloud.openservices.tablestore.core.protocol.CountAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregation, global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregation, global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregation, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregation.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldRange__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldRange, global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldRange__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogram__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogram, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogram.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogram__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupKeySort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort, global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupKeySort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_RowCountSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort, global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_RowCountSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SubAggSort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort, global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SubAggSort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySorter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter, global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySorter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySort__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort, global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySort__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByField__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByField, global::com.alicloud.openservices.tablestore.core.protocol.GroupByField.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByField__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_Range__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Range, global::com.alicloud.openservices.tablestore.core.protocol.Range.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_Range__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRange__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRange, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRange.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRange__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilter, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilter.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistance__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistance, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistance.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistance__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MinAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.MinAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SumAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.SumAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CountAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.CountAggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult, global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResultItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResultItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResultItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResultItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResultItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResultItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResultItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResultItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBysResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBysResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramResult.Builder> internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramResult__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static TablestoreSearch() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chd0YWJsZXN0b3JlX3NlYXJjaC5wcm90bxIyY29tLmFsaWNsb3VkLm9wZW5z", 
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wisQEKCk1hdGNoUXVl", 
            "cnkSEgoKZmllbGRfbmFtZRgBIAEoCRIMCgR0ZXh0GAIgASgJEhwKFG1pbmlt", 
            "dW1fc2hvdWxkX21hdGNoGAMgASgFElMKCG9wZXJhdG9yGAQgASgOMkEuY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuUXVlcnlPcGVyYXRvchIOCgZ3ZWlnaHQYBSABKAIiRAoQTWF0Y2hQaHJh", 
            "c2VRdWVyeRISCgpmaWVsZF9uYW1lGAEgASgJEgwKBHRleHQYAiABKAkSDgoG", 
            "d2VpZ2h0GAMgASgCIg8KDU1hdGNoQWxsUXVlcnkiPQoJVGVybVF1ZXJ5EhIK", 
            "CmZpZWxkX25hbWUYASABKAkSDAoEdGVybRgCIAEoDBIOCgZ3ZWlnaHQYAyAB", 
            "KAIiPwoKVGVybXNRdWVyeRISCgpmaWVsZF9uYW1lGAEgASgJEg0KBXRlcm1z", 
            "GAIgAygMEg4KBndlaWdodBgDIAEoAiJ0CgpSYW5nZVF1ZXJ5EhIKCmZpZWxk", 
            "X25hbWUYASABKAkSEgoKcmFuZ2VfZnJvbRgCIAEoDBIQCghyYW5nZV90bxgD", 
            "IAEoDBIVCg1pbmNsdWRlX2xvd2VyGAQgASgIEhUKDWluY2x1ZGVfdXBwZXIY", 
            "BSABKAgiQQoLUHJlZml4UXVlcnkSEgoKZmllbGRfbmFtZRgBIAEoCRIOCgZw", 
            "cmVmaXgYAiABKAkSDgoGd2VpZ2h0GAMgASgCIkIKDVdpbGRjYXJkUXVlcnkS", 
            "EgoKZmllbGRfbmFtZRgBIAEoCRINCgV2YWx1ZRgCIAEoCRIOCgZ3ZWlnaHQY", 
            "AyABKAIi9QIKCUJvb2xRdWVyeRJPCgxtdXN0X3F1ZXJpZXMYASADKAsyOS5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5RdWVyeRJTChBtdXN0X25vdF9xdWVyaWVzGAIgAygLMjkuY29tLmFs", 
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu", 
            "UXVlcnkSUQoOZmlsdGVyX3F1ZXJpZXMYAyADKAsyOS5jb20uYWxpY2xvdWQu", 
            "b3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5RdWVyeRJR", 
            "Cg5zaG91bGRfcXVlcmllcxgEIAMoCzI5LmNvbS5hbGljbG91ZC5vcGVuc2Vy", 
            "dmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlF1ZXJ5EhwKFG1pbmlt", 
            "dW1fc2hvdWxkX21hdGNoGAUgASgFIlwKD0NvbnN0U2NvcmVRdWVyeRJJCgZm", 
            "aWx0ZXIYASABKAsyOS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl", 
            "c3RvcmUuY29yZS5wcm90b2NvbC5RdWVyeSImChBGaWVsZFZhbHVlRmFjdG9y", 
            "EhIKCmZpZWxkX25hbWUYASABKAkiwAEKEkZ1bmN0aW9uU2NvcmVRdWVyeRJI", 
            "CgVxdWVyeRgBIAEoCzI5LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFi", 
            "bGVzdG9yZS5jb3JlLnByb3RvY29sLlF1ZXJ5EmAKEmZpZWxkX3ZhbHVlX2Zh", 
            "Y3RvchgCIAEoCzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz", 
            "dG9yZS5jb3JlLnByb3RvY29sLkZpZWxkVmFsdWVGYWN0b3IiyAEKC05lc3Rl", 
            "ZFF1ZXJ5EgwKBHBhdGgYASABKAkSSAoFcXVlcnkYAiABKAsyOS5jb20uYWxp", 
            "Y2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5R", 
            "dWVyeRJRCgpzY29yZV9tb2RlGAMgASgOMj0uY29tLmFsaWNsb3VkLm9wZW5z", 
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU2NvcmVNb2RlEg4K", 
            "BndlaWdodBgEIAEoAiJRChNHZW9Cb3VuZGluZ0JveFF1ZXJ5EhIKCmZpZWxk", 
            "X25hbWUYASABKAkSEAoIdG9wX2xlZnQYAiABKAkSFAoMYm90dG9tX3JpZ2h0", 
            "GAMgASgJIk4KEEdlb0Rpc3RhbmNlUXVlcnkSEgoKZmllbGRfbmFtZRgBIAEo", 
            "CRIUCgxjZW50ZXJfcG9pbnQYAiABKAkSEAoIZGlzdGFuY2UYAyABKAEiNQoP", 
            "R2VvUG9seWdvblF1ZXJ5EhIKCmZpZWxkX25hbWUYASABKAkSDgoGcG9pbnRz", 
            "GAIgAygJIiEKC0V4aXN0c1F1ZXJ5EhIKCmZpZWxkX25hbWUYASABKAkiYwoF", 
            "UXVlcnkSSwoEdHlwZRgBIAEoDjI9LmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlF1ZXJ5VHlwZRINCgVxdWVy", 
            "eRgCIAEoDCIeCghDb2xsYXBzZRISCgpmaWVsZF9uYW1lGAEgASgJImcKDE5l", 
            "c3RlZEZpbHRlchIMCgRwYXRoGAEgASgJEkkKBmZpbHRlchgCIAEoCzI5LmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLlF1ZXJ5IlkKCVNjb3JlU29ydBJMCgVvcmRlchgBIAEoDjI9LmNvbS5h", 
            "bGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29s", 
            "LlNvcnRPcmRlciJeCg5QcmltYXJ5S2V5U29ydBJMCgVvcmRlchgBIAEoDjI9", 
            "LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnBy", 
            "b3RvY29sLlNvcnRPcmRlciLAAgoJRmllbGRTb3J0EhIKCmZpZWxkX25hbWUY", 
            "ASABKAkSTAoFb3JkZXIYAiABKA4yPS5jb20uYWxpY2xvdWQub3BlbnNlcnZp", 
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Tb3J0T3JkZXISSgoEbW9k", 
            "ZRgDIAEoDjI8LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9y", 
            "ZS5jb3JlLnByb3RvY29sLlNvcnRNb2RlElcKDW5lc3RlZF9maWx0ZXIYBCAB", 
            "KAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29y", 
            "ZS5wcm90b2NvbC5OZXN0ZWRGaWx0ZXISFQoNbWlzc2luZ192YWx1ZRgFIAEo", 
            "DBIVCg1taXNzaW5nX2ZpZWxkGAYgASgJIoQDCg9HZW9EaXN0YW5jZVNvcnQS", 
            "EgoKZmllbGRfbmFtZRgBIAEoCRIOCgZwb2ludHMYAiADKAkSTAoFb3JkZXIY", 
            "AyABKA4yPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5Tb3J0T3JkZXISSgoEbW9kZRgEIAEoDjI8LmNvbS5h", 
            "bGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29s", 
            "LlNvcnRNb2RlEloKDWRpc3RhbmNlX3R5cGUYBSABKA4yQy5jb20uYWxpY2xv", 
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5HZW9E", 
            "aXN0YW5jZVR5cGUSVwoNbmVzdGVkX2ZpbHRlchgGIAEoCzJALmNvbS5hbGlj", 
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLk5l", 
            "c3RlZEZpbHRlciLjAgoGU29ydGVyElEKCmZpZWxkX3NvcnQYASABKAsyPS5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5GaWVsZFNvcnQSXgoRZ2VvX2Rpc3RhbmNlX3NvcnQYAiABKAsyQy5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5HZW9EaXN0YW5jZVNvcnQSUQoKc2NvcmVfc29ydBgDIAEoCzI9LmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLlNjb3JlU29ydBJTCgdwa19zb3J0GAQgASgLMkIuY29tLmFsaWNsb3Vk", 
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUHJpbWFy", 
            "eUtleVNvcnQiUgoEU29ydBJKCgZzb3J0ZXIYASADKAsyOi5jb20uYWxpY2xv", 
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Tb3J0", 
            "ZXIi1QMKC1NlYXJjaFF1ZXJ5Eg4KBm9mZnNldBgBIAEoBRINCgVsaW1pdBgC", 
            "IAEoBRJICgVxdWVyeRgEIAEoCzI5LmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlF1ZXJ5Ek4KCGNvbGxhcHNl", 
            "GAUgASgLMjwuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3Jl", 
            "LmNvcmUucHJvdG9jb2wuQ29sbGFwc2USRgoEc29ydBgGIAEoCzI4LmNvbS5h", 
            "bGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29s", 
            "LlNvcnQSFQoNZ2V0VG90YWxDb3VudBgIIAEoCBINCgV0b2tlbhgJIAEoDBJO", 
            "CgRhZ2dzGAogASgLMkAuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJs", 
            "ZXN0b3JlLmNvcmUucHJvdG9jb2wuQWdncmVnYXRpb25zEk8KCWdyb3VwX2J5", 
            "cxgLIAEoCzI8LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9y", 
            "ZS5jb3JlLnByb3RvY29sLkdyb3VwQnlzIn8KDENvbHVtbnNUb0dldBJZCgty", 
            "ZXR1cm5fdHlwZRgBIAEoDjJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu", 
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbHVtblJldHVyblR5cGUSFAoM", 
            "Y29sdW1uX25hbWVzGAIgAygJItMBCg1TZWFyY2hSZXF1ZXN0EhIKCnRhYmxl", 
            "X25hbWUYASABKAkSEgoKaW5kZXhfbmFtZRgCIAEoCRJYCg5jb2x1bW5zX3Rv", 
            "X2dldBgDIAEoCzJALmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz", 
            "dG9yZS5jb3JlLnByb3RvY29sLkNvbHVtbnNUb0dldBIUCgxzZWFyY2hfcXVl", 
            "cnkYBCABKAwSFgoOcm91dGluZ192YWx1ZXMYBSADKAwSEgoKdGltZW91dF9t", 
            "cxgGIAEoBSKBAQoOU2VhcmNoUmVzcG9uc2USEgoKdG90YWxfaGl0cxgBIAEo", 
            "AxIMCgRyb3dzGAIgAygMEhgKEGlzX2FsbF9zdWNjZWVkZWQYAyABKAgSEgoK", 
            "bmV4dF90b2tlbhgGIAEoDBIMCgRhZ2dzGAcgASgMEhEKCWdyb3VwX2J5cxgI", 
            "IAEoDCJLChtTaW5nbGVXb3JkQW5hbHl6ZXJQYXJhbWV0ZXISFgoOY2FzZV9z", 
            "ZW5zaXRpdmUYASABKAgSFAoMZGVsaW1pdF93b3JkGAIgASgIIisKFlNwbGl0", 
            "QW5hbHl6ZXJQYXJhbWV0ZXISEQoJZGVsaW1pdGVyGAEgASgJIj4KFkZ1enp5", 
            "QW5hbHl6ZXJQYXJhbWV0ZXISEQoJbWluX2NoYXJzGAEgASgFEhEKCW1heF9j", 
            "aGFycxgCIAEoBSLkAwoLRmllbGRTY2hlbWESEgoKZmllbGRfbmFtZRgBIAEo", 
            "CRJRCgpmaWVsZF90eXBlGAIgASgOMj0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2", 
            "aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuRmllbGRUeXBlElcKDWlu", 
            "ZGV4X29wdGlvbnMYAyABKA4yQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2Vz", 
            "LnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5JbmRleE9wdGlvbnMSEAoIYW5h", 
            "bHl6ZXIYBCABKAkSDQoFaW5kZXgYBSABKAgSEgoKZG9jX3ZhbHVlcxgGIAEo", 
            "CBINCgVzdG9yZRgHIAEoCBJWCg1maWVsZF9zY2hlbWFzGAggAygLMj8uY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuRmllbGRTY2hlbWESEAoIaXNfYXJyYXkYCSABKAgSGgoSYW5hbHl6ZXJf", 
            "cGFyYW1ldGVyGAogASgMEhgKEGlzX3ZpcnR1YWxfZmllbGQYCyABKAgSGgoS", 
            "c291cmNlX2ZpZWxkX25hbWVzGAwgAygJEhUKDWRhdGVfZm9ybWF0ZXMYDSAD", 
            "KAkijAIKC0luZGV4U2NoZW1hElYKDWZpZWxkX3NjaGVtYXMYASADKAsyPy5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5GaWVsZFNjaGVtYRJXCg1pbmRleF9zZXR0aW5nGAIgASgLMkAuY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuSW5kZXhTZXR0aW5nEkwKCmluZGV4X3NvcnQYAyABKAsyOC5jb20uYWxp", 
            "Y2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5T", 
            "b3J0ImAKDEluZGV4U2V0dGluZxIYChBudW1iZXJfb2Zfc2hhcmRzGAEgASgF", 
            "EhYKDnJvdXRpbmdfZmllbGRzGAIgAygJEh4KFnJvdXRpbmdfcGFydGl0aW9u", 
            "X3NpemUYAyABKAUixAEKGENyZWF0ZVNlYXJjaEluZGV4UmVxdWVzdBISCgp0", 
            "YWJsZV9uYW1lGAEgAigJEhIKCmluZGV4X25hbWUYAiACKAkSTwoGc2NoZW1h", 
            "GAMgASgLMj8uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3Jl", 
            "LmNvcmUucHJvdG9jb2wuSW5kZXhTY2hlbWESGQoRc291cmNlX2luZGV4X25h", 
            "bWUYBCABKAkSFAoMdGltZV90b19saXZlGAUgASgFIhsKGUNyZWF0ZVNlYXJj", 
            "aEluZGV4UmVzcG9uc2UiMwoJSW5kZXhJbmZvEhIKCnRhYmxlX25hbWUYASAB", 
            "KAkSEgoKaW5kZXhfbmFtZRgCIAEoCSIsChZMaXN0U2VhcmNoSW5kZXhSZXF1", 
            "ZXN0EhIKCnRhYmxlX25hbWUYASABKAkiaQoXTGlzdFNlYXJjaEluZGV4UmVz", 
            "cG9uc2USTgoHaW5kaWNlcxgBIAMoCzI9LmNvbS5hbGljbG91ZC5vcGVuc2Vy", 
            "dmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkluZGV4SW5mbyJCChhE", 
            "ZWxldGVTZWFyY2hJbmRleFJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEoCRIS", 
            "CgppbmRleF9uYW1lGAIgASgJIhsKGURlbGV0ZVNlYXJjaEluZGV4UmVzcG9u", 
            "c2UifQoIU3luY1N0YXQSUQoKc3luY19waGFzZRgBIAEoDjI9LmNvbS5hbGlj", 
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlN5", 
            "bmNQaGFzZRIeChZjdXJyZW50X3N5bmNfdGltZXN0YW1wGAIgASgDImQKDE1l", 
            "dGVyaW5nSW5mbxIUCgxzdG9yYWdlX3NpemUYASABKAMSEQoJcm93X2NvdW50", 
            "GAIgASgDEhgKEHJlc2VydmVkX3JlYWRfY3UYAyABKAMSEQoJdGltZXN0YW1w", 
            "GAQgASgDIkQKGkRlc2NyaWJlU2VhcmNoSW5kZXhSZXF1ZXN0EhIKCnRhYmxl", 
            "X25hbWUYASABKAkSEgoKaW5kZXhfbmFtZRgCIAEoCSLfAgobRGVzY3JpYmVT", 
            "ZWFyY2hJbmRleFJlc3BvbnNlEk8KBnNjaGVtYRgBIAEoCzI/LmNvbS5hbGlj", 
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLklu", 
            "ZGV4U2NoZW1hEk8KCXN5bmNfc3RhdBgCIAEoCzI8LmNvbS5hbGljbG91ZC5v", 
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlN5bmNTdGF0", 
            "ElcKDW1ldGVyaW5nX2luZm8YAyABKAsyQC5jb20uYWxpY2xvdWQub3BlbnNl", 
            "cnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5NZXRlcmluZ0luZm8S", 
            "GgoSYnJvdGhlcl9pbmRleF9uYW1lGAQgASgJEhMKC2NyZWF0ZV90aW1lGAYg", 
            "ASgDEhQKDHRpbWVfdG9fbGl2ZRgHIAEoBSJYChhVcGRhdGVTZWFyY2hJbmRl", 
            "eFJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAEoCRISCgppbmRleF9uYW1lGAIg", 
            "ASgJEhQKDHRpbWVfdG9fbGl2ZRgFIAEoBSIbChlVcGRhdGVTZWFyY2hJbmRl", 
            "eFJlc3BvbnNlIrkBCglTY2FuUXVlcnkSSAoFcXVlcnkYASABKAsyOS5jb20u", 
            "YWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2Nv", 
            "bC5RdWVyeRINCgVsaW1pdBgCIAEoBRISCgphbGl2ZV90aW1lGAMgASgFEg0K", 
            "BXRva2VuGAQgASgMEhsKE2N1cnJlbnRfcGFyYWxsZWxfaWQYBSABKAUSEwoL", 
            "bWF4X3BhcmFsbGUYBiABKAUikgIKE1BhcmFsbGVsU2NhblJlcXVlc3QSEgoK", 
            "dGFibGVfbmFtZRgBIAEoCRISCgppbmRleF9uYW1lGAIgASgJElgKDmNvbHVt", 
            "bnNfdG9fZ2V0GAMgASgLMkAuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50", 
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQ29sdW1uc1RvR2V0EhIKCnNlc3Np", 
            "b25faWQYBCABKAwSUQoKc2Nhbl9xdWVyeRgFIAEoCzI9LmNvbS5hbGljbG91", 
            "ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlNjYW5R", 
            "dWVyeRISCgp0aW1lb3V0X21zGAYgASgFIjgKFFBhcmFsbGVsU2NhblJlc3Bv", 
            "bnNlEgwKBHJvd3MYASADKAwSEgoKbmV4dF90b2tlbhgCIAEoDCIkCghHZW9Q", 
            "b2ludBILCgNsYXQYASABKAESCwoDbG9uGAIgASgBInwKC0FnZ3JlZ2F0aW9u", 
            "EgwKBG5hbWUYASABKAkSUQoEdHlwZRgCIAEoDjJDLmNvbS5hbGljbG91ZC5v", 
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkFnZ3JlZ2F0", 
            "aW9uVHlwZRIMCgRib2R5GAMgASgMIl0KDEFnZ3JlZ2F0aW9ucxJNCgRhZ2dz", 
            "GAEgAygLMj8uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3Jl", 
            "LmNvcmUucHJvdG9jb2wuQWdncmVnYXRpb24idAoHR3JvdXBCeRIMCgRuYW1l", 
            "GAEgASgJEk0KBHR5cGUYAiABKA4yPy5jb20uYWxpY2xvdWQub3BlbnNlcnZp", 
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Hcm91cEJ5VHlwZRIMCgRi", 
            "b2R5GAMgASgMIloKCEdyb3VwQnlzEk4KCWdyb3VwX2J5cxgBIAMoCzI7LmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLkdyb3VwQnkiNQoOQXZnQWdncmVnYXRpb24SEgoKZmllbGRfbmFtZRgB", 
            "IAEoCRIPCgdtaXNzaW5nGAIgASgMIjUKDk1heEFnZ3JlZ2F0aW9uEhIKCmZp", 
            "ZWxkX25hbWUYASABKAkSDwoHbWlzc2luZxgCIAEoDCI1Cg5NaW5BZ2dyZWdh", 
            "dGlvbhISCgpmaWVsZF9uYW1lGAEgASgJEg8KB21pc3NpbmcYAiABKAwiNQoO", 
            "U3VtQWdncmVnYXRpb24SEgoKZmllbGRfbmFtZRgBIAEoCRIPCgdtaXNzaW5n", 
            "GAIgASgMIiYKEENvdW50QWdncmVnYXRpb24SEgoKZmllbGRfbmFtZRgBIAEo", 
            "CSI/ChhEaXN0aW5jdENvdW50QWdncmVnYXRpb24SEgoKZmllbGRfbmFtZRgB", 
            "IAEoCRIPCgdtaXNzaW5nGAIgASgMImsKElRvcFJvd3NBZ2dyZWdhdGlvbhIN", 
            "CgVsaW1pdBgBIAEoBRJGCgRzb3J0GAIgASgLMjguY29tLmFsaWNsb3VkLm9w", 
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU29ydCJSChZQ", 
            "ZXJjZW50aWxlc0FnZ3JlZ2F0aW9uEhIKCmZpZWxkX25hbWUYASABKAkSEwoL", 
            "cGVyY2VudGlsZXMYAiADKAESDwoHbWlzc2luZxgDIAEoDCImCgpGaWVsZFJh", 
            "bmdlEgsKA21pbhgBIAEoDBILCgNtYXgYAiABKAwirQMKEEdyb3VwQnlIaXN0", 
            "b2dyYW0SEgoKZmllbGRfbmFtZRgBIAEoCRIQCghpbnRlcnZhbBgCIAEoDBIP", 
            "CgdtaXNzaW5nGAMgASgMEhUKDW1pbl9kb2NfY291bnQYBCABKAMSTQoEc29y", 
            "dBgFIAEoCzI/LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9y", 
            "ZS5jb3JlLnByb3RvY29sLkdyb3VwQnlTb3J0ElMKC2ZpZWxkX3JhbmdlGAYg", 
            "ASgLMj4uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNv", 
            "cmUucHJvdG9jb2wuRmllbGRSYW5nZRJSCghzdWJfYWdncxgHIAEoCzJALmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLkFnZ3JlZ2F0aW9ucxJTCg1zdWJfZ3JvdXBfYnlzGAggASgLMjwuY29t", 
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j", 
            "b2wuR3JvdXBCeXMiXAoMR3JvdXBLZXlTb3J0EkwKBW9yZGVyGAEgASgOMj0u", 
            "Y29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJv", 
            "dG9jb2wuU29ydE9yZGVyIlwKDFJvd0NvdW50U29ydBJMCgVvcmRlchgBIAEo", 
            "DjI9LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3Jl", 
            "LnByb3RvY29sLlNvcnRPcmRlciJwCgpTdWJBZ2dTb3J0EhQKDHN1Yl9hZ2df", 
            "bmFtZRgBIAEoCRJMCgVvcmRlchgCIAEoDjI9LmNvbS5hbGljbG91ZC5vcGVu", 
            "c2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlNvcnRPcmRlciKZ", 
            "AgoNR3JvdXBCeVNvcnRlchJYCg5ncm91cF9rZXlfc29ydBgBIAEoCzJALmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLkdyb3VwS2V5U29ydBJYCg5yb3dfY291bnRfc29ydBgCIAEoCzJALmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLlJvd0NvdW50U29ydBJUCgxzdWJfYWdnX3NvcnQYAyABKAsyPi5jb20u", 
            "YWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2Nv", 
            "bC5TdWJBZ2dTb3J0ImEKC0dyb3VwQnlTb3J0ElIKB3NvcnRlcnMYASADKAsy", 
            "QS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5w", 
            "cm90b2NvbC5Hcm91cEJ5U29ydGVyIr8CCgxHcm91cEJ5RmllbGQSEgoKZmll", 
            "bGRfbmFtZRgBIAEoCRIMCgRzaXplGAIgASgFEk0KBHNvcnQYAyABKAsyPy5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5Hcm91cEJ5U29ydBJSCghzdWJfYWdncxgEIAEoCzJALmNvbS5hbGlj", 
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkFn", 
            "Z3JlZ2F0aW9ucxJTCg1zdWJfZ3JvdXBfYnlzGAUgASgLMjwuY29tLmFsaWNs", 
            "b3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuR3Jv", 
            "dXBCeXMSFQoNbWluX2RvY19jb3VudBgGIAEoAyIhCgVSYW5nZRIMCgRmcm9t", 
            "GAEgASgBEgoKAnRvGAIgASgBIpYCCgxHcm91cEJ5UmFuZ2USEgoKZmllbGRf", 
            "bmFtZRgBIAEoCRJJCgZyYW5nZXMYAiADKAsyOS5jb20uYWxpY2xvdWQub3Bl", 
            "bnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5SYW5nZRJSCghz", 
            "dWJfYWdncxgDIAEoCzJALmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFi", 
            "bGVzdG9yZS5jb3JlLnByb3RvY29sLkFnZ3JlZ2F0aW9ucxJTCg1zdWJfZ3Jv", 
            "dXBfYnlzGAQgASgLMjwuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJs", 
            "ZXN0b3JlLmNvcmUucHJvdG9jb2wuR3JvdXBCeXMihAIKDUdyb3VwQnlGaWx0", 
            "ZXISSgoHZmlsdGVycxgBIAMoCzI5LmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlF1ZXJ5ElIKCHN1Yl9hZ2dz", 
            "GAIgASgLMkAuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3Jl", 
            "LmNvcmUucHJvdG9jb2wuQWdncmVnYXRpb25zElMKDXN1Yl9ncm91cF9ieXMY", 
            "AyABKAsyPC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5Hcm91cEJ5cyLqAgoSR3JvdXBCeUdlb0Rpc3RhbmNl", 
            "EhIKCmZpZWxkX25hbWUYASABKAkSTAoGb3JpZ2luGAIgASgLMjwuY29tLmFs", 
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu", 
            "R2VvUG9pbnQSSQoGcmFuZ2VzGAMgAygLMjkuY29tLmFsaWNsb3VkLm9wZW5z", 
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUmFuZ2USUgoIc3Vi", 
            "X2FnZ3MYBCABKAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl", 
            "c3RvcmUuY29yZS5wcm90b2NvbC5BZ2dyZWdhdGlvbnMSUwoNc3ViX2dyb3Vw", 
            "X2J5cxgFIAEoCzI8LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz", 
            "dG9yZS5jb3JlLnByb3RvY29sLkdyb3VwQnlzIiUKFEF2Z0FnZ3JlZ2F0aW9u", 
            "UmVzdWx0Eg0KBXZhbHVlGAEgASgBIigKGFRvcFJvd3NBZ2dyZWdhdGlvblJl", 
            "c3VsdBIMCgRyb3dzGAEgAygMIjgKGlBlcmNlbnRpbGVzQWdncmVnYXRpb25J", 
            "dGVtEgsKA2tleRgBIAEoARINCgV2YWx1ZRgCIAEoDCKVAQocUGVyY2VudGls", 
            "ZXNBZ2dyZWdhdGlvblJlc3VsdBJ1Ch1wZXJjZW50aWxlc19hZ2dyZWdhdGlv", 
            "bl9pdGVtcxgBIAMoCzJOLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFi", 
            "bGVzdG9yZS5jb3JlLnByb3RvY29sLlBlcmNlbnRpbGVzQWdncmVnYXRpb25J", 
            "dGVtIi8KHkRpc3RpbmN0Q291bnRBZ2dyZWdhdGlvblJlc3VsdBINCgV2YWx1", 
            "ZRgBIAEoAyIlChRNYXhBZ2dyZWdhdGlvblJlc3VsdBINCgV2YWx1ZRgBIAEo", 
            "ASIlChRNaW5BZ2dyZWdhdGlvblJlc3VsdBINCgV2YWx1ZRgBIAEoASIlChRT", 
            "dW1BZ2dyZWdhdGlvblJlc3VsdBINCgV2YWx1ZRgBIAEoASInChZDb3VudEFn", 
            "Z3JlZ2F0aW9uUmVzdWx0Eg0KBXZhbHVlGAEgASgDIogBChFBZ2dyZWdhdGlv", 
            "blJlc3VsdBIMCgRuYW1lGAEgASgJElEKBHR5cGUYAiABKA4yQy5jb20uYWxp", 
            "Y2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5B", 
            "Z2dyZWdhdGlvblR5cGUSEgoKYWdnX3Jlc3VsdBgDIAEoDCJwChJBZ2dyZWdh", 
            "dGlvbnNSZXN1bHQSWgoLYWdnX3Jlc3VsdHMYASADKAsyRS5jb20uYWxpY2xv", 
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5BZ2dy", 
            "ZWdhdGlvblJlc3VsdCL7AQoWR3JvdXBCeUZpZWxkUmVzdWx0SXRlbRILCgNr", 
            "ZXkYASABKAkSEQoJcm93X2NvdW50GAIgASgDEl8KD3N1Yl9hZ2dzX3Jlc3Vs", 
            "dBgDIAEoCzJGLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9y", 
            "ZS5jb3JlLnByb3RvY29sLkFnZ3JlZ2F0aW9uc1Jlc3VsdBJgChRzdWJfZ3Jv", 
            "dXBfYnlzX3Jlc3VsdBgEIAEoCzJCLmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj", 
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkdyb3VwQnlzUmVzdWx0IoUB", 
            "ChJHcm91cEJ5RmllbGRSZXN1bHQSbwobZ3JvdXBfYnlfZmllbGRfcmVzdWx0", 
            "X2l0ZW1zGAEgAygLMkouY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJs", 
            "ZXN0b3JlLmNvcmUucHJvdG9jb2wuR3JvdXBCeUZpZWxkUmVzdWx0SXRlbSKI", 
            "AgoWR3JvdXBCeVJhbmdlUmVzdWx0SXRlbRIMCgRmcm9tGAEgASgBEgoKAnRv", 
            "GAIgASgBEhEKCXJvd19jb3VudBgDIAEoAxJfCg9zdWJfYWdnc19yZXN1bHQY", 
            "BCABKAsyRi5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5BZ2dyZWdhdGlvbnNSZXN1bHQSYAoUc3ViX2dyb3Vw", 
            "X2J5c19yZXN1bHQYBSABKAsyQi5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2Vz", 
            "LnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Hcm91cEJ5c1Jlc3VsdCKFAQoS", 
            "R3JvdXBCeVJhbmdlUmVzdWx0Em8KG2dyb3VwX2J5X3JhbmdlX3Jlc3VsdF9p", 
            "dGVtcxgBIAMoCzJKLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz", 
            "dG9yZS5jb3JlLnByb3RvY29sLkdyb3VwQnlSYW5nZVJlc3VsdEl0ZW0ijgIK", 
            "HEdyb3VwQnlHZW9EaXN0YW5jZVJlc3VsdEl0ZW0SDAoEZnJvbRgBIAEoARIK", 
            "CgJ0bxgCIAEoARIRCglyb3dfY291bnQYAyABKAMSXwoPc3ViX2FnZ3NfcmVz", 
            "dWx0GAQgASgLMkYuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0", 
            "b3JlLmNvcmUucHJvdG9jb2wuQWdncmVnYXRpb25zUmVzdWx0EmAKFHN1Yl9n", 
            "cm91cF9ieXNfcmVzdWx0GAUgASgLMkIuY29tLmFsaWNsb3VkLm9wZW5zZXJ2", 
            "aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuR3JvdXBCeXNSZXN1bHQi", 
            "mAEKGEdyb3VwQnlHZW9EaXN0YW5jZVJlc3VsdBJ8CiJncm91cF9ieV9nZW9f", 
            "ZGlzdGFuY2VfcmVzdWx0X2l0ZW1zGAEgAygLMlAuY29tLmFsaWNsb3VkLm9w", 
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuR3JvdXBCeUdl", 
            "b0Rpc3RhbmNlUmVzdWx0SXRlbSLvAQoXR3JvdXBCeUZpbHRlclJlc3VsdEl0", 
            "ZW0SEQoJcm93X2NvdW50GAEgASgDEl8KD3N1Yl9hZ2dzX3Jlc3VsdBgCIAEo", 
            "CzJGLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3Jl", 
            "LnByb3RvY29sLkFnZ3JlZ2F0aW9uc1Jlc3VsdBJgChRzdWJfZ3JvdXBfYnlz", 
            "X3Jlc3VsdBgDIAEoCzJCLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFi", 
            "bGVzdG9yZS5jb3JlLnByb3RvY29sLkdyb3VwQnlzUmVzdWx0IogBChNHcm91", 
            "cEJ5RmlsdGVyUmVzdWx0EnEKHGdyb3VwX2J5X2ZpbHRlcl9yZXN1bHRfaXRl", 
            "bXMYASADKAsySy5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3Rv", 
            "cmUuY29yZS5wcm90b2NvbC5Hcm91cEJ5RmlsdGVyUmVzdWx0SXRlbSKFAQoN", 
            "R3JvdXBCeVJlc3VsdBIMCgRuYW1lGAEgASgJEk0KBHR5cGUYAiABKA4yPy5j", 
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90", 
            "b2NvbC5Hcm91cEJ5VHlwZRIXCg9ncm91cF9ieV9yZXN1bHQYAyABKAwibQoO", 
            "R3JvdXBCeXNSZXN1bHQSWwoQZ3JvdXBfYnlfcmVzdWx0cxgBIAMoCzJBLmNv", 
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv", 
            "Y29sLkdyb3VwQnlSZXN1bHQi9QEKFEdyb3VwQnlIaXN0b2dyYW1JdGVtEgsK", 
            "A2tleRgBIAEoDBINCgV2YWx1ZRgCIAEoAxJfCg9zdWJfYWdnc19yZXN1bHQY", 
            "AyABKAsyRi5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu", 
            "Y29yZS5wcm90b2NvbC5BZ2dyZWdhdGlvbnNSZXN1bHQSYAoUc3ViX2dyb3Vw", 
            "X2J5c19yZXN1bHQYBCABKAsyQi5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2Vz", 
            "LnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Hcm91cEJ5c1Jlc3VsdCKDAQoW", 
            "R3JvdXBCeUhpc3RvZ3JhbVJlc3VsdBJpChdncm91cF9ieV9oaXN0b2dyYV9p", 
            "dGVtcxgBIAMoCzJILmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz", 
            "dG9yZS5jb3JlLnByb3RvY29sLkdyb3VwQnlIaXN0b2dyYW1JdGVtKtECCglR", 
            "dWVyeVR5cGUSDwoLTUFUQ0hfUVVFUlkQARIWChJNQVRDSF9QSFJBU0VfUVVF", 
            "UlkQAhIOCgpURVJNX1FVRVJZEAMSDwoLUkFOR0VfUVVFUlkQBBIQCgxQUkVG", 
            "SVhfUVVFUlkQBRIOCgpCT09MX1FVRVJZEAYSFQoRQ09OU1RfU0NPUkVfUVVF", 
            "UlkQBxIYChRGVU5DVElPTl9TQ09SRV9RVUVSWRAIEhAKDE5FU1RFRF9RVUVS", 
            "WRAJEhIKDldJTERDQVJEX1FVRVJZEAoSEwoPTUFUQ0hfQUxMX1FVRVJZEAsS", 
            "GgoWR0VPX0JPVU5ESU5HX0JPWF9RVUVSWRAMEhYKEkdFT19ESVNUQU5DRV9R", 
            "VUVSWRANEhUKEUdFT19QT0xZR09OX1FVRVJZEA4SDwoLVEVSTVNfUVVFUlkQ", 
            "DxIQCgxFWElTVFNfUVVFUlkQECogCg1RdWVyeU9wZXJhdG9yEgYKAk9SEAES", 
            "BwoDQU5EEAIqcgoJU2NvcmVNb2RlEhMKD1NDT1JFX01PREVfTk9ORRABEhIK", 
            "DlNDT1JFX01PREVfQVZHEAISEgoOU0NPUkVfTU9ERV9NQVgQAxIUChBTQ09S", 
            "RV9NT0RFX1RPVEFMEAQSEgoOU0NPUkVfTU9ERV9NSU4QBSo0CglTb3J0T3Jk", 
            "ZXISEgoOU09SVF9PUkRFUl9BU0MQABITCg9TT1JUX09SREVSX0RFU0MQASpD", 
            "CghTb3J0TW9kZRIRCg1TT1JUX01PREVfTUlOEAASEQoNU09SVF9NT0RFX01B", 
            "WBABEhEKDVNPUlRfTU9ERV9BVkcQAio/Cg9HZW9EaXN0YW5jZVR5cGUSFAoQ", 
            "R0VPX0RJU1RBTkNFX0FSQxAAEhYKEkdFT19ESVNUQU5DRV9QTEFORRABKmQK", 
            "EENvbHVtblJldHVyblR5cGUSDgoKUkVUVVJOX0FMTBABEhQKEFJFVFVSTl9T", 
            "UEVDSUZJRUQQAhIPCgtSRVRVUk5fTk9ORRADEhkKFVJFVFVSTl9BTExfRlJP", 
            "TV9JTkRFWBAEKj8KDEluZGV4T3B0aW9ucxIICgRET0NTEAESCQoFRlJFUVMQ", 
            "AhINCglQT1NJVElPTlMQAxILCgdPRkZTRVRTEAQqagoJRmllbGRUeXBlEggK", 
            "BExPTkcQARIKCgZET1VCTEUQAhILCgdCT09MRUFOEAMSCwoHS0VZV09SRBAE", 
            "EggKBFRFWFQQBRIKCgZORVNURUQQBhINCglHRU9fUE9JTlQQBxIICgREQVRF", 
            "EAgqHwoJU3luY1BoYXNlEggKBEZVTEwQARIICgRJTkNSEAIqkwEKD0FnZ3Jl", 
            "Z2F0aW9uVHlwZRILCgdBR0dfQVZHEAESFgoSQUdHX0RJU1RJTkNUX0NPVU5U", 
            "EAYSCwoHQUdHX01BWBACEgsKB0FHR19NSU4QAxILCgdBR0dfU1VNEAQSDQoJ", 
            "QUdHX0NPVU5UEAUSEAoMQUdHX1RPUF9ST1dTEAcSEwoPQUdHX1BFUkNFTlRJ", 
            "TEVTEAgqfQoLR3JvdXBCeVR5cGUSEgoOR1JPVVBfQllfRklFTEQQARISCg5H", 
            "Uk9VUF9CWV9SQU5HRRACEhMKD0dST1VQX0JZX0ZJTFRFUhADEhkKFUdST1VQ", 
          "X0JZX0dFT19ESVNUQU5DRRAEEhYKEkdST1VQX0JZX0hJU1RPR1JBTRAF"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor,
                new string[] { "FieldName", "Text", "MinimumShouldMatch", "Operator", "Weight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor,
                new string[] { "FieldName", "Text", "Weight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery, global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor,
                new string[] { "FieldName", "Term", "Weight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery, global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor,
                new string[] { "FieldName", "Terms", "Weight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor = Descriptor.MessageTypes[5];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery, global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor,
                new string[] { "FieldName", "RangeFrom", "RangeTo", "IncludeLower", "IncludeUpper", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor = Descriptor.MessageTypes[6];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery, global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor,
                new string[] { "FieldName", "Prefix", "Weight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor = Descriptor.MessageTypes[7];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery, global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor,
                new string[] { "FieldName", "Value", "Weight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor = Descriptor.MessageTypes[8];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery, global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor,
                new string[] { "MustQueries", "MustNotQueries", "FilterQueries", "ShouldQueries", "MinimumShouldMatch", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor = Descriptor.MessageTypes[9];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor,
                new string[] { "Filter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor = Descriptor.MessageTypes[10];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor, global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor,
                new string[] { "FieldName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor = Descriptor.MessageTypes[11];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery, global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor,
                new string[] { "Query", "FieldValueFactor", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor = Descriptor.MessageTypes[12];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery, global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor,
                new string[] { "Path", "Query", "ScoreMode", "Weight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor = Descriptor.MessageTypes[13];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor,
                new string[] { "FieldName", "TopLeft", "BottomRight", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor = Descriptor.MessageTypes[14];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor,
                new string[] { "FieldName", "CenterPoint", "Distance", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor = Descriptor.MessageTypes[15];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery, global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor,
                new string[] { "FieldName", "Points", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ExistsQuery__Descriptor = Descriptor.MessageTypes[16];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ExistsQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ExistsQuery, global::com.alicloud.openservices.tablestore.core.protocol.ExistsQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ExistsQuery__Descriptor,
                new string[] { "FieldName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor = Descriptor.MessageTypes[17];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Query, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor,
                new string[] { "Type", "Query_", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor = Descriptor.MessageTypes[18];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Collapse, global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor,
                new string[] { "FieldName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor = Descriptor.MessageTypes[19];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter, global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor,
                new string[] { "Path", "Filter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor = Descriptor.MessageTypes[20];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort, global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor,
                new string[] { "Order", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor = Descriptor.MessageTypes[21];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort, global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor,
                new string[] { "Order", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor = Descriptor.MessageTypes[22];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSort, global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor,
                new string[] { "FieldName", "Order", "Mode", "NestedFilter", "MissingValue", "MissingField", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor = Descriptor.MessageTypes[23];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort, global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor,
                new string[] { "FieldName", "Points", "Order", "Mode", "DistanceType", "NestedFilter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor = Descriptor.MessageTypes[24];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sorter, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor,
                new string[] { "FieldSort", "GeoDistanceSort", "ScoreSort", "PkSort", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor = Descriptor.MessageTypes[25];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Sort, global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor,
                new string[] { "Sorter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor = Descriptor.MessageTypes[26];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery, global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor,
                new string[] { "Offset", "Limit", "Query", "Collapse", "Sort", "GetTotalCount", "Token", "Aggs", "GroupBys", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor = Descriptor.MessageTypes[27];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet, global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor,
                new string[] { "ReturnType", "ColumnNames", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor = Descriptor.MessageTypes[28];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest, global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor,
                new string[] { "TableName", "IndexName", "ColumnsToGet", "SearchQuery", "RoutingValues", "TimeoutMs", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor = Descriptor.MessageTypes[29];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse, global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor,
                new string[] { "TotalHits", "Rows", "IsAllSucceeded", "NextToken", "Aggs", "GroupBys", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleWordAnalyzerParameter__Descriptor = Descriptor.MessageTypes[30];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleWordAnalyzerParameter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SingleWordAnalyzerParameter, global::com.alicloud.openservices.tablestore.core.protocol.SingleWordAnalyzerParameter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleWordAnalyzerParameter__Descriptor,
                new string[] { "CaseSensitive", "DelimitWord", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SplitAnalyzerParameter__Descriptor = Descriptor.MessageTypes[31];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SplitAnalyzerParameter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SplitAnalyzerParameter, global::com.alicloud.openservices.tablestore.core.protocol.SplitAnalyzerParameter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SplitAnalyzerParameter__Descriptor,
                new string[] { "Delimiter", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FuzzyAnalyzerParameter__Descriptor = Descriptor.MessageTypes[32];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FuzzyAnalyzerParameter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FuzzyAnalyzerParameter, global::com.alicloud.openservices.tablestore.core.protocol.FuzzyAnalyzerParameter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FuzzyAnalyzerParameter__Descriptor,
                new string[] { "MinChars", "MaxChars", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor = Descriptor.MessageTypes[33];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor,
                new string[] { "FieldName", "FieldType", "IndexOptions", "Analyzer", "Index", "DocValues", "Store", "FieldSchemas", "IsArray", "AnalyzerParameter", "IsVirtualField", "SourceFieldNames", "DateFormates", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor = Descriptor.MessageTypes[34];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema, global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor,
                new string[] { "FieldSchemas", "IndexSetting", "IndexSort", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor = Descriptor.MessageTypes[35];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting, global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor,
                new string[] { "NumberOfShards", "RoutingFields", "RoutingPartitionSize", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor = Descriptor.MessageTypes[36];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor,
                new string[] { "TableName", "IndexName", "Schema", "SourceIndexName", "TimeToLive", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor = Descriptor.MessageTypes[37];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor = Descriptor.MessageTypes[38];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor,
                new string[] { "TableName", "IndexName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor = Descriptor.MessageTypes[39];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor,
                new string[] { "TableName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor = Descriptor.MessageTypes[40];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor,
                new string[] { "Indices", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor = Descriptor.MessageTypes[41];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor,
                new string[] { "TableName", "IndexName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor = Descriptor.MessageTypes[42];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor = Descriptor.MessageTypes[43];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SyncStat, global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor,
                new string[] { "SyncPhase", "CurrentSyncTimestamp", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MeteringInfo__Descriptor = Descriptor.MessageTypes[44];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MeteringInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo, global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MeteringInfo__Descriptor,
                new string[] { "StorageSize", "RowCount", "ReservedReadCu", "Timestamp", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor = Descriptor.MessageTypes[45];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor,
                new string[] { "TableName", "IndexName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor = Descriptor.MessageTypes[46];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor,
                new string[] { "Schema", "SyncStat", "MeteringInfo", "BrotherIndexName", "CreateTime", "TimeToLive", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexRequest__Descriptor = Descriptor.MessageTypes[47];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexRequest, global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexRequest__Descriptor,
                new string[] { "TableName", "IndexName", "TimeToLive", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexResponse__Descriptor = Descriptor.MessageTypes[48];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexResponse, global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexResponse__Descriptor,
                new string[] { });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ScanQuery__Descriptor = Descriptor.MessageTypes[49];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ScanQuery__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery, global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ScanQuery__Descriptor,
                new string[] { "Query", "Limit", "AliveTime", "Token", "CurrentParallelId", "MaxParalle", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanRequest__Descriptor = Descriptor.MessageTypes[50];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanRequest, global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanRequest.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanRequest__Descriptor,
                new string[] { "TableName", "IndexName", "ColumnsToGet", "SessionId", "ScanQuery", "TimeoutMs", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanResponse__Descriptor = Descriptor.MessageTypes[51];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanResponse, global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanResponse.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanResponse__Descriptor,
                new string[] { "Rows", "NextToken", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPoint__Descriptor = Descriptor.MessageTypes[52];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPoint__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint, global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPoint__Descriptor,
                new string[] { "Lat", "Lon", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregation__Descriptor = Descriptor.MessageTypes[53];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Aggregation, global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregation__Descriptor,
                new string[] { "Name", "Type", "Body", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregations__Descriptor = Descriptor.MessageTypes[54];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregations__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Aggregations, global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregations__Descriptor,
                new string[] { "Aggs", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBy__Descriptor = Descriptor.MessageTypes[55];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBy__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBy, global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBy__Descriptor,
                new string[] { "Name", "Type", "Body", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBys__Descriptor = Descriptor.MessageTypes[56];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBys__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBys, global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBys__Descriptor,
                new string[] { "GroupBys_", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregation__Descriptor = Descriptor.MessageTypes[57];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregation, global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregation__Descriptor,
                new string[] { "FieldName", "Missing", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregation__Descriptor = Descriptor.MessageTypes[58];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregation, global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregation__Descriptor,
                new string[] { "FieldName", "Missing", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregation__Descriptor = Descriptor.MessageTypes[59];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MinAggregation, global::com.alicloud.openservices.tablestore.core.protocol.MinAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregation__Descriptor,
                new string[] { "FieldName", "Missing", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregation__Descriptor = Descriptor.MessageTypes[60];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SumAggregation, global::com.alicloud.openservices.tablestore.core.protocol.SumAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregation__Descriptor,
                new string[] { "FieldName", "Missing", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregation__Descriptor = Descriptor.MessageTypes[61];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CountAggregation, global::com.alicloud.openservices.tablestore.core.protocol.CountAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregation__Descriptor,
                new string[] { "FieldName", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregation__Descriptor = Descriptor.MessageTypes[62];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregation, global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregation__Descriptor,
                new string[] { "FieldName", "Missing", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregation__Descriptor = Descriptor.MessageTypes[63];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregation, global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregation__Descriptor,
                new string[] { "Limit", "Sort", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregation__Descriptor = Descriptor.MessageTypes[64];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregation, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregation.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregation__Descriptor,
                new string[] { "FieldName", "Percentiles", "Missing", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldRange__Descriptor = Descriptor.MessageTypes[65];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldRange__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.FieldRange, global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldRange__Descriptor,
                new string[] { "Min", "Max", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogram__Descriptor = Descriptor.MessageTypes[66];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogram__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogram, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogram.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogram__Descriptor,
                new string[] { "FieldName", "Interval", "Missing", "MinDocCount", "Sort", "FieldRange", "SubAggs", "SubGroupBys", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupKeySort__Descriptor = Descriptor.MessageTypes[67];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupKeySort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort, global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupKeySort__Descriptor,
                new string[] { "Order", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowCountSort__Descriptor = Descriptor.MessageTypes[68];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_RowCountSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort, global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_RowCountSort__Descriptor,
                new string[] { "Order", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SubAggSort__Descriptor = Descriptor.MessageTypes[69];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SubAggSort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort, global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SubAggSort__Descriptor,
                new string[] { "SubAggName", "Order", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySorter__Descriptor = Descriptor.MessageTypes[70];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySorter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter, global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySorter__Descriptor,
                new string[] { "GroupKeySort", "RowCountSort", "SubAggSort", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySort__Descriptor = Descriptor.MessageTypes[71];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySort__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort, global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySort__Descriptor,
                new string[] { "Sorters", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByField__Descriptor = Descriptor.MessageTypes[72];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByField__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByField, global::com.alicloud.openservices.tablestore.core.protocol.GroupByField.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByField__Descriptor,
                new string[] { "FieldName", "Size", "Sort", "SubAggs", "SubGroupBys", "MinDocCount", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Range__Descriptor = Descriptor.MessageTypes[73];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_Range__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.Range, global::com.alicloud.openservices.tablestore.core.protocol.Range.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_Range__Descriptor,
                new string[] { "From", "To", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRange__Descriptor = Descriptor.MessageTypes[74];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRange__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRange, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRange.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRange__Descriptor,
                new string[] { "FieldName", "Ranges", "SubAggs", "SubGroupBys", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilter__Descriptor = Descriptor.MessageTypes[75];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilter, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilter.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilter__Descriptor,
                new string[] { "Filters", "SubAggs", "SubGroupBys", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistance__Descriptor = Descriptor.MessageTypes[76];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistance__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistance, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistance.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistance__Descriptor,
                new string[] { "FieldName", "Origin", "Ranges", "SubAggs", "SubGroupBys", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregationResult__Descriptor = Descriptor.MessageTypes[77];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregationResult__Descriptor,
                new string[] { "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregationResult__Descriptor = Descriptor.MessageTypes[78];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregationResult__Descriptor,
                new string[] { "Rows", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationItem__Descriptor = Descriptor.MessageTypes[79];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationItem__Descriptor,
                new string[] { "Key", "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationResult__Descriptor = Descriptor.MessageTypes[80];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationResult__Descriptor,
                new string[] { "PercentilesAggregationItems", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregationResult__Descriptor = Descriptor.MessageTypes[81];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregationResult__Descriptor,
                new string[] { "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregationResult__Descriptor = Descriptor.MessageTypes[82];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregationResult__Descriptor,
                new string[] { "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregationResult__Descriptor = Descriptor.MessageTypes[83];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.MinAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.MinAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregationResult__Descriptor,
                new string[] { "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregationResult__Descriptor = Descriptor.MessageTypes[84];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.SumAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.SumAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregationResult__Descriptor,
                new string[] { "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregationResult__Descriptor = Descriptor.MessageTypes[85];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.CountAggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.CountAggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregationResult__Descriptor,
                new string[] { "Value", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationResult__Descriptor = Descriptor.MessageTypes[86];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult, global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationResult__Descriptor,
                new string[] { "Name", "Type", "AggResult", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationsResult__Descriptor = Descriptor.MessageTypes[87];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult, global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationsResult__Descriptor,
                new string[] { "AggResults", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResultItem__Descriptor = Descriptor.MessageTypes[88];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResultItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResultItem__Descriptor,
                new string[] { "Key", "RowCount", "SubAggsResult", "SubGroupBysResult", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResult__Descriptor = Descriptor.MessageTypes[89];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResult__Descriptor,
                new string[] { "GroupByFieldResultItems", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResultItem__Descriptor = Descriptor.MessageTypes[90];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResultItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResultItem__Descriptor,
                new string[] { "From", "To", "RowCount", "SubAggsResult", "SubGroupBysResult", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResult__Descriptor = Descriptor.MessageTypes[91];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResult__Descriptor,
                new string[] { "GroupByRangeResultItems", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResultItem__Descriptor = Descriptor.MessageTypes[92];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResultItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResultItem__Descriptor,
                new string[] { "From", "To", "RowCount", "SubAggsResult", "SubGroupBysResult", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResult__Descriptor = Descriptor.MessageTypes[93];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResult__Descriptor,
                new string[] { "GroupByGeoDistanceResultItems", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResultItem__Descriptor = Descriptor.MessageTypes[94];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResultItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResultItem__Descriptor,
                new string[] { "RowCount", "SubAggsResult", "SubGroupBysResult", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResult__Descriptor = Descriptor.MessageTypes[95];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResult__Descriptor,
                new string[] { "GroupByFilterResultItems", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByResult__Descriptor = Descriptor.MessageTypes[96];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByResult__Descriptor,
                new string[] { "Name", "Type", "GroupByResult_", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBysResult__Descriptor = Descriptor.MessageTypes[97];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBysResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBysResult__Descriptor,
                new string[] { "GroupByResults", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramItem__Descriptor = Descriptor.MessageTypes[98];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramItem__Descriptor,
                new string[] { "Key", "Value", "SubAggsResult", "SubGroupBysResult", });
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramResult__Descriptor = Descriptor.MessageTypes[99];
        internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramResult, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramResult.Builder>(internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramResult__Descriptor,
                new string[] { "GroupByHistograItems", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum QueryType {
    MATCH_QUERY = 1,
    MATCH_PHRASE_QUERY = 2,
    TERM_QUERY = 3,
    RANGE_QUERY = 4,
    PREFIX_QUERY = 5,
    BOOL_QUERY = 6,
    CONST_SCORE_QUERY = 7,
    FUNCTION_SCORE_QUERY = 8,
    NESTED_QUERY = 9,
    WILDCARD_QUERY = 10,
    MATCH_ALL_QUERY = 11,
    GEO_BOUNDING_BOX_QUERY = 12,
    GEO_DISTANCE_QUERY = 13,
    GEO_POLYGON_QUERY = 14,
    TERMS_QUERY = 15,
    EXISTS_QUERY = 16,
  }
  
  public enum QueryOperator {
    OR = 1,
    AND = 2,
  }
  
  public enum ScoreMode {
    SCORE_MODE_NONE = 1,
    SCORE_MODE_AVG = 2,
    SCORE_MODE_MAX = 3,
    SCORE_MODE_TOTAL = 4,
    SCORE_MODE_MIN = 5,
  }
  
  public enum SortOrder {
    SORT_ORDER_ASC = 0,
    SORT_ORDER_DESC = 1,
  }
  
  public enum SortMode {
    SORT_MODE_MIN = 0,
    SORT_MODE_MAX = 1,
    SORT_MODE_AVG = 2,
  }
  
  public enum GeoDistanceType {
    GEO_DISTANCE_ARC = 0,
    GEO_DISTANCE_PLANE = 1,
  }
  
  public enum ColumnReturnType {
    RETURN_ALL = 1,
    RETURN_SPECIFIED = 2,
    RETURN_NONE = 3,
    RETURN_ALL_FROM_INDEX = 4,
  }
  
  public enum IndexOptions {
    DOCS = 1,
    FREQS = 2,
    POSITIONS = 3,
    OFFSETS = 4,
  }
  
  public enum FieldType {
    LONG = 1,
    DOUBLE = 2,
    BOOLEAN = 3,
    KEYWORD = 4,
    TEXT = 5,
    NESTED = 6,
    GEO_POINT = 7,
    DATE = 8,
  }
  
  public enum SyncPhase {
    FULL = 1,
    INCR = 2,
  }
  
  public enum AggregationType {
    AGG_AVG = 1,
    AGG_DISTINCT_COUNT = 6,
    AGG_MAX = 2,
    AGG_MIN = 3,
    AGG_SUM = 4,
    AGG_COUNT = 5,
    AGG_TOP_ROWS = 7,
    AGG_PERCENTILES = 8,
  }
  
  public enum GroupByType {
    GROUP_BY_FIELD = 1,
    GROUP_BY_RANGE = 2,
    GROUP_BY_FILTER = 3,
    GROUP_BY_GEO_DISTANCE = 4,
    GROUP_BY_HISTOGRAM = 5,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatchQuery : pb::GeneratedMessage<MatchQuery, MatchQuery.Builder> {
    private MatchQuery() { }
    private static readonly MatchQuery defaultInstance = new MatchQuery().MakeReadOnly();
    private static readonly string[] _matchQueryFieldNames = new string[] { "field_name", "minimum_should_match", "operator", "text", "weight" };
    private static readonly uint[] _matchQueryFieldTags = new uint[] { 10, 24, 32, 18, 45 };
    public static MatchQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchQuery, MatchQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int MinimumShouldMatchFieldNumber = 3;
    private bool hasMinimumShouldMatch;
    private int minimumShouldMatch_;
    public bool HasMinimumShouldMatch {
      get { return hasMinimumShouldMatch; }
    }
    public int MinimumShouldMatch {
      get { return minimumShouldMatch_; }
    }
    
    public const int OperatorFieldNumber = 4;
    private bool hasOperator;
    private global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator operator_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator.OR;
    public bool HasOperator {
      get { return hasOperator; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator Operator {
      get { return operator_; }
    }
    
    public const int WeightFieldNumber = 5;
    private bool hasWeight;
    private float weight_;
    public bool HasWeight {
      get { return hasWeight; }
    }
    public float Weight {
      get { return weight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _matchQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasText) {
        output.WriteString(2, field_names[3], Text);
      }
      if (hasMinimumShouldMatch) {
        output.WriteInt32(3, field_names[1], MinimumShouldMatch);
      }
      if (hasOperator) {
        output.WriteEnum(4, field_names[2], (int) Operator, Operator);
      }
      if (hasWeight) {
        output.WriteFloat(5, field_names[4], Weight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text);
      }
      if (hasMinimumShouldMatch) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, MinimumShouldMatch);
      }
      if (hasOperator) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Operator);
      }
      if (hasWeight) {
        size += pb::CodedOutputStream.ComputeFloatSize(5, Weight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MatchQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchQuery result;
      
      private MatchQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchQuery original = result;
          result = new MatchQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.Descriptor; }
      }
      
      public override MatchQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.DefaultInstance; }
      }
      
      public override MatchQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MatchQuery) {
          return MergeFrom((MatchQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MatchQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasMinimumShouldMatch) {
          MinimumShouldMatch = other.MinimumShouldMatch;
        }
        if (other.HasOperator) {
          Operator = other.Operator;
        }
        if (other.HasWeight) {
          Weight = other.Weight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 24: {
              result.hasMinimumShouldMatch = input.ReadInt32(ref result.minimumShouldMatch_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.operator_, out unknown)) {
                result.hasOperator = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 45: {
              result.hasWeight = input.ReadFloat(ref result.weight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasMinimumShouldMatch {
        get { return result.hasMinimumShouldMatch; }
      }
      public int MinimumShouldMatch {
        get { return result.MinimumShouldMatch; }
        set { SetMinimumShouldMatch(value); }
      }
      public Builder SetMinimumShouldMatch(int value) {
        PrepareBuilder();
        result.hasMinimumShouldMatch = true;
        result.minimumShouldMatch_ = value;
        return this;
      }
      public Builder ClearMinimumShouldMatch() {
        PrepareBuilder();
        result.hasMinimumShouldMatch = false;
        result.minimumShouldMatch_ = 0;
        return this;
      }
      
      public bool HasOperator {
       get { return result.hasOperator; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator Operator {
        get { return result.Operator; }
        set { SetOperator(value); }
      }
      public Builder SetOperator(global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator value) {
        PrepareBuilder();
        result.hasOperator = true;
        result.operator_ = value;
        return this;
      }
      public Builder ClearOperator() {
        PrepareBuilder();
        result.hasOperator = false;
        result.operator_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryOperator.OR;
        return this;
      }
      
      public bool HasWeight {
        get { return result.hasWeight; }
      }
      public float Weight {
        get { return result.Weight; }
        set { SetWeight(value); }
      }
      public Builder SetWeight(float value) {
        PrepareBuilder();
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder ClearWeight() {
        PrepareBuilder();
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
    }
    static MatchQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatchPhraseQuery : pb::GeneratedMessage<MatchPhraseQuery, MatchPhraseQuery.Builder> {
    private MatchPhraseQuery() { }
    private static readonly MatchPhraseQuery defaultInstance = new MatchPhraseQuery().MakeReadOnly();
    private static readonly string[] _matchPhraseQueryFieldNames = new string[] { "field_name", "text", "weight" };
    private static readonly uint[] _matchPhraseQueryFieldTags = new uint[] { 10, 18, 29 };
    public static MatchPhraseQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchPhraseQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchPhraseQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchPhraseQuery, MatchPhraseQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchPhraseQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int WeightFieldNumber = 3;
    private bool hasWeight;
    private float weight_;
    public bool HasWeight {
      get { return hasWeight; }
    }
    public float Weight {
      get { return weight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _matchPhraseQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasText) {
        output.WriteString(2, field_names[1], Text);
      }
      if (hasWeight) {
        output.WriteFloat(3, field_names[2], Weight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text);
      }
      if (hasWeight) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Weight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MatchPhraseQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchPhraseQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchPhraseQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchPhraseQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchPhraseQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchPhraseQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchPhraseQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchPhraseQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchPhraseQuery result;
      
      private MatchPhraseQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchPhraseQuery original = result;
          result = new MatchPhraseQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchPhraseQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.Descriptor; }
      }
      
      public override MatchPhraseQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.DefaultInstance; }
      }
      
      public override MatchPhraseQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MatchPhraseQuery) {
          return MergeFrom((MatchPhraseQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchPhraseQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MatchPhraseQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasWeight) {
          Weight = other.Weight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchPhraseQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchPhraseQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 29: {
              result.hasWeight = input.ReadFloat(ref result.weight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasWeight {
        get { return result.hasWeight; }
      }
      public float Weight {
        get { return result.Weight; }
        set { SetWeight(value); }
      }
      public Builder SetWeight(float value) {
        PrepareBuilder();
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder ClearWeight() {
        PrepareBuilder();
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
    }
    static MatchPhraseQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatchAllQuery : pb::GeneratedMessage<MatchAllQuery, MatchAllQuery.Builder> {
    private MatchAllQuery() { }
    private static readonly MatchAllQuery defaultInstance = new MatchAllQuery().MakeReadOnly();
    private static readonly string[] _matchAllQueryFieldNames = new string[] {  };
    private static readonly uint[] _matchAllQueryFieldTags = new uint[] {  };
    public static MatchAllQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MatchAllQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchAllQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MatchAllQuery, MatchAllQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MatchAllQuery__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _matchAllQueryFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MatchAllQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MatchAllQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MatchAllQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MatchAllQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchAllQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MatchAllQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MatchAllQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchAllQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchAllQuery result;
      
      private MatchAllQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchAllQuery original = result;
          result = new MatchAllQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchAllQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.Descriptor; }
      }
      
      public override MatchAllQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.DefaultInstance; }
      }
      
      public override MatchAllQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MatchAllQuery) {
          return MergeFrom((MatchAllQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchAllQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MatchAllQuery.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchAllQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchAllQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static MatchAllQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TermQuery : pb::GeneratedMessage<TermQuery, TermQuery.Builder> {
    private TermQuery() { }
    private static readonly TermQuery defaultInstance = new TermQuery().MakeReadOnly();
    private static readonly string[] _termQueryFieldNames = new string[] { "field_name", "term", "weight" };
    private static readonly uint[] _termQueryFieldTags = new uint[] { 10, 18, 29 };
    public static TermQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TermQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TermQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TermQuery, TermQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TermFieldNumber = 2;
    private bool hasTerm;
    private pb::ByteString term_ = pb::ByteString.Empty;
    public bool HasTerm {
      get { return hasTerm; }
    }
    public pb::ByteString Term {
      get { return term_; }
    }
    
    public const int WeightFieldNumber = 3;
    private bool hasWeight;
    private float weight_;
    public bool HasWeight {
      get { return hasWeight; }
    }
    public float Weight {
      get { return weight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _termQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasTerm) {
        output.WriteBytes(2, field_names[1], Term);
      }
      if (hasWeight) {
        output.WriteFloat(3, field_names[2], Weight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasTerm) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Term);
      }
      if (hasWeight) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Weight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TermQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TermQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TermQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TermQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TermQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TermQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TermQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TermQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TermQuery result;
      
      private TermQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          TermQuery original = result;
          result = new TermQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TermQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.Descriptor; }
      }
      
      public override TermQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.DefaultInstance; }
      }
      
      public override TermQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TermQuery) {
          return MergeFrom((TermQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TermQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TermQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasTerm) {
          Term = other.Term;
        }
        if (other.HasWeight) {
          Weight = other.Weight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_termQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _termQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasTerm = input.ReadBytes(ref result.term_);
              break;
            }
            case 29: {
              result.hasWeight = input.ReadFloat(ref result.weight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasTerm {
        get { return result.hasTerm; }
      }
      public pb::ByteString Term {
        get { return result.Term; }
        set { SetTerm(value); }
      }
      public Builder SetTerm(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTerm = true;
        result.term_ = value;
        return this;
      }
      public Builder ClearTerm() {
        PrepareBuilder();
        result.hasTerm = false;
        result.term_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasWeight {
        get { return result.hasWeight; }
      }
      public float Weight {
        get { return result.Weight; }
        set { SetWeight(value); }
      }
      public Builder SetWeight(float value) {
        PrepareBuilder();
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder ClearWeight() {
        PrepareBuilder();
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
    }
    static TermQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TermsQuery : pb::GeneratedMessage<TermsQuery, TermsQuery.Builder> {
    private TermsQuery() { }
    private static readonly TermsQuery defaultInstance = new TermsQuery().MakeReadOnly();
    private static readonly string[] _termsQueryFieldNames = new string[] { "field_name", "terms", "weight" };
    private static readonly uint[] _termsQueryFieldTags = new uint[] { 10, 18, 29 };
    public static TermsQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TermsQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TermsQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TermsQuery, TermsQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TermsQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TermsFieldNumber = 2;
    private pbc::PopsicleList<pb::ByteString> terms_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> TermsList {
      get { return pbc::Lists.AsReadOnly(terms_); }
    }
    public int TermsCount {
      get { return terms_.Count; }
    }
    public pb::ByteString GetTerms(int index) {
      return terms_[index];
    }
    
    public const int WeightFieldNumber = 3;
    private bool hasWeight;
    private float weight_;
    public bool HasWeight {
      get { return hasWeight; }
    }
    public float Weight {
      get { return weight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _termsQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (terms_.Count > 0) {
        output.WriteBytesArray(2, field_names[1], terms_);
      }
      if (hasWeight) {
        output.WriteFloat(3, field_names[2], Weight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in TermsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * terms_.Count;
      }
      if (hasWeight) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Weight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TermsQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermsQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermsQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TermsQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TermsQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermsQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TermsQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TermsQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TermsQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TermsQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TermsQuery MakeReadOnly() {
      terms_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TermsQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TermsQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TermsQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TermsQuery result;
      
      private TermsQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          TermsQuery original = result;
          result = new TermsQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TermsQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.Descriptor; }
      }
      
      public override TermsQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.DefaultInstance; }
      }
      
      public override TermsQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TermsQuery) {
          return MergeFrom((TermsQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TermsQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TermsQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.terms_.Count != 0) {
          result.terms_.Add(other.terms_);
        }
        if (other.HasWeight) {
          Weight = other.Weight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_termsQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _termsQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              input.ReadBytesArray(tag, field_name, result.terms_);
              break;
            }
            case 29: {
              result.hasWeight = input.ReadFloat(ref result.weight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> TermsList {
        get { return PrepareBuilder().terms_; }
      }
      public int TermsCount {
        get { return result.TermsCount; }
      }
      public pb::ByteString GetTerms(int index) {
        return result.GetTerms(index);
      }
      public Builder SetTerms(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.terms_[index] = value;
        return this;
      }
      public Builder AddTerms(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.terms_.Add(value);
        return this;
      }
      public Builder AddRangeTerms(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.terms_.Add(values);
        return this;
      }
      public Builder ClearTerms() {
        PrepareBuilder();
        result.terms_.Clear();
        return this;
      }
      
      public bool HasWeight {
        get { return result.hasWeight; }
      }
      public float Weight {
        get { return result.Weight; }
        set { SetWeight(value); }
      }
      public Builder SetWeight(float value) {
        PrepareBuilder();
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder ClearWeight() {
        PrepareBuilder();
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
    }
    static TermsQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RangeQuery : pb::GeneratedMessage<RangeQuery, RangeQuery.Builder> {
    private RangeQuery() { }
    private static readonly RangeQuery defaultInstance = new RangeQuery().MakeReadOnly();
    private static readonly string[] _rangeQueryFieldNames = new string[] { "field_name", "include_lower", "include_upper", "range_from", "range_to" };
    private static readonly uint[] _rangeQueryFieldTags = new uint[] { 10, 32, 40, 18, 26 };
    public static RangeQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RangeQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RangeQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RangeQuery, RangeQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_RangeQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int RangeFromFieldNumber = 2;
    private bool hasRangeFrom;
    private pb::ByteString rangeFrom_ = pb::ByteString.Empty;
    public bool HasRangeFrom {
      get { return hasRangeFrom; }
    }
    public pb::ByteString RangeFrom {
      get { return rangeFrom_; }
    }
    
    public const int RangeToFieldNumber = 3;
    private bool hasRangeTo;
    private pb::ByteString rangeTo_ = pb::ByteString.Empty;
    public bool HasRangeTo {
      get { return hasRangeTo; }
    }
    public pb::ByteString RangeTo {
      get { return rangeTo_; }
    }
    
    public const int IncludeLowerFieldNumber = 4;
    private bool hasIncludeLower;
    private bool includeLower_;
    public bool HasIncludeLower {
      get { return hasIncludeLower; }
    }
    public bool IncludeLower {
      get { return includeLower_; }
    }
    
    public const int IncludeUpperFieldNumber = 5;
    private bool hasIncludeUpper;
    private bool includeUpper_;
    public bool HasIncludeUpper {
      get { return hasIncludeUpper; }
    }
    public bool IncludeUpper {
      get { return includeUpper_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rangeQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasRangeFrom) {
        output.WriteBytes(2, field_names[3], RangeFrom);
      }
      if (hasRangeTo) {
        output.WriteBytes(3, field_names[4], RangeTo);
      }
      if (hasIncludeLower) {
        output.WriteBool(4, field_names[1], IncludeLower);
      }
      if (hasIncludeUpper) {
        output.WriteBool(5, field_names[2], IncludeUpper);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasRangeFrom) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, RangeFrom);
      }
      if (hasRangeTo) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, RangeTo);
      }
      if (hasIncludeLower) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IncludeLower);
      }
      if (hasIncludeUpper) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, IncludeUpper);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RangeQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RangeQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RangeQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RangeQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RangeQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RangeQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RangeQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RangeQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RangeQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RangeQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RangeQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RangeQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RangeQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RangeQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RangeQuery result;
      
      private RangeQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          RangeQuery original = result;
          result = new RangeQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RangeQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.Descriptor; }
      }
      
      public override RangeQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.DefaultInstance; }
      }
      
      public override RangeQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RangeQuery) {
          return MergeFrom((RangeQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RangeQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.RangeQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasRangeFrom) {
          RangeFrom = other.RangeFrom;
        }
        if (other.HasRangeTo) {
          RangeTo = other.RangeTo;
        }
        if (other.HasIncludeLower) {
          IncludeLower = other.IncludeLower;
        }
        if (other.HasIncludeUpper) {
          IncludeUpper = other.IncludeUpper;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rangeQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rangeQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasRangeFrom = input.ReadBytes(ref result.rangeFrom_);
              break;
            }
            case 26: {
              result.hasRangeTo = input.ReadBytes(ref result.rangeTo_);
              break;
            }
            case 32: {
              result.hasIncludeLower = input.ReadBool(ref result.includeLower_);
              break;
            }
            case 40: {
              result.hasIncludeUpper = input.ReadBool(ref result.includeUpper_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasRangeFrom {
        get { return result.hasRangeFrom; }
      }
      public pb::ByteString RangeFrom {
        get { return result.RangeFrom; }
        set { SetRangeFrom(value); }
      }
      public Builder SetRangeFrom(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRangeFrom = true;
        result.rangeFrom_ = value;
        return this;
      }
      public Builder ClearRangeFrom() {
        PrepareBuilder();
        result.hasRangeFrom = false;
        result.rangeFrom_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasRangeTo {
        get { return result.hasRangeTo; }
      }
      public pb::ByteString RangeTo {
        get { return result.RangeTo; }
        set { SetRangeTo(value); }
      }
      public Builder SetRangeTo(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRangeTo = true;
        result.rangeTo_ = value;
        return this;
      }
      public Builder ClearRangeTo() {
        PrepareBuilder();
        result.hasRangeTo = false;
        result.rangeTo_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasIncludeLower {
        get { return result.hasIncludeLower; }
      }
      public bool IncludeLower {
        get { return result.IncludeLower; }
        set { SetIncludeLower(value); }
      }
      public Builder SetIncludeLower(bool value) {
        PrepareBuilder();
        result.hasIncludeLower = true;
        result.includeLower_ = value;
        return this;
      }
      public Builder ClearIncludeLower() {
        PrepareBuilder();
        result.hasIncludeLower = false;
        result.includeLower_ = false;
        return this;
      }
      
      public bool HasIncludeUpper {
        get { return result.hasIncludeUpper; }
      }
      public bool IncludeUpper {
        get { return result.IncludeUpper; }
        set { SetIncludeUpper(value); }
      }
      public Builder SetIncludeUpper(bool value) {
        PrepareBuilder();
        result.hasIncludeUpper = true;
        result.includeUpper_ = value;
        return this;
      }
      public Builder ClearIncludeUpper() {
        PrepareBuilder();
        result.hasIncludeUpper = false;
        result.includeUpper_ = false;
        return this;
      }
    }
    static RangeQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PrefixQuery : pb::GeneratedMessage<PrefixQuery, PrefixQuery.Builder> {
    private PrefixQuery() { }
    private static readonly PrefixQuery defaultInstance = new PrefixQuery().MakeReadOnly();
    private static readonly string[] _prefixQueryFieldNames = new string[] { "field_name", "prefix", "weight" };
    private static readonly uint[] _prefixQueryFieldTags = new uint[] { 10, 18, 29 };
    public static PrefixQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PrefixQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PrefixQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PrefixQuery, PrefixQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrefixQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int PrefixFieldNumber = 2;
    private bool hasPrefix;
    private string prefix_ = "";
    public bool HasPrefix {
      get { return hasPrefix; }
    }
    public string Prefix {
      get { return prefix_; }
    }
    
    public const int WeightFieldNumber = 3;
    private bool hasWeight;
    private float weight_;
    public bool HasWeight {
      get { return hasWeight; }
    }
    public float Weight {
      get { return weight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _prefixQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasPrefix) {
        output.WriteString(2, field_names[1], Prefix);
      }
      if (hasWeight) {
        output.WriteFloat(3, field_names[2], Weight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasPrefix) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Prefix);
      }
      if (hasWeight) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Weight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PrefixQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PrefixQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PrefixQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PrefixQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrefixQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PrefixQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PrefixQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PrefixQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PrefixQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PrefixQuery result;
      
      private PrefixQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          PrefixQuery original = result;
          result = new PrefixQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PrefixQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.Descriptor; }
      }
      
      public override PrefixQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.DefaultInstance; }
      }
      
      public override PrefixQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PrefixQuery) {
          return MergeFrom((PrefixQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PrefixQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PrefixQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasPrefix) {
          Prefix = other.Prefix;
        }
        if (other.HasWeight) {
          Weight = other.Weight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_prefixQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _prefixQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasPrefix = input.ReadString(ref result.prefix_);
              break;
            }
            case 29: {
              result.hasWeight = input.ReadFloat(ref result.weight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasPrefix {
        get { return result.hasPrefix; }
      }
      public string Prefix {
        get { return result.Prefix; }
        set { SetPrefix(value); }
      }
      public Builder SetPrefix(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPrefix = true;
        result.prefix_ = value;
        return this;
      }
      public Builder ClearPrefix() {
        PrepareBuilder();
        result.hasPrefix = false;
        result.prefix_ = "";
        return this;
      }
      
      public bool HasWeight {
        get { return result.hasWeight; }
      }
      public float Weight {
        get { return result.Weight; }
        set { SetWeight(value); }
      }
      public Builder SetWeight(float value) {
        PrepareBuilder();
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder ClearWeight() {
        PrepareBuilder();
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
    }
    static PrefixQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WildcardQuery : pb::GeneratedMessage<WildcardQuery, WildcardQuery.Builder> {
    private WildcardQuery() { }
    private static readonly WildcardQuery defaultInstance = new WildcardQuery().MakeReadOnly();
    private static readonly string[] _wildcardQueryFieldNames = new string[] { "field_name", "value", "weight" };
    private static readonly uint[] _wildcardQueryFieldTags = new uint[] { 10, 18, 29 };
    public static WildcardQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WildcardQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WildcardQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WildcardQuery, WildcardQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_WildcardQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public const int WeightFieldNumber = 3;
    private bool hasWeight;
    private float weight_;
    public bool HasWeight {
      get { return hasWeight; }
    }
    public float Weight {
      get { return weight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _wildcardQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasValue) {
        output.WriteString(2, field_names[1], Value);
      }
      if (hasWeight) {
        output.WriteFloat(3, field_names[2], Weight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Value);
      }
      if (hasWeight) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Weight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static WildcardQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WildcardQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WildcardQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WildcardQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WildcardQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WildcardQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WildcardQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<WildcardQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WildcardQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WildcardQuery result;
      
      private WildcardQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          WildcardQuery original = result;
          result = new WildcardQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WildcardQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.Descriptor; }
      }
      
      public override WildcardQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.DefaultInstance; }
      }
      
      public override WildcardQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WildcardQuery) {
          return MergeFrom((WildcardQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WildcardQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.WildcardQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.HasWeight) {
          Weight = other.Weight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_wildcardQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _wildcardQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
            case 29: {
              result.hasWeight = input.ReadFloat(ref result.weight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
      
      public bool HasWeight {
        get { return result.hasWeight; }
      }
      public float Weight {
        get { return result.Weight; }
        set { SetWeight(value); }
      }
      public Builder SetWeight(float value) {
        PrepareBuilder();
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder ClearWeight() {
        PrepareBuilder();
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
    }
    static WildcardQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BoolQuery : pb::GeneratedMessage<BoolQuery, BoolQuery.Builder> {
    private BoolQuery() { }
    private static readonly BoolQuery defaultInstance = new BoolQuery().MakeReadOnly();
    private static readonly string[] _boolQueryFieldNames = new string[] { "filter_queries", "minimum_should_match", "must_not_queries", "must_queries", "should_queries" };
    private static readonly uint[] _boolQueryFieldTags = new uint[] { 26, 40, 18, 10, 34 };
    public static BoolQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BoolQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BoolQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BoolQuery, BoolQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_BoolQuery__FieldAccessorTable; }
    }
    
    public const int MustQueriesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> mustQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustQueriesList {
      get { return mustQueries_; }
    }
    public int MustQueriesCount {
      get { return mustQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustQueries(int index) {
      return mustQueries_[index];
    }
    
    public const int MustNotQueriesFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> mustNotQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustNotQueriesList {
      get { return mustNotQueries_; }
    }
    public int MustNotQueriesCount {
      get { return mustNotQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustNotQueries(int index) {
      return mustNotQueries_[index];
    }
    
    public const int FilterQueriesFieldNumber = 3;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> filterQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> FilterQueriesList {
      get { return filterQueries_; }
    }
    public int FilterQueriesCount {
      get { return filterQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetFilterQueries(int index) {
      return filterQueries_[index];
    }
    
    public const int ShouldQueriesFieldNumber = 4;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> shouldQueries_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> ShouldQueriesList {
      get { return shouldQueries_; }
    }
    public int ShouldQueriesCount {
      get { return shouldQueries_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetShouldQueries(int index) {
      return shouldQueries_[index];
    }
    
    public const int MinimumShouldMatchFieldNumber = 5;
    private bool hasMinimumShouldMatch;
    private int minimumShouldMatch_;
    public bool HasMinimumShouldMatch {
      get { return hasMinimumShouldMatch; }
    }
    public int MinimumShouldMatch {
      get { return minimumShouldMatch_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _boolQueryFieldNames;
      if (mustQueries_.Count > 0) {
        output.WriteMessageArray(1, field_names[3], mustQueries_);
      }
      if (mustNotQueries_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], mustNotQueries_);
      }
      if (filterQueries_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], filterQueries_);
      }
      if (shouldQueries_.Count > 0) {
        output.WriteMessageArray(4, field_names[4], shouldQueries_);
      }
      if (hasMinimumShouldMatch) {
        output.WriteInt32(5, field_names[1], MinimumShouldMatch);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in MustQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in MustNotQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in FilterQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in ShouldQueriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasMinimumShouldMatch) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, MinimumShouldMatch);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BoolQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BoolQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BoolQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BoolQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BoolQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BoolQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BoolQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BoolQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BoolQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BoolQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BoolQuery MakeReadOnly() {
      mustQueries_.MakeReadOnly();
      mustNotQueries_.MakeReadOnly();
      filterQueries_.MakeReadOnly();
      shouldQueries_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BoolQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BoolQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BoolQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BoolQuery result;
      
      private BoolQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          BoolQuery original = result;
          result = new BoolQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BoolQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.Descriptor; }
      }
      
      public override BoolQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.DefaultInstance; }
      }
      
      public override BoolQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BoolQuery) {
          return MergeFrom((BoolQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BoolQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.BoolQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.mustQueries_.Count != 0) {
          result.mustQueries_.Add(other.mustQueries_);
        }
        if (other.mustNotQueries_.Count != 0) {
          result.mustNotQueries_.Add(other.mustNotQueries_);
        }
        if (other.filterQueries_.Count != 0) {
          result.filterQueries_.Add(other.filterQueries_);
        }
        if (other.shouldQueries_.Count != 0) {
          result.shouldQueries_.Add(other.shouldQueries_);
        }
        if (other.HasMinimumShouldMatch) {
          MinimumShouldMatch = other.MinimumShouldMatch;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_boolQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _boolQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.mustQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.mustNotQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.filterQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.shouldQueries_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              result.hasMinimumShouldMatch = input.ReadInt32(ref result.minimumShouldMatch_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustQueriesList {
        get { return PrepareBuilder().mustQueries_; }
      }
      public int MustQueriesCount {
        get { return result.MustQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustQueries(int index) {
        return result.GetMustQueries(index);
      }
      public Builder SetMustQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustQueries_[index] = value;
        return this;
      }
      public Builder SetMustQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMustQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustQueries_.Add(value);
        return this;
      }
      public Builder AddMustQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMustQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.mustQueries_.Add(values);
        return this;
      }
      public Builder ClearMustQueries() {
        PrepareBuilder();
        result.mustQueries_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> MustNotQueriesList {
        get { return PrepareBuilder().mustNotQueries_; }
      }
      public int MustNotQueriesCount {
        get { return result.MustNotQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetMustNotQueries(int index) {
        return result.GetMustNotQueries(index);
      }
      public Builder SetMustNotQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustNotQueries_[index] = value;
        return this;
      }
      public Builder SetMustNotQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustNotQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMustNotQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.mustNotQueries_.Add(value);
        return this;
      }
      public Builder AddMustNotQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.mustNotQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMustNotQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.mustNotQueries_.Add(values);
        return this;
      }
      public Builder ClearMustNotQueries() {
        PrepareBuilder();
        result.mustNotQueries_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> FilterQueriesList {
        get { return PrepareBuilder().filterQueries_; }
      }
      public int FilterQueriesCount {
        get { return result.FilterQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetFilterQueries(int index) {
        return result.GetFilterQueries(index);
      }
      public Builder SetFilterQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filterQueries_[index] = value;
        return this;
      }
      public Builder SetFilterQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filterQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFilterQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filterQueries_.Add(value);
        return this;
      }
      public Builder AddFilterQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filterQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFilterQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.filterQueries_.Add(values);
        return this;
      }
      public Builder ClearFilterQueries() {
        PrepareBuilder();
        result.filterQueries_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> ShouldQueriesList {
        get { return PrepareBuilder().shouldQueries_; }
      }
      public int ShouldQueriesCount {
        get { return result.ShouldQueriesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetShouldQueries(int index) {
        return result.GetShouldQueries(index);
      }
      public Builder SetShouldQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shouldQueries_[index] = value;
        return this;
      }
      public Builder SetShouldQueries(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shouldQueries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddShouldQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.shouldQueries_.Add(value);
        return this;
      }
      public Builder AddShouldQueries(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.shouldQueries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeShouldQueries(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.shouldQueries_.Add(values);
        return this;
      }
      public Builder ClearShouldQueries() {
        PrepareBuilder();
        result.shouldQueries_.Clear();
        return this;
      }
      
      public bool HasMinimumShouldMatch {
        get { return result.hasMinimumShouldMatch; }
      }
      public int MinimumShouldMatch {
        get { return result.MinimumShouldMatch; }
        set { SetMinimumShouldMatch(value); }
      }
      public Builder SetMinimumShouldMatch(int value) {
        PrepareBuilder();
        result.hasMinimumShouldMatch = true;
        result.minimumShouldMatch_ = value;
        return this;
      }
      public Builder ClearMinimumShouldMatch() {
        PrepareBuilder();
        result.hasMinimumShouldMatch = false;
        result.minimumShouldMatch_ = 0;
        return this;
      }
    }
    static BoolQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConstScoreQuery : pb::GeneratedMessage<ConstScoreQuery, ConstScoreQuery.Builder> {
    private ConstScoreQuery() { }
    private static readonly ConstScoreQuery defaultInstance = new ConstScoreQuery().MakeReadOnly();
    private static readonly string[] _constScoreQueryFieldNames = new string[] { "filter" };
    private static readonly uint[] _constScoreQueryFieldTags = new uint[] { 10 };
    public static ConstScoreQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConstScoreQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConstScoreQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConstScoreQuery, ConstScoreQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ConstScoreQuery__FieldAccessorTable; }
    }
    
    public const int FilterFieldNumber = 1;
    private bool hasFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
      get { return filter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _constScoreQueryFieldNames;
      if (hasFilter) {
        output.WriteMessage(1, field_names[0], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Filter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConstScoreQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConstScoreQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConstScoreQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConstScoreQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConstScoreQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConstScoreQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConstScoreQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConstScoreQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConstScoreQuery result;
      
      private ConstScoreQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          ConstScoreQuery original = result;
          result = new ConstScoreQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConstScoreQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.Descriptor; }
      }
      
      public override ConstScoreQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.DefaultInstance; }
      }
      
      public override ConstScoreQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConstScoreQuery) {
          return MergeFrom((ConstScoreQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConstScoreQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ConstScoreQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_constScoreQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _constScoreQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.filter_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static ConstScoreQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FieldValueFactor : pb::GeneratedMessage<FieldValueFactor, FieldValueFactor.Builder> {
    private FieldValueFactor() { }
    private static readonly FieldValueFactor defaultInstance = new FieldValueFactor().MakeReadOnly();
    private static readonly string[] _fieldValueFactorFieldNames = new string[] { "field_name" };
    private static readonly uint[] _fieldValueFactorFieldTags = new uint[] { 10 };
    public static FieldValueFactor DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldValueFactor DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldValueFactor ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldValueFactor, FieldValueFactor.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldValueFactor__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fieldValueFactorFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FieldValueFactor ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldValueFactor ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldValueFactor ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldValueFactor ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldValueFactor MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldValueFactor prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldValueFactor, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldValueFactor cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldValueFactor result;
      
      private FieldValueFactor PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldValueFactor original = result;
          result = new FieldValueFactor();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldValueFactor MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Descriptor; }
      }
      
      public override FieldValueFactor DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance; }
      }
      
      public override FieldValueFactor BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldValueFactor) {
          return MergeFrom((FieldValueFactor) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldValueFactor other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldValueFactorFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldValueFactorFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
    }
    static FieldValueFactor() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FunctionScoreQuery : pb::GeneratedMessage<FunctionScoreQuery, FunctionScoreQuery.Builder> {
    private FunctionScoreQuery() { }
    private static readonly FunctionScoreQuery defaultInstance = new FunctionScoreQuery().MakeReadOnly();
    private static readonly string[] _functionScoreQueryFieldNames = new string[] { "field_value_factor", "query" };
    private static readonly uint[] _functionScoreQueryFieldTags = new uint[] { 18, 10 };
    public static FunctionScoreQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FunctionScoreQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FunctionScoreQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FunctionScoreQuery, FunctionScoreQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FunctionScoreQuery__FieldAccessorTable; }
    }
    
    public const int QueryFieldNumber = 1;
    private bool hasQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query query_;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
      get { return query_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public const int FieldValueFactorFieldNumber = 2;
    private bool hasFieldValueFactor;
    private global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor fieldValueFactor_;
    public bool HasFieldValueFactor {
      get { return hasFieldValueFactor; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor FieldValueFactor {
      get { return fieldValueFactor_ ?? global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _functionScoreQueryFieldNames;
      if (hasQuery) {
        output.WriteMessage(1, field_names[1], Query);
      }
      if (hasFieldValueFactor) {
        output.WriteMessage(2, field_names[0], FieldValueFactor);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Query);
      }
      if (hasFieldValueFactor) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, FieldValueFactor);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FunctionScoreQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FunctionScoreQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FunctionScoreQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FunctionScoreQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FunctionScoreQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FunctionScoreQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FunctionScoreQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FunctionScoreQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FunctionScoreQuery result;
      
      private FunctionScoreQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          FunctionScoreQuery original = result;
          result = new FunctionScoreQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FunctionScoreQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.Descriptor; }
      }
      
      public override FunctionScoreQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.DefaultInstance; }
      }
      
      public override FunctionScoreQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FunctionScoreQuery) {
          return MergeFrom((FunctionScoreQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FunctionScoreQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FunctionScoreQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasQuery) {
          MergeQuery(other.Query);
        }
        if (other.HasFieldValueFactor) {
          MergeFieldValueFactor(other.FieldValueFactor);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_functionScoreQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _functionScoreQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasQuery) {
                subBuilder.MergeFrom(Query);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Query = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.CreateBuilder();
              if (result.hasFieldValueFactor) {
                subBuilder.MergeFrom(FieldValueFactor);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FieldValueFactor = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasQuery {
       get { return result.hasQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = builderForValue.Build();
        return this;
      }
      public Builder MergeQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasQuery &&
            result.query_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.query_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.query_).MergeFrom(value).BuildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = null;
        return this;
      }
      
      public bool HasFieldValueFactor {
       get { return result.hasFieldValueFactor; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor FieldValueFactor {
        get { return result.FieldValueFactor; }
        set { SetFieldValueFactor(value); }
      }
      public Builder SetFieldValueFactor(global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldValueFactor = true;
        result.fieldValueFactor_ = value;
        return this;
      }
      public Builder SetFieldValueFactor(global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFieldValueFactor = true;
        result.fieldValueFactor_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFieldValueFactor(global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFieldValueFactor &&
            result.fieldValueFactor_ != global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.DefaultInstance) {
            result.fieldValueFactor_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldValueFactor.CreateBuilder(result.fieldValueFactor_).MergeFrom(value).BuildPartial();
        } else {
          result.fieldValueFactor_ = value;
        }
        result.hasFieldValueFactor = true;
        return this;
      }
      public Builder ClearFieldValueFactor() {
        PrepareBuilder();
        result.hasFieldValueFactor = false;
        result.fieldValueFactor_ = null;
        return this;
      }
    }
    static FunctionScoreQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NestedQuery : pb::GeneratedMessage<NestedQuery, NestedQuery.Builder> {
    private NestedQuery() { }
    private static readonly NestedQuery defaultInstance = new NestedQuery().MakeReadOnly();
    private static readonly string[] _nestedQueryFieldNames = new string[] { "path", "query", "score_mode", "weight" };
    private static readonly uint[] _nestedQueryFieldTags = new uint[] { 10, 18, 24, 37 };
    public static NestedQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NestedQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NestedQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NestedQuery, NestedQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedQuery__FieldAccessorTable; }
    }
    
    public const int PathFieldNumber = 1;
    private bool hasPath;
    private string path_ = "";
    public bool HasPath {
      get { return hasPath; }
    }
    public string Path {
      get { return path_; }
    }
    
    public const int QueryFieldNumber = 2;
    private bool hasQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query query_;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
      get { return query_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public const int ScoreModeFieldNumber = 3;
    private bool hasScoreMode;
    private global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode scoreMode_ = global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode.SCORE_MODE_NONE;
    public bool HasScoreMode {
      get { return hasScoreMode; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode ScoreMode {
      get { return scoreMode_; }
    }
    
    public const int WeightFieldNumber = 4;
    private bool hasWeight;
    private float weight_;
    public bool HasWeight {
      get { return hasWeight; }
    }
    public float Weight {
      get { return weight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nestedQueryFieldNames;
      if (hasPath) {
        output.WriteString(1, field_names[0], Path);
      }
      if (hasQuery) {
        output.WriteMessage(2, field_names[1], Query);
      }
      if (hasScoreMode) {
        output.WriteEnum(3, field_names[2], (int) ScoreMode, ScoreMode);
      }
      if (hasWeight) {
        output.WriteFloat(4, field_names[3], Weight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPath) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Path);
      }
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Query);
      }
      if (hasScoreMode) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) ScoreMode);
      }
      if (hasWeight) {
        size += pb::CodedOutputStream.ComputeFloatSize(4, Weight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NestedQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NestedQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NestedQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NestedQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NestedQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NestedQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NestedQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NestedQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NestedQuery result;
      
      private NestedQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          NestedQuery original = result;
          result = new NestedQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NestedQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.Descriptor; }
      }
      
      public override NestedQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.DefaultInstance; }
      }
      
      public override NestedQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NestedQuery) {
          return MergeFrom((NestedQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NestedQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.NestedQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPath) {
          Path = other.Path;
        }
        if (other.HasQuery) {
          MergeQuery(other.Query);
        }
        if (other.HasScoreMode) {
          ScoreMode = other.ScoreMode;
        }
        if (other.HasWeight) {
          Weight = other.Weight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nestedQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nestedQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPath = input.ReadString(ref result.path_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasQuery) {
                subBuilder.MergeFrom(Query);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Query = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.scoreMode_, out unknown)) {
                result.hasScoreMode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 37: {
              result.hasWeight = input.ReadFloat(ref result.weight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPath {
        get { return result.hasPath; }
      }
      public string Path {
        get { return result.Path; }
        set { SetPath(value); }
      }
      public Builder SetPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder ClearPath() {
        PrepareBuilder();
        result.hasPath = false;
        result.path_ = "";
        return this;
      }
      
      public bool HasQuery {
       get { return result.hasQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = builderForValue.Build();
        return this;
      }
      public Builder MergeQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasQuery &&
            result.query_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.query_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.query_).MergeFrom(value).BuildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = null;
        return this;
      }
      
      public bool HasScoreMode {
       get { return result.hasScoreMode; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode ScoreMode {
        get { return result.ScoreMode; }
        set { SetScoreMode(value); }
      }
      public Builder SetScoreMode(global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode value) {
        PrepareBuilder();
        result.hasScoreMode = true;
        result.scoreMode_ = value;
        return this;
      }
      public Builder ClearScoreMode() {
        PrepareBuilder();
        result.hasScoreMode = false;
        result.scoreMode_ = global::com.alicloud.openservices.tablestore.core.protocol.ScoreMode.SCORE_MODE_NONE;
        return this;
      }
      
      public bool HasWeight {
        get { return result.hasWeight; }
      }
      public float Weight {
        get { return result.Weight; }
        set { SetWeight(value); }
      }
      public Builder SetWeight(float value) {
        PrepareBuilder();
        result.hasWeight = true;
        result.weight_ = value;
        return this;
      }
      public Builder ClearWeight() {
        PrepareBuilder();
        result.hasWeight = false;
        result.weight_ = 0F;
        return this;
      }
    }
    static NestedQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoBoundingBoxQuery : pb::GeneratedMessage<GeoBoundingBoxQuery, GeoBoundingBoxQuery.Builder> {
    private GeoBoundingBoxQuery() { }
    private static readonly GeoBoundingBoxQuery defaultInstance = new GeoBoundingBoxQuery().MakeReadOnly();
    private static readonly string[] _geoBoundingBoxQueryFieldNames = new string[] { "bottom_right", "field_name", "top_left" };
    private static readonly uint[] _geoBoundingBoxQueryFieldTags = new uint[] { 26, 10, 18 };
    public static GeoBoundingBoxQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoBoundingBoxQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoBoundingBoxQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoBoundingBoxQuery, GeoBoundingBoxQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoBoundingBoxQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int TopLeftFieldNumber = 2;
    private bool hasTopLeft;
    private string topLeft_ = "";
    public bool HasTopLeft {
      get { return hasTopLeft; }
    }
    public string TopLeft {
      get { return topLeft_; }
    }
    
    public const int BottomRightFieldNumber = 3;
    private bool hasBottomRight;
    private string bottomRight_ = "";
    public bool HasBottomRight {
      get { return hasBottomRight; }
    }
    public string BottomRight {
      get { return bottomRight_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoBoundingBoxQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[1], FieldName);
      }
      if (hasTopLeft) {
        output.WriteString(2, field_names[2], TopLeft);
      }
      if (hasBottomRight) {
        output.WriteString(3, field_names[0], BottomRight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasTopLeft) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TopLeft);
      }
      if (hasBottomRight) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BottomRight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoBoundingBoxQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoBoundingBoxQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoBoundingBoxQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoBoundingBoxQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoBoundingBoxQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoBoundingBoxQuery result;
      
      private GeoBoundingBoxQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoBoundingBoxQuery original = result;
          result = new GeoBoundingBoxQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoBoundingBoxQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.Descriptor; }
      }
      
      public override GeoBoundingBoxQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.DefaultInstance; }
      }
      
      public override GeoBoundingBoxQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoBoundingBoxQuery) {
          return MergeFrom((GeoBoundingBoxQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoBoundingBoxQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoBoundingBoxQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasTopLeft) {
          TopLeft = other.TopLeft;
        }
        if (other.HasBottomRight) {
          BottomRight = other.BottomRight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoBoundingBoxQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoBoundingBoxQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasTopLeft = input.ReadString(ref result.topLeft_);
              break;
            }
            case 26: {
              result.hasBottomRight = input.ReadString(ref result.bottomRight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasTopLeft {
        get { return result.hasTopLeft; }
      }
      public string TopLeft {
        get { return result.TopLeft; }
        set { SetTopLeft(value); }
      }
      public Builder SetTopLeft(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTopLeft = true;
        result.topLeft_ = value;
        return this;
      }
      public Builder ClearTopLeft() {
        PrepareBuilder();
        result.hasTopLeft = false;
        result.topLeft_ = "";
        return this;
      }
      
      public bool HasBottomRight {
        get { return result.hasBottomRight; }
      }
      public string BottomRight {
        get { return result.BottomRight; }
        set { SetBottomRight(value); }
      }
      public Builder SetBottomRight(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBottomRight = true;
        result.bottomRight_ = value;
        return this;
      }
      public Builder ClearBottomRight() {
        PrepareBuilder();
        result.hasBottomRight = false;
        result.bottomRight_ = "";
        return this;
      }
    }
    static GeoBoundingBoxQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoDistanceQuery : pb::GeneratedMessage<GeoDistanceQuery, GeoDistanceQuery.Builder> {
    private GeoDistanceQuery() { }
    private static readonly GeoDistanceQuery defaultInstance = new GeoDistanceQuery().MakeReadOnly();
    private static readonly string[] _geoDistanceQueryFieldNames = new string[] { "center_point", "distance", "field_name" };
    private static readonly uint[] _geoDistanceQueryFieldTags = new uint[] { 18, 25, 10 };
    public static GeoDistanceQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoDistanceQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoDistanceQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoDistanceQuery, GeoDistanceQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int CenterPointFieldNumber = 2;
    private bool hasCenterPoint;
    private string centerPoint_ = "";
    public bool HasCenterPoint {
      get { return hasCenterPoint; }
    }
    public string CenterPoint {
      get { return centerPoint_; }
    }
    
    public const int DistanceFieldNumber = 3;
    private bool hasDistance;
    private double distance_;
    public bool HasDistance {
      get { return hasDistance; }
    }
    public double Distance {
      get { return distance_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoDistanceQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[2], FieldName);
      }
      if (hasCenterPoint) {
        output.WriteString(2, field_names[0], CenterPoint);
      }
      if (hasDistance) {
        output.WriteDouble(3, field_names[1], Distance);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasCenterPoint) {
        size += pb::CodedOutputStream.ComputeStringSize(2, CenterPoint);
      }
      if (hasDistance) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Distance);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoDistanceQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoDistanceQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoDistanceQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoDistanceQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoDistanceQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoDistanceQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoDistanceQuery result;
      
      private GeoDistanceQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoDistanceQuery original = result;
          result = new GeoDistanceQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoDistanceQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.Descriptor; }
      }
      
      public override GeoDistanceQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.DefaultInstance; }
      }
      
      public override GeoDistanceQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoDistanceQuery) {
          return MergeFrom((GeoDistanceQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoDistanceQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasCenterPoint) {
          CenterPoint = other.CenterPoint;
        }
        if (other.HasDistance) {
          Distance = other.Distance;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoDistanceQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoDistanceQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasCenterPoint = input.ReadString(ref result.centerPoint_);
              break;
            }
            case 25: {
              result.hasDistance = input.ReadDouble(ref result.distance_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasCenterPoint {
        get { return result.hasCenterPoint; }
      }
      public string CenterPoint {
        get { return result.CenterPoint; }
        set { SetCenterPoint(value); }
      }
      public Builder SetCenterPoint(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCenterPoint = true;
        result.centerPoint_ = value;
        return this;
      }
      public Builder ClearCenterPoint() {
        PrepareBuilder();
        result.hasCenterPoint = false;
        result.centerPoint_ = "";
        return this;
      }
      
      public bool HasDistance {
        get { return result.hasDistance; }
      }
      public double Distance {
        get { return result.Distance; }
        set { SetDistance(value); }
      }
      public Builder SetDistance(double value) {
        PrepareBuilder();
        result.hasDistance = true;
        result.distance_ = value;
        return this;
      }
      public Builder ClearDistance() {
        PrepareBuilder();
        result.hasDistance = false;
        result.distance_ = 0D;
        return this;
      }
    }
    static GeoDistanceQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoPolygonQuery : pb::GeneratedMessage<GeoPolygonQuery, GeoPolygonQuery.Builder> {
    private GeoPolygonQuery() { }
    private static readonly GeoPolygonQuery defaultInstance = new GeoPolygonQuery().MakeReadOnly();
    private static readonly string[] _geoPolygonQueryFieldNames = new string[] { "field_name", "points" };
    private static readonly uint[] _geoPolygonQueryFieldTags = new uint[] { 10, 18 };
    public static GeoPolygonQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoPolygonQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoPolygonQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoPolygonQuery, GeoPolygonQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPolygonQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int PointsFieldNumber = 2;
    private pbc::PopsicleList<string> points_ = new pbc::PopsicleList<string>();
    public scg::IList<string> PointsList {
      get { return pbc::Lists.AsReadOnly(points_); }
    }
    public int PointsCount {
      get { return points_.Count; }
    }
    public string GetPoints(int index) {
      return points_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoPolygonQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (points_.Count > 0) {
        output.WriteStringArray(2, field_names[1], points_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      {
        int dataSize = 0;
        foreach (string element in PointsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * points_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoPolygonQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoPolygonQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoPolygonQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoPolygonQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoPolygonQuery MakeReadOnly() {
      points_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoPolygonQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoPolygonQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoPolygonQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoPolygonQuery result;
      
      private GeoPolygonQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoPolygonQuery original = result;
          result = new GeoPolygonQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoPolygonQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.Descriptor; }
      }
      
      public override GeoPolygonQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.DefaultInstance; }
      }
      
      public override GeoPolygonQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoPolygonQuery) {
          return MergeFrom((GeoPolygonQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoPolygonQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoPolygonQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.points_.Count != 0) {
          result.points_.Add(other.points_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoPolygonQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoPolygonQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.points_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> PointsList {
        get { return PrepareBuilder().points_; }
      }
      public int PointsCount {
        get { return result.PointsCount; }
      }
      public string GetPoints(int index) {
        return result.GetPoints(index);
      }
      public Builder SetPoints(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_[index] = value;
        return this;
      }
      public Builder AddPoints(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_.Add(value);
        return this;
      }
      public Builder AddRangePoints(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.points_.Add(values);
        return this;
      }
      public Builder ClearPoints() {
        PrepareBuilder();
        result.points_.Clear();
        return this;
      }
    }
    static GeoPolygonQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExistsQuery : pb::GeneratedMessage<ExistsQuery, ExistsQuery.Builder> {
    private ExistsQuery() { }
    private static readonly ExistsQuery defaultInstance = new ExistsQuery().MakeReadOnly();
    private static readonly string[] _existsQueryFieldNames = new string[] { "field_name" };
    private static readonly uint[] _existsQueryFieldTags = new uint[] { 10 };
    public static ExistsQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExistsQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExistsQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ExistsQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExistsQuery, ExistsQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ExistsQuery__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _existsQueryFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ExistsQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExistsQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExistsQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExistsQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExistsQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExistsQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExistsQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExistsQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExistsQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExistsQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExistsQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExistsQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExistsQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExistsQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExistsQuery result;
      
      private ExistsQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          ExistsQuery original = result;
          result = new ExistsQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExistsQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ExistsQuery.Descriptor; }
      }
      
      public override ExistsQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ExistsQuery.DefaultInstance; }
      }
      
      public override ExistsQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExistsQuery) {
          return MergeFrom((ExistsQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExistsQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ExistsQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_existsQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _existsQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
    }
    static ExistsQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Query : pb::GeneratedMessage<Query, Query.Builder> {
    private Query() { }
    private static readonly Query defaultInstance = new Query().MakeReadOnly();
    private static readonly string[] _queryFieldNames = new string[] { "query", "type" };
    private static readonly uint[] _queryFieldTags = new uint[] { 18, 8 };
    public static Query DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Query DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Query ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Query, Query.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Query__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.QueryType type_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryType.MATCH_QUERY;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.QueryType Type {
      get { return type_; }
    }
    
    public const int Query_FieldNumber = 2;
    private bool hasQuery_;
    private pb::ByteString query_ = pb::ByteString.Empty;
    public bool HasQuery_ {
      get { return hasQuery_; }
    }
    public pb::ByteString Query_ {
      get { return query_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _queryFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasQuery_) {
        output.WriteBytes(2, field_names[0], Query_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasQuery_) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Query_);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Query ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Query ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Query ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Query ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Query ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Query ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Query ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Query ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Query ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Query ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Query MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Query prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Query, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Query cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Query result;
      
      private Query PrepareBuilder() {
        if (resultIsReadOnly) {
          Query original = result;
          result = new Query();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Query MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Query.Descriptor; }
      }
      
      public override Query DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
      }
      
      public override Query BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Query) {
          return MergeFrom((Query) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Query other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasQuery_) {
          Query_ = other.Query_;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasQuery_ = input.ReadBytes(ref result.query_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.QueryType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.QueryType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.QueryType.MATCH_QUERY;
        return this;
      }
      
      public bool HasQuery_ {
        get { return result.hasQuery_; }
      }
      public pb::ByteString Query_ {
        get { return result.Query_; }
        set { SetQuery_(value); }
      }
      public Builder SetQuery_(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery_ = true;
        result.query_ = value;
        return this;
      }
      public Builder ClearQuery_() {
        PrepareBuilder();
        result.hasQuery_ = false;
        result.query_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Query() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Collapse : pb::GeneratedMessage<Collapse, Collapse.Builder> {
    private Collapse() { }
    private static readonly Collapse defaultInstance = new Collapse().MakeReadOnly();
    private static readonly string[] _collapseFieldNames = new string[] { "field_name" };
    private static readonly uint[] _collapseFieldTags = new uint[] { 10 };
    public static Collapse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Collapse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Collapse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Collapse, Collapse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Collapse__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _collapseFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Collapse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collapse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collapse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collapse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collapse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collapse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Collapse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Collapse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Collapse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collapse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Collapse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Collapse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Collapse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Collapse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Collapse result;
      
      private Collapse PrepareBuilder() {
        if (resultIsReadOnly) {
          Collapse original = result;
          result = new Collapse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Collapse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Descriptor; }
      }
      
      public override Collapse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance; }
      }
      
      public override Collapse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Collapse) {
          return MergeFrom((Collapse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Collapse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_collapseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _collapseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
    }
    static Collapse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NestedFilter : pb::GeneratedMessage<NestedFilter, NestedFilter.Builder> {
    private NestedFilter() { }
    private static readonly NestedFilter defaultInstance = new NestedFilter().MakeReadOnly();
    private static readonly string[] _nestedFilterFieldNames = new string[] { "filter", "path" };
    private static readonly uint[] _nestedFilterFieldTags = new uint[] { 18, 10 };
    public static NestedFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NestedFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NestedFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NestedFilter, NestedFilter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_NestedFilter__FieldAccessorTable; }
    }
    
    public const int PathFieldNumber = 1;
    private bool hasPath;
    private string path_ = "";
    public bool HasPath {
      get { return hasPath; }
    }
    public string Path {
      get { return path_; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
      get { return filter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _nestedFilterFieldNames;
      if (hasPath) {
        output.WriteString(1, field_names[1], Path);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[0], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPath) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Path);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NestedFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NestedFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NestedFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NestedFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NestedFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NestedFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NestedFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NestedFilter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NestedFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NestedFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NestedFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NestedFilter result;
      
      private NestedFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          NestedFilter original = result;
          result = new NestedFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NestedFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Descriptor; }
      }
      
      public override NestedFilter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance; }
      }
      
      public override NestedFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NestedFilter) {
          return MergeFrom((NestedFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NestedFilter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPath) {
          Path = other.Path;
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_nestedFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _nestedFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPath = input.ReadString(ref result.path_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPath {
        get { return result.hasPath; }
      }
      public string Path {
        get { return result.Path; }
        set { SetPath(value); }
      }
      public Builder SetPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder ClearPath() {
        PrepareBuilder();
        result.hasPath = false;
        result.path_ = "";
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.filter_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static NestedFilter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScoreSort : pb::GeneratedMessage<ScoreSort, ScoreSort.Builder> {
    private ScoreSort() { }
    private static readonly ScoreSort defaultInstance = new ScoreSort().MakeReadOnly();
    private static readonly string[] _scoreSortFieldNames = new string[] { "order" };
    private static readonly uint[] _scoreSortFieldTags = new uint[] { 8 };
    public static ScoreSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ScoreSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ScoreSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ScoreSort, ScoreSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ScoreSort__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _scoreSortFieldNames;
      if (hasOrder) {
        output.WriteEnum(1, field_names[0], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ScoreSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScoreSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScoreSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScoreSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScoreSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScoreSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ScoreSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ScoreSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ScoreSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScoreSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ScoreSort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ScoreSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ScoreSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ScoreSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ScoreSort result;
      
      private ScoreSort PrepareBuilder() {
        if (resultIsReadOnly) {
          ScoreSort original = result;
          result = new ScoreSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ScoreSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Descriptor; }
      }
      
      public override ScoreSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance; }
      }
      
      public override ScoreSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ScoreSort) {
          return MergeFrom((ScoreSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ScoreSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_scoreSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _scoreSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
    }
    static ScoreSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PrimaryKeySort : pb::GeneratedMessage<PrimaryKeySort, PrimaryKeySort.Builder> {
    private PrimaryKeySort() { }
    private static readonly PrimaryKeySort defaultInstance = new PrimaryKeySort().MakeReadOnly();
    private static readonly string[] _primaryKeySortFieldNames = new string[] { "order" };
    private static readonly uint[] _primaryKeySortFieldTags = new uint[] { 8 };
    public static PrimaryKeySort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PrimaryKeySort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PrimaryKeySort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PrimaryKeySort, PrimaryKeySort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PrimaryKeySort__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _primaryKeySortFieldNames;
      if (hasOrder) {
        output.WriteEnum(1, field_names[0], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PrimaryKeySort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PrimaryKeySort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PrimaryKeySort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PrimaryKeySort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PrimaryKeySort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PrimaryKeySort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PrimaryKeySort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PrimaryKeySort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PrimaryKeySort result;
      
      private PrimaryKeySort PrepareBuilder() {
        if (resultIsReadOnly) {
          PrimaryKeySort original = result;
          result = new PrimaryKeySort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PrimaryKeySort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Descriptor; }
      }
      
      public override PrimaryKeySort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance; }
      }
      
      public override PrimaryKeySort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PrimaryKeySort) {
          return MergeFrom((PrimaryKeySort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PrimaryKeySort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_primaryKeySortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _primaryKeySortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
    }
    static PrimaryKeySort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FieldSort : pb::GeneratedMessage<FieldSort, FieldSort.Builder> {
    private FieldSort() { }
    private static readonly FieldSort defaultInstance = new FieldSort().MakeReadOnly();
    private static readonly string[] _fieldSortFieldNames = new string[] { "field_name", "missing_field", "missing_value", "mode", "nested_filter", "order" };
    private static readonly uint[] _fieldSortFieldTags = new uint[] { 10, 50, 42, 24, 34, 16 };
    public static FieldSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldSort, FieldSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSort__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int OrderFieldNumber = 2;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public const int ModeFieldNumber = 3;
    private bool hasMode;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortMode mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
    public bool HasMode {
      get { return hasMode; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
      get { return mode_; }
    }
    
    public const int NestedFilterFieldNumber = 4;
    private bool hasNestedFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter nestedFilter_;
    public bool HasNestedFilter {
      get { return hasNestedFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
      get { return nestedFilter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance; }
    }
    
    public const int MissingValueFieldNumber = 5;
    private bool hasMissingValue;
    private pb::ByteString missingValue_ = pb::ByteString.Empty;
    public bool HasMissingValue {
      get { return hasMissingValue; }
    }
    public pb::ByteString MissingValue {
      get { return missingValue_; }
    }
    
    public const int MissingFieldFieldNumber = 6;
    private bool hasMissingField;
    private string missingField_ = "";
    public bool HasMissingField {
      get { return hasMissingField; }
    }
    public string MissingField {
      get { return missingField_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fieldSortFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasOrder) {
        output.WriteEnum(2, field_names[5], (int) Order, Order);
      }
      if (hasMode) {
        output.WriteEnum(3, field_names[3], (int) Mode, Mode);
      }
      if (hasNestedFilter) {
        output.WriteMessage(4, field_names[4], NestedFilter);
      }
      if (hasMissingValue) {
        output.WriteBytes(5, field_names[2], MissingValue);
      }
      if (hasMissingField) {
        output.WriteString(6, field_names[1], MissingField);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Order);
      }
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Mode);
      }
      if (hasNestedFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, NestedFilter);
      }
      if (hasMissingValue) {
        size += pb::CodedOutputStream.ComputeBytesSize(5, MissingValue);
      }
      if (hasMissingField) {
        size += pb::CodedOutputStream.ComputeStringSize(6, MissingField);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FieldSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldSort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldSort result;
      
      private FieldSort PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldSort original = result;
          result = new FieldSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Descriptor; }
      }
      
      public override FieldSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance; }
      }
      
      public override FieldSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldSort) {
          return MergeFrom((FieldSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasNestedFilter) {
          MergeNestedFilter(other.NestedFilter);
        }
        if (other.HasMissingValue) {
          MissingValue = other.MissingValue;
        }
        if (other.HasMissingField) {
          MissingField = other.MissingField;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.mode_, out unknown)) {
                result.hasMode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder();
              if (result.hasNestedFilter) {
                subBuilder.MergeFrom(NestedFilter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NestedFilter = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              result.hasMissingValue = input.ReadBytes(ref result.missingValue_);
              break;
            }
            case 50: {
              result.hasMissingField = input.ReadString(ref result.missingField_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
      
      public bool HasMode {
       get { return result.hasMode; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      public Builder SetMode(global::com.alicloud.openservices.tablestore.core.protocol.SortMode value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
        return this;
      }
      
      public bool HasNestedFilter {
       get { return result.hasNestedFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
        get { return result.NestedFilter; }
        set { SetNestedFilter(value); }
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = value;
        return this;
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNestedFilter &&
            result.nestedFilter_ != global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance) {
            result.nestedFilter_ = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder(result.nestedFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.nestedFilter_ = value;
        }
        result.hasNestedFilter = true;
        return this;
      }
      public Builder ClearNestedFilter() {
        PrepareBuilder();
        result.hasNestedFilter = false;
        result.nestedFilter_ = null;
        return this;
      }
      
      public bool HasMissingValue {
        get { return result.hasMissingValue; }
      }
      public pb::ByteString MissingValue {
        get { return result.MissingValue; }
        set { SetMissingValue(value); }
      }
      public Builder SetMissingValue(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissingValue = true;
        result.missingValue_ = value;
        return this;
      }
      public Builder ClearMissingValue() {
        PrepareBuilder();
        result.hasMissingValue = false;
        result.missingValue_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMissingField {
        get { return result.hasMissingField; }
      }
      public string MissingField {
        get { return result.MissingField; }
        set { SetMissingField(value); }
      }
      public Builder SetMissingField(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissingField = true;
        result.missingField_ = value;
        return this;
      }
      public Builder ClearMissingField() {
        PrepareBuilder();
        result.hasMissingField = false;
        result.missingField_ = "";
        return this;
      }
    }
    static FieldSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoDistanceSort : pb::GeneratedMessage<GeoDistanceSort, GeoDistanceSort.Builder> {
    private GeoDistanceSort() { }
    private static readonly GeoDistanceSort defaultInstance = new GeoDistanceSort().MakeReadOnly();
    private static readonly string[] _geoDistanceSortFieldNames = new string[] { "distance_type", "field_name", "mode", "nested_filter", "order", "points" };
    private static readonly uint[] _geoDistanceSortFieldTags = new uint[] { 40, 10, 32, 50, 24, 18 };
    public static GeoDistanceSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoDistanceSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoDistanceSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoDistanceSort, GeoDistanceSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoDistanceSort__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int PointsFieldNumber = 2;
    private pbc::PopsicleList<string> points_ = new pbc::PopsicleList<string>();
    public scg::IList<string> PointsList {
      get { return pbc::Lists.AsReadOnly(points_); }
    }
    public int PointsCount {
      get { return points_.Count; }
    }
    public string GetPoints(int index) {
      return points_[index];
    }
    
    public const int OrderFieldNumber = 3;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public const int ModeFieldNumber = 4;
    private bool hasMode;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortMode mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
    public bool HasMode {
      get { return hasMode; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
      get { return mode_; }
    }
    
    public const int DistanceTypeFieldNumber = 5;
    private bool hasDistanceType;
    private global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType distanceType_ = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType.GEO_DISTANCE_ARC;
    public bool HasDistanceType {
      get { return hasDistanceType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType DistanceType {
      get { return distanceType_; }
    }
    
    public const int NestedFilterFieldNumber = 6;
    private bool hasNestedFilter;
    private global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter nestedFilter_;
    public bool HasNestedFilter {
      get { return hasNestedFilter; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
      get { return nestedFilter_ ?? global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoDistanceSortFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[1], FieldName);
      }
      if (points_.Count > 0) {
        output.WriteStringArray(2, field_names[5], points_);
      }
      if (hasOrder) {
        output.WriteEnum(3, field_names[4], (int) Order, Order);
      }
      if (hasMode) {
        output.WriteEnum(4, field_names[2], (int) Mode, Mode);
      }
      if (hasDistanceType) {
        output.WriteEnum(5, field_names[0], (int) DistanceType, DistanceType);
      }
      if (hasNestedFilter) {
        output.WriteMessage(6, field_names[3], NestedFilter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      {
        int dataSize = 0;
        foreach (string element in PointsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * points_.Count;
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Order);
      }
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Mode);
      }
      if (hasDistanceType) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) DistanceType);
      }
      if (hasNestedFilter) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, NestedFilter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoDistanceSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoDistanceSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoDistanceSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoDistanceSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoDistanceSort MakeReadOnly() {
      points_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoDistanceSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoDistanceSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoDistanceSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoDistanceSort result;
      
      private GeoDistanceSort PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoDistanceSort original = result;
          result = new GeoDistanceSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoDistanceSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Descriptor; }
      }
      
      public override GeoDistanceSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance; }
      }
      
      public override GeoDistanceSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoDistanceSort) {
          return MergeFrom((GeoDistanceSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoDistanceSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.points_.Count != 0) {
          result.points_.Add(other.points_);
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasDistanceType) {
          DistanceType = other.DistanceType;
        }
        if (other.HasNestedFilter) {
          MergeNestedFilter(other.NestedFilter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoDistanceSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoDistanceSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.points_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.mode_, out unknown)) {
                result.hasMode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.distanceType_, out unknown)) {
                result.hasDistanceType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder();
              if (result.hasNestedFilter) {
                subBuilder.MergeFrom(NestedFilter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NestedFilter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> PointsList {
        get { return PrepareBuilder().points_; }
      }
      public int PointsCount {
        get { return result.PointsCount; }
      }
      public string GetPoints(int index) {
        return result.GetPoints(index);
      }
      public Builder SetPoints(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_[index] = value;
        return this;
      }
      public Builder AddPoints(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.points_.Add(value);
        return this;
      }
      public Builder AddRangePoints(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.points_.Add(values);
        return this;
      }
      public Builder ClearPoints() {
        PrepareBuilder();
        result.points_.Clear();
        return this;
      }
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
      
      public bool HasMode {
       get { return result.hasMode; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortMode Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      public Builder SetMode(global::com.alicloud.openservices.tablestore.core.protocol.SortMode value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = global::com.alicloud.openservices.tablestore.core.protocol.SortMode.SORT_MODE_MIN;
        return this;
      }
      
      public bool HasDistanceType {
       get { return result.hasDistanceType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType DistanceType {
        get { return result.DistanceType; }
        set { SetDistanceType(value); }
      }
      public Builder SetDistanceType(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType value) {
        PrepareBuilder();
        result.hasDistanceType = true;
        result.distanceType_ = value;
        return this;
      }
      public Builder ClearDistanceType() {
        PrepareBuilder();
        result.hasDistanceType = false;
        result.distanceType_ = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceType.GEO_DISTANCE_ARC;
        return this;
      }
      
      public bool HasNestedFilter {
       get { return result.hasNestedFilter; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter NestedFilter {
        get { return result.NestedFilter; }
        set { SetNestedFilter(value); }
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = value;
        return this;
      }
      public Builder SetNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNestedFilter = true;
        result.nestedFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNestedFilter(global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNestedFilter &&
            result.nestedFilter_ != global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.DefaultInstance) {
            result.nestedFilter_ = global::com.alicloud.openservices.tablestore.core.protocol.NestedFilter.CreateBuilder(result.nestedFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.nestedFilter_ = value;
        }
        result.hasNestedFilter = true;
        return this;
      }
      public Builder ClearNestedFilter() {
        PrepareBuilder();
        result.hasNestedFilter = false;
        result.nestedFilter_ = null;
        return this;
      }
    }
    static GeoDistanceSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Sorter : pb::GeneratedMessage<Sorter, Sorter.Builder> {
    private Sorter() { }
    private static readonly Sorter defaultInstance = new Sorter().MakeReadOnly();
    private static readonly string[] _sorterFieldNames = new string[] { "field_sort", "geo_distance_sort", "pk_sort", "score_sort" };
    private static readonly uint[] _sorterFieldTags = new uint[] { 10, 18, 34, 26 };
    public static Sorter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Sorter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Sorter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Sorter, Sorter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sorter__FieldAccessorTable; }
    }
    
    public const int FieldSortFieldNumber = 1;
    private bool hasFieldSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.FieldSort fieldSort_;
    public bool HasFieldSort {
      get { return hasFieldSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldSort FieldSort {
      get { return fieldSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance; }
    }
    
    public const int GeoDistanceSortFieldNumber = 2;
    private bool hasGeoDistanceSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort geoDistanceSort_;
    public bool HasGeoDistanceSort {
      get { return hasGeoDistanceSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort GeoDistanceSort {
      get { return geoDistanceSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance; }
    }
    
    public const int ScoreSortFieldNumber = 3;
    private bool hasScoreSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort scoreSort_;
    public bool HasScoreSort {
      get { return hasScoreSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort ScoreSort {
      get { return scoreSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance; }
    }
    
    public const int PkSortFieldNumber = 4;
    private bool hasPkSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort pkSort_;
    public bool HasPkSort {
      get { return hasPkSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort PkSort {
      get { return pkSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sorterFieldNames;
      if (hasFieldSort) {
        output.WriteMessage(1, field_names[0], FieldSort);
      }
      if (hasGeoDistanceSort) {
        output.WriteMessage(2, field_names[1], GeoDistanceSort);
      }
      if (hasScoreSort) {
        output.WriteMessage(3, field_names[3], ScoreSort);
      }
      if (hasPkSort) {
        output.WriteMessage(4, field_names[2], PkSort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, FieldSort);
      }
      if (hasGeoDistanceSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, GeoDistanceSort);
      }
      if (hasScoreSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, ScoreSort);
      }
      if (hasPkSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, PkSort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Sorter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sorter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sorter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sorter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sorter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sorter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Sorter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Sorter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Sorter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sorter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Sorter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Sorter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Sorter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Sorter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Sorter result;
      
      private Sorter PrepareBuilder() {
        if (resultIsReadOnly) {
          Sorter original = result;
          result = new Sorter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Sorter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Descriptor; }
      }
      
      public override Sorter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sorter.DefaultInstance; }
      }
      
      public override Sorter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Sorter) {
          return MergeFrom((Sorter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Sorter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Sorter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldSort) {
          MergeFieldSort(other.FieldSort);
        }
        if (other.HasGeoDistanceSort) {
          MergeGeoDistanceSort(other.GeoDistanceSort);
        }
        if (other.HasScoreSort) {
          MergeScoreSort(other.ScoreSort);
        }
        if (other.HasPkSort) {
          MergePkSort(other.PkSort);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sorterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sorterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.CreateBuilder();
              if (result.hasFieldSort) {
                subBuilder.MergeFrom(FieldSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FieldSort = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.CreateBuilder();
              if (result.hasGeoDistanceSort) {
                subBuilder.MergeFrom(GeoDistanceSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GeoDistanceSort = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.CreateBuilder();
              if (result.hasScoreSort) {
                subBuilder.MergeFrom(ScoreSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ScoreSort = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.CreateBuilder();
              if (result.hasPkSort) {
                subBuilder.MergeFrom(PkSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PkSort = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldSort {
       get { return result.hasFieldSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldSort FieldSort {
        get { return result.FieldSort; }
        set { SetFieldSort(value); }
      }
      public Builder SetFieldSort(global::com.alicloud.openservices.tablestore.core.protocol.FieldSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldSort = true;
        result.fieldSort_ = value;
        return this;
      }
      public Builder SetFieldSort(global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFieldSort = true;
        result.fieldSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFieldSort(global::com.alicloud.openservices.tablestore.core.protocol.FieldSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFieldSort &&
            result.fieldSort_ != global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.DefaultInstance) {
            result.fieldSort_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldSort.CreateBuilder(result.fieldSort_).MergeFrom(value).BuildPartial();
        } else {
          result.fieldSort_ = value;
        }
        result.hasFieldSort = true;
        return this;
      }
      public Builder ClearFieldSort() {
        PrepareBuilder();
        result.hasFieldSort = false;
        result.fieldSort_ = null;
        return this;
      }
      
      public bool HasGeoDistanceSort {
       get { return result.hasGeoDistanceSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort GeoDistanceSort {
        get { return result.GeoDistanceSort; }
        set { SetGeoDistanceSort(value); }
      }
      public Builder SetGeoDistanceSort(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGeoDistanceSort = true;
        result.geoDistanceSort_ = value;
        return this;
      }
      public Builder SetGeoDistanceSort(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGeoDistanceSort = true;
        result.geoDistanceSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGeoDistanceSort(global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGeoDistanceSort &&
            result.geoDistanceSort_ != global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.DefaultInstance) {
            result.geoDistanceSort_ = global::com.alicloud.openservices.tablestore.core.protocol.GeoDistanceSort.CreateBuilder(result.geoDistanceSort_).MergeFrom(value).BuildPartial();
        } else {
          result.geoDistanceSort_ = value;
        }
        result.hasGeoDistanceSort = true;
        return this;
      }
      public Builder ClearGeoDistanceSort() {
        PrepareBuilder();
        result.hasGeoDistanceSort = false;
        result.geoDistanceSort_ = null;
        return this;
      }
      
      public bool HasScoreSort {
       get { return result.hasScoreSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort ScoreSort {
        get { return result.ScoreSort; }
        set { SetScoreSort(value); }
      }
      public Builder SetScoreSort(global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScoreSort = true;
        result.scoreSort_ = value;
        return this;
      }
      public Builder SetScoreSort(global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScoreSort = true;
        result.scoreSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScoreSort(global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScoreSort &&
            result.scoreSort_ != global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.DefaultInstance) {
            result.scoreSort_ = global::com.alicloud.openservices.tablestore.core.protocol.ScoreSort.CreateBuilder(result.scoreSort_).MergeFrom(value).BuildPartial();
        } else {
          result.scoreSort_ = value;
        }
        result.hasScoreSort = true;
        return this;
      }
      public Builder ClearScoreSort() {
        PrepareBuilder();
        result.hasScoreSort = false;
        result.scoreSort_ = null;
        return this;
      }
      
      public bool HasPkSort {
       get { return result.hasPkSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort PkSort {
        get { return result.PkSort; }
        set { SetPkSort(value); }
      }
      public Builder SetPkSort(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPkSort = true;
        result.pkSort_ = value;
        return this;
      }
      public Builder SetPkSort(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPkSort = true;
        result.pkSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergePkSort(global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPkSort &&
            result.pkSort_ != global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.DefaultInstance) {
            result.pkSort_ = global::com.alicloud.openservices.tablestore.core.protocol.PrimaryKeySort.CreateBuilder(result.pkSort_).MergeFrom(value).BuildPartial();
        } else {
          result.pkSort_ = value;
        }
        result.hasPkSort = true;
        return this;
      }
      public Builder ClearPkSort() {
        PrepareBuilder();
        result.hasPkSort = false;
        result.pkSort_ = null;
        return this;
      }
    }
    static Sorter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Sort : pb::GeneratedMessage<Sort, Sort.Builder> {
    private Sort() { }
    private static readonly Sort defaultInstance = new Sort().MakeReadOnly();
    private static readonly string[] _sortFieldNames = new string[] { "sorter" };
    private static readonly uint[] _sortFieldTags = new uint[] { 10 };
    public static Sort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Sort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Sort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Sort, Sort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Sort__FieldAccessorTable; }
    }
    
    public const int SorterFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> sorter_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> SorterList {
      get { return sorter_; }
    }
    public int SorterCount {
      get { return sorter_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Sorter GetSorter(int index) {
      return sorter_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sortFieldNames;
      if (sorter_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], sorter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Sorter element in SorterList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Sort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Sort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Sort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Sort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Sort MakeReadOnly() {
      sorter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Sort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Sort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Sort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Sort result;
      
      private Sort PrepareBuilder() {
        if (resultIsReadOnly) {
          Sort original = result;
          result = new Sort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Sort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sort.Descriptor; }
      }
      
      public override Sort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance; }
      }
      
      public override Sort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Sort) {
          return MergeFrom((Sort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Sort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.sorter_.Count != 0) {
          result.sorter_.Add(other.sorter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.sorter_, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> SorterList {
        get { return PrepareBuilder().sorter_; }
      }
      public int SorterCount {
        get { return result.SorterCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Sorter GetSorter(int index) {
        return result.GetSorter(index);
      }
      public Builder SetSorter(int index, global::com.alicloud.openservices.tablestore.core.protocol.Sorter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sorter_[index] = value;
        return this;
      }
      public Builder SetSorter(int index, global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sorter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSorter(global::com.alicloud.openservices.tablestore.core.protocol.Sorter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sorter_.Add(value);
        return this;
      }
      public Builder AddSorter(global::com.alicloud.openservices.tablestore.core.protocol.Sorter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sorter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSorter(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Sorter> values) {
        PrepareBuilder();
        result.sorter_.Add(values);
        return this;
      }
      public Builder ClearSorter() {
        PrepareBuilder();
        result.sorter_.Clear();
        return this;
      }
    }
    static Sort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchQuery : pb::GeneratedMessage<SearchQuery, SearchQuery.Builder> {
    private SearchQuery() { }
    private static readonly SearchQuery defaultInstance = new SearchQuery().MakeReadOnly();
    private static readonly string[] _searchQueryFieldNames = new string[] { "aggs", "collapse", "getTotalCount", "group_bys", "limit", "offset", "query", "sort", "token" };
    private static readonly uint[] _searchQueryFieldTags = new uint[] { 82, 42, 64, 90, 16, 8, 34, 50, 74 };
    public static SearchQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchQuery, SearchQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchQuery__FieldAccessorTable; }
    }
    
    public const int OffsetFieldNumber = 1;
    private bool hasOffset;
    private int offset_;
    public bool HasOffset {
      get { return hasOffset; }
    }
    public int Offset {
      get { return offset_; }
    }
    
    public const int LimitFieldNumber = 2;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public const int QueryFieldNumber = 4;
    private bool hasQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query query_;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
      get { return query_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public const int CollapseFieldNumber = 5;
    private bool hasCollapse;
    private global::com.alicloud.openservices.tablestore.core.protocol.Collapse collapse_;
    public bool HasCollapse {
      get { return hasCollapse; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Collapse Collapse {
      get { return collapse_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance; }
    }
    
    public const int SortFieldNumber = 6;
    private bool hasSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.Sort sort_;
    public bool HasSort {
      get { return hasSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Sort Sort {
      get { return sort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance; }
    }
    
    public const int GetTotalCountFieldNumber = 8;
    private bool hasGetTotalCount;
    private bool getTotalCount_;
    public bool HasGetTotalCount {
      get { return hasGetTotalCount; }
    }
    public bool GetTotalCount {
      get { return getTotalCount_; }
    }
    
    public const int TokenFieldNumber = 9;
    private bool hasToken;
    private pb::ByteString token_ = pb::ByteString.Empty;
    public bool HasToken {
      get { return hasToken; }
    }
    public pb::ByteString Token {
      get { return token_; }
    }
    
    public const int AggsFieldNumber = 10;
    private bool hasAggs;
    private global::com.alicloud.openservices.tablestore.core.protocol.Aggregations aggs_;
    public bool HasAggs {
      get { return hasAggs; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations Aggs {
      get { return aggs_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance; }
    }
    
    public const int GroupBysFieldNumber = 11;
    private bool hasGroupBys;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBys groupBys_;
    public bool HasGroupBys {
      get { return hasGroupBys; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys GroupBys {
      get { return groupBys_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchQueryFieldNames;
      if (hasOffset) {
        output.WriteInt32(1, field_names[5], Offset);
      }
      if (hasLimit) {
        output.WriteInt32(2, field_names[4], Limit);
      }
      if (hasQuery) {
        output.WriteMessage(4, field_names[6], Query);
      }
      if (hasCollapse) {
        output.WriteMessage(5, field_names[1], Collapse);
      }
      if (hasSort) {
        output.WriteMessage(6, field_names[7], Sort);
      }
      if (hasGetTotalCount) {
        output.WriteBool(8, field_names[2], GetTotalCount);
      }
      if (hasToken) {
        output.WriteBytes(9, field_names[8], Token);
      }
      if (hasAggs) {
        output.WriteMessage(10, field_names[0], Aggs);
      }
      if (hasGroupBys) {
        output.WriteMessage(11, field_names[3], GroupBys);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOffset) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Offset);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Limit);
      }
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Query);
      }
      if (hasCollapse) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, Collapse);
      }
      if (hasSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Sort);
      }
      if (hasGetTotalCount) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, GetTotalCount);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(9, Token);
      }
      if (hasAggs) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, Aggs);
      }
      if (hasGroupBys) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, GroupBys);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchQuery result;
      
      private SearchQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchQuery original = result;
          result = new SearchQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.Descriptor; }
      }
      
      public override SearchQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.DefaultInstance; }
      }
      
      public override SearchQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchQuery) {
          return MergeFrom((SearchQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SearchQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffset) {
          Offset = other.Offset;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        if (other.HasQuery) {
          MergeQuery(other.Query);
        }
        if (other.HasCollapse) {
          MergeCollapse(other.Collapse);
        }
        if (other.HasSort) {
          MergeSort(other.Sort);
        }
        if (other.HasGetTotalCount) {
          GetTotalCount = other.GetTotalCount;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasAggs) {
          MergeAggs(other.Aggs);
        }
        if (other.HasGroupBys) {
          MergeGroupBys(other.GroupBys);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOffset = input.ReadInt32(ref result.offset_);
              break;
            }
            case 16: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasQuery) {
                subBuilder.MergeFrom(Query);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Query = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Collapse.CreateBuilder();
              if (result.hasCollapse) {
                subBuilder.MergeFrom(Collapse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Collapse = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder();
              if (result.hasSort) {
                subBuilder.MergeFrom(Sort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Sort = subBuilder.BuildPartial();
              break;
            }
            case 64: {
              result.hasGetTotalCount = input.ReadBool(ref result.getTotalCount_);
              break;
            }
            case 74: {
              result.hasToken = input.ReadBytes(ref result.token_);
              break;
            }
            case 82: {
              global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder();
              if (result.hasAggs) {
                subBuilder.MergeFrom(Aggs);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Aggs = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder();
              if (result.hasGroupBys) {
                subBuilder.MergeFrom(GroupBys);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GroupBys = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffset {
        get { return result.hasOffset; }
      }
      public int Offset {
        get { return result.Offset; }
        set { SetOffset(value); }
      }
      public Builder SetOffset(int value) {
        PrepareBuilder();
        result.hasOffset = true;
        result.offset_ = value;
        return this;
      }
      public Builder ClearOffset() {
        PrepareBuilder();
        result.hasOffset = false;
        result.offset_ = 0;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      public bool HasQuery {
       get { return result.hasQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = builderForValue.Build();
        return this;
      }
      public Builder MergeQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasQuery &&
            result.query_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.query_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.query_).MergeFrom(value).BuildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = null;
        return this;
      }
      
      public bool HasCollapse {
       get { return result.hasCollapse; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Collapse Collapse {
        get { return result.Collapse; }
        set { SetCollapse(value); }
      }
      public Builder SetCollapse(global::com.alicloud.openservices.tablestore.core.protocol.Collapse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCollapse = true;
        result.collapse_ = value;
        return this;
      }
      public Builder SetCollapse(global::com.alicloud.openservices.tablestore.core.protocol.Collapse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCollapse = true;
        result.collapse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCollapse(global::com.alicloud.openservices.tablestore.core.protocol.Collapse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCollapse &&
            result.collapse_ != global::com.alicloud.openservices.tablestore.core.protocol.Collapse.DefaultInstance) {
            result.collapse_ = global::com.alicloud.openservices.tablestore.core.protocol.Collapse.CreateBuilder(result.collapse_).MergeFrom(value).BuildPartial();
        } else {
          result.collapse_ = value;
        }
        result.hasCollapse = true;
        return this;
      }
      public Builder ClearCollapse() {
        PrepareBuilder();
        result.hasCollapse = false;
        result.collapse_ = null;
        return this;
      }
      
      public bool HasSort {
       get { return result.hasSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Sort Sort {
        get { return result.Sort; }
        set { SetSort(value); }
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = value;
        return this;
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSort &&
            result.sort_ != global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance) {
            result.sort_ = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder(result.sort_).MergeFrom(value).BuildPartial();
        } else {
          result.sort_ = value;
        }
        result.hasSort = true;
        return this;
      }
      public Builder ClearSort() {
        PrepareBuilder();
        result.hasSort = false;
        result.sort_ = null;
        return this;
      }
      
      public bool HasGetTotalCount {
        get { return result.hasGetTotalCount; }
      }
      public bool GetTotalCount {
        get { return result.GetTotalCount; }
        set { SetGetTotalCount(value); }
      }
      public Builder SetGetTotalCount(bool value) {
        PrepareBuilder();
        result.hasGetTotalCount = true;
        result.getTotalCount_ = value;
        return this;
      }
      public Builder ClearGetTotalCount() {
        PrepareBuilder();
        result.hasGetTotalCount = false;
        result.getTotalCount_ = false;
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public pb::ByteString Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasAggs {
       get { return result.hasAggs; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations Aggs {
        get { return result.Aggs; }
        set { SetAggs(value); }
      }
      public Builder SetAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAggs = true;
        result.aggs_ = value;
        return this;
      }
      public Builder SetAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAggs = true;
        result.aggs_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAggs &&
            result.aggs_ != global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance) {
            result.aggs_ = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder(result.aggs_).MergeFrom(value).BuildPartial();
        } else {
          result.aggs_ = value;
        }
        result.hasAggs = true;
        return this;
      }
      public Builder ClearAggs() {
        PrepareBuilder();
        result.hasAggs = false;
        result.aggs_ = null;
        return this;
      }
      
      public bool HasGroupBys {
       get { return result.hasGroupBys; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys GroupBys {
        get { return result.GroupBys; }
        set { SetGroupBys(value); }
      }
      public Builder SetGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroupBys = true;
        result.groupBys_ = value;
        return this;
      }
      public Builder SetGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGroupBys = true;
        result.groupBys_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGroupBys &&
            result.groupBys_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance) {
            result.groupBys_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder(result.groupBys_).MergeFrom(value).BuildPartial();
        } else {
          result.groupBys_ = value;
        }
        result.hasGroupBys = true;
        return this;
      }
      public Builder ClearGroupBys() {
        PrepareBuilder();
        result.hasGroupBys = false;
        result.groupBys_ = null;
        return this;
      }
    }
    static SearchQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ColumnsToGet : pb::GeneratedMessage<ColumnsToGet, ColumnsToGet.Builder> {
    private ColumnsToGet() { }
    private static readonly ColumnsToGet defaultInstance = new ColumnsToGet().MakeReadOnly();
    private static readonly string[] _columnsToGetFieldNames = new string[] { "column_names", "return_type" };
    private static readonly uint[] _columnsToGetFieldTags = new uint[] { 18, 8 };
    public static ColumnsToGet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ColumnsToGet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ColumnsToGet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ColumnsToGet, ColumnsToGet.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ColumnsToGet__FieldAccessorTable; }
    }
    
    public const int ReturnTypeFieldNumber = 1;
    private bool hasReturnType;
    private global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType returnType_ = global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType.RETURN_ALL;
    public bool HasReturnType {
      get { return hasReturnType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType ReturnType {
      get { return returnType_; }
    }
    
    public const int ColumnNamesFieldNumber = 2;
    private pbc::PopsicleList<string> columnNames_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ColumnNamesList {
      get { return pbc::Lists.AsReadOnly(columnNames_); }
    }
    public int ColumnNamesCount {
      get { return columnNames_.Count; }
    }
    public string GetColumnNames(int index) {
      return columnNames_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _columnsToGetFieldNames;
      if (hasReturnType) {
        output.WriteEnum(1, field_names[1], (int) ReturnType, ReturnType);
      }
      if (columnNames_.Count > 0) {
        output.WriteStringArray(2, field_names[0], columnNames_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReturnType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ReturnType);
      }
      {
        int dataSize = 0;
        foreach (string element in ColumnNamesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * columnNames_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ColumnsToGet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ColumnsToGet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ColumnsToGet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ColumnsToGet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ColumnsToGet MakeReadOnly() {
      columnNames_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ColumnsToGet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ColumnsToGet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ColumnsToGet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ColumnsToGet result;
      
      private ColumnsToGet PrepareBuilder() {
        if (resultIsReadOnly) {
          ColumnsToGet original = result;
          result = new ColumnsToGet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ColumnsToGet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Descriptor; }
      }
      
      public override ColumnsToGet DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance; }
      }
      
      public override ColumnsToGet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ColumnsToGet) {
          return MergeFrom((ColumnsToGet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ColumnsToGet other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReturnType) {
          ReturnType = other.ReturnType;
        }
        if (other.columnNames_.Count != 0) {
          result.columnNames_.Add(other.columnNames_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_columnsToGetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _columnsToGetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.returnType_, out unknown)) {
                result.hasReturnType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.columnNames_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReturnType {
       get { return result.hasReturnType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType ReturnType {
        get { return result.ReturnType; }
        set { SetReturnType(value); }
      }
      public Builder SetReturnType(global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType value) {
        PrepareBuilder();
        result.hasReturnType = true;
        result.returnType_ = value;
        return this;
      }
      public Builder ClearReturnType() {
        PrepareBuilder();
        result.hasReturnType = false;
        result.returnType_ = global::com.alicloud.openservices.tablestore.core.protocol.ColumnReturnType.RETURN_ALL;
        return this;
      }
      
      public pbc::IPopsicleList<string> ColumnNamesList {
        get { return PrepareBuilder().columnNames_; }
      }
      public int ColumnNamesCount {
        get { return result.ColumnNamesCount; }
      }
      public string GetColumnNames(int index) {
        return result.GetColumnNames(index);
      }
      public Builder SetColumnNames(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnNames_[index] = value;
        return this;
      }
      public Builder AddColumnNames(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.columnNames_.Add(value);
        return this;
      }
      public Builder AddRangeColumnNames(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.columnNames_.Add(values);
        return this;
      }
      public Builder ClearColumnNames() {
        PrepareBuilder();
        result.columnNames_.Clear();
        return this;
      }
    }
    static ColumnsToGet() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchRequest : pb::GeneratedMessage<SearchRequest, SearchRequest.Builder> {
    private SearchRequest() { }
    private static readonly SearchRequest defaultInstance = new SearchRequest().MakeReadOnly();
    private static readonly string[] _searchRequestFieldNames = new string[] { "columns_to_get", "index_name", "routing_values", "search_query", "table_name", "timeout_ms" };
    private static readonly uint[] _searchRequestFieldTags = new uint[] { 26, 18, 42, 34, 10, 48 };
    public static SearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchRequest, SearchRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private bool hasColumnsToGet;
    private global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet columnsToGet_;
    public bool HasColumnsToGet {
      get { return hasColumnsToGet; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet ColumnsToGet {
      get { return columnsToGet_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance; }
    }
    
    public const int SearchQueryFieldNumber = 4;
    private bool hasSearchQuery;
    private pb::ByteString searchQuery_ = pb::ByteString.Empty;
    public bool HasSearchQuery {
      get { return hasSearchQuery; }
    }
    public pb::ByteString SearchQuery {
      get { return searchQuery_; }
    }
    
    public const int RoutingValuesFieldNumber = 5;
    private pbc::PopsicleList<pb::ByteString> routingValues_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> RoutingValuesList {
      get { return pbc::Lists.AsReadOnly(routingValues_); }
    }
    public int RoutingValuesCount {
      get { return routingValues_.Count; }
    }
    public pb::ByteString GetRoutingValues(int index) {
      return routingValues_[index];
    }
    
    public const int TimeoutMsFieldNumber = 6;
    private bool hasTimeoutMs;
    private int timeoutMs_;
    public bool HasTimeoutMs {
      get { return hasTimeoutMs; }
    }
    public int TimeoutMs {
      get { return timeoutMs_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[4], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[1], IndexName);
      }
      if (hasColumnsToGet) {
        output.WriteMessage(3, field_names[0], ColumnsToGet);
      }
      if (hasSearchQuery) {
        output.WriteBytes(4, field_names[3], SearchQuery);
      }
      if (routingValues_.Count > 0) {
        output.WriteBytesArray(5, field_names[2], routingValues_);
      }
      if (hasTimeoutMs) {
        output.WriteInt32(6, field_names[5], TimeoutMs);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      if (hasColumnsToGet) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, ColumnsToGet);
      }
      if (hasSearchQuery) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, SearchQuery);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in RoutingValuesList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * routingValues_.Count;
      }
      if (hasTimeoutMs) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, TimeoutMs);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchRequest MakeReadOnly() {
      routingValues_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchRequest result;
      
      private SearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchRequest original = result;
          result = new SearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.Descriptor; }
      }
      
      public override SearchRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.DefaultInstance; }
      }
      
      public override SearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchRequest) {
          return MergeFrom((SearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        if (other.HasColumnsToGet) {
          MergeColumnsToGet(other.ColumnsToGet);
        }
        if (other.HasSearchQuery) {
          SearchQuery = other.SearchQuery;
        }
        if (other.routingValues_.Count != 0) {
          result.routingValues_.Add(other.routingValues_);
        }
        if (other.HasTimeoutMs) {
          TimeoutMs = other.TimeoutMs;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.CreateBuilder();
              if (result.hasColumnsToGet) {
                subBuilder.MergeFrom(ColumnsToGet);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ColumnsToGet = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasSearchQuery = input.ReadBytes(ref result.searchQuery_);
              break;
            }
            case 42: {
              input.ReadBytesArray(tag, field_name, result.routingValues_);
              break;
            }
            case 48: {
              result.hasTimeoutMs = input.ReadInt32(ref result.timeoutMs_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
      
      public bool HasColumnsToGet {
       get { return result.hasColumnsToGet; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet ColumnsToGet {
        get { return result.ColumnsToGet; }
        set { SetColumnsToGet(value); }
      }
      public Builder SetColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnsToGet = true;
        result.columnsToGet_ = value;
        return this;
      }
      public Builder SetColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasColumnsToGet = true;
        result.columnsToGet_ = builderForValue.Build();
        return this;
      }
      public Builder MergeColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasColumnsToGet &&
            result.columnsToGet_ != global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance) {
            result.columnsToGet_ = global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.CreateBuilder(result.columnsToGet_).MergeFrom(value).BuildPartial();
        } else {
          result.columnsToGet_ = value;
        }
        result.hasColumnsToGet = true;
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.hasColumnsToGet = false;
        result.columnsToGet_ = null;
        return this;
      }
      
      public bool HasSearchQuery {
        get { return result.hasSearchQuery; }
      }
      public pb::ByteString SearchQuery {
        get { return result.SearchQuery; }
        set { SetSearchQuery(value); }
      }
      public Builder SetSearchQuery(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSearchQuery = true;
        result.searchQuery_ = value;
        return this;
      }
      public Builder ClearSearchQuery() {
        PrepareBuilder();
        result.hasSearchQuery = false;
        result.searchQuery_ = pb::ByteString.Empty;
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> RoutingValuesList {
        get { return PrepareBuilder().routingValues_; }
      }
      public int RoutingValuesCount {
        get { return result.RoutingValuesCount; }
      }
      public pb::ByteString GetRoutingValues(int index) {
        return result.GetRoutingValues(index);
      }
      public Builder SetRoutingValues(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingValues_[index] = value;
        return this;
      }
      public Builder AddRoutingValues(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingValues_.Add(value);
        return this;
      }
      public Builder AddRangeRoutingValues(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.routingValues_.Add(values);
        return this;
      }
      public Builder ClearRoutingValues() {
        PrepareBuilder();
        result.routingValues_.Clear();
        return this;
      }
      
      public bool HasTimeoutMs {
        get { return result.hasTimeoutMs; }
      }
      public int TimeoutMs {
        get { return result.TimeoutMs; }
        set { SetTimeoutMs(value); }
      }
      public Builder SetTimeoutMs(int value) {
        PrepareBuilder();
        result.hasTimeoutMs = true;
        result.timeoutMs_ = value;
        return this;
      }
      public Builder ClearTimeoutMs() {
        PrepareBuilder();
        result.hasTimeoutMs = false;
        result.timeoutMs_ = 0;
        return this;
      }
    }
    static SearchRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchResponse : pb::GeneratedMessage<SearchResponse, SearchResponse.Builder> {
    private SearchResponse() { }
    private static readonly SearchResponse defaultInstance = new SearchResponse().MakeReadOnly();
    private static readonly string[] _searchResponseFieldNames = new string[] { "aggs", "group_bys", "is_all_succeeded", "next_token", "rows", "total_hits" };
    private static readonly uint[] _searchResponseFieldTags = new uint[] { 58, 66, 24, 50, 18, 8 };
    public static SearchResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchResponse, SearchResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SearchResponse__FieldAccessorTable; }
    }
    
    public const int TotalHitsFieldNumber = 1;
    private bool hasTotalHits;
    private long totalHits_;
    public bool HasTotalHits {
      get { return hasTotalHits; }
    }
    public long TotalHits {
      get { return totalHits_; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<pb::ByteString> rows_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> RowsList {
      get { return pbc::Lists.AsReadOnly(rows_); }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public pb::ByteString GetRows(int index) {
      return rows_[index];
    }
    
    public const int IsAllSucceededFieldNumber = 3;
    private bool hasIsAllSucceeded;
    private bool isAllSucceeded_;
    public bool HasIsAllSucceeded {
      get { return hasIsAllSucceeded; }
    }
    public bool IsAllSucceeded {
      get { return isAllSucceeded_; }
    }
    
    public const int NextTokenFieldNumber = 6;
    private bool hasNextToken;
    private pb::ByteString nextToken_ = pb::ByteString.Empty;
    public bool HasNextToken {
      get { return hasNextToken; }
    }
    public pb::ByteString NextToken {
      get { return nextToken_; }
    }
    
    public const int AggsFieldNumber = 7;
    private bool hasAggs;
    private pb::ByteString aggs_ = pb::ByteString.Empty;
    public bool HasAggs {
      get { return hasAggs; }
    }
    public pb::ByteString Aggs {
      get { return aggs_; }
    }
    
    public const int GroupBysFieldNumber = 8;
    private bool hasGroupBys;
    private pb::ByteString groupBys_ = pb::ByteString.Empty;
    public bool HasGroupBys {
      get { return hasGroupBys; }
    }
    public pb::ByteString GroupBys {
      get { return groupBys_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchResponseFieldNames;
      if (hasTotalHits) {
        output.WriteInt64(1, field_names[5], TotalHits);
      }
      if (rows_.Count > 0) {
        output.WriteBytesArray(2, field_names[4], rows_);
      }
      if (hasIsAllSucceeded) {
        output.WriteBool(3, field_names[2], IsAllSucceeded);
      }
      if (hasNextToken) {
        output.WriteBytes(6, field_names[3], NextToken);
      }
      if (hasAggs) {
        output.WriteBytes(7, field_names[0], Aggs);
      }
      if (hasGroupBys) {
        output.WriteBytes(8, field_names[1], GroupBys);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTotalHits) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, TotalHits);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in RowsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * rows_.Count;
      }
      if (hasIsAllSucceeded) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, IsAllSucceeded);
      }
      if (hasNextToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(6, NextToken);
      }
      if (hasAggs) {
        size += pb::CodedOutputStream.ComputeBytesSize(7, Aggs);
      }
      if (hasGroupBys) {
        size += pb::CodedOutputStream.ComputeBytesSize(8, GroupBys);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchResponse MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchResponse result;
      
      private SearchResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchResponse original = result;
          result = new SearchResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.Descriptor; }
      }
      
      public override SearchResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.DefaultInstance; }
      }
      
      public override SearchResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchResponse) {
          return MergeFrom((SearchResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SearchResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTotalHits) {
          TotalHits = other.TotalHits;
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        if (other.HasIsAllSucceeded) {
          IsAllSucceeded = other.IsAllSucceeded;
        }
        if (other.HasNextToken) {
          NextToken = other.NextToken;
        }
        if (other.HasAggs) {
          Aggs = other.Aggs;
        }
        if (other.HasGroupBys) {
          GroupBys = other.GroupBys;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTotalHits = input.ReadInt64(ref result.totalHits_);
              break;
            }
            case 18: {
              input.ReadBytesArray(tag, field_name, result.rows_);
              break;
            }
            case 24: {
              result.hasIsAllSucceeded = input.ReadBool(ref result.isAllSucceeded_);
              break;
            }
            case 50: {
              result.hasNextToken = input.ReadBytes(ref result.nextToken_);
              break;
            }
            case 58: {
              result.hasAggs = input.ReadBytes(ref result.aggs_);
              break;
            }
            case 66: {
              result.hasGroupBys = input.ReadBytes(ref result.groupBys_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTotalHits {
        get { return result.hasTotalHits; }
      }
      public long TotalHits {
        get { return result.TotalHits; }
        set { SetTotalHits(value); }
      }
      public Builder SetTotalHits(long value) {
        PrepareBuilder();
        result.hasTotalHits = true;
        result.totalHits_ = value;
        return this;
      }
      public Builder ClearTotalHits() {
        PrepareBuilder();
        result.hasTotalHits = false;
        result.totalHits_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public pb::ByteString GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder AddRows(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
      
      public bool HasIsAllSucceeded {
        get { return result.hasIsAllSucceeded; }
      }
      public bool IsAllSucceeded {
        get { return result.IsAllSucceeded; }
        set { SetIsAllSucceeded(value); }
      }
      public Builder SetIsAllSucceeded(bool value) {
        PrepareBuilder();
        result.hasIsAllSucceeded = true;
        result.isAllSucceeded_ = value;
        return this;
      }
      public Builder ClearIsAllSucceeded() {
        PrepareBuilder();
        result.hasIsAllSucceeded = false;
        result.isAllSucceeded_ = false;
        return this;
      }
      
      public bool HasNextToken {
        get { return result.hasNextToken; }
      }
      public pb::ByteString NextToken {
        get { return result.NextToken; }
        set { SetNextToken(value); }
      }
      public Builder SetNextToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextToken = true;
        result.nextToken_ = value;
        return this;
      }
      public Builder ClearNextToken() {
        PrepareBuilder();
        result.hasNextToken = false;
        result.nextToken_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasAggs {
        get { return result.hasAggs; }
      }
      public pb::ByteString Aggs {
        get { return result.Aggs; }
        set { SetAggs(value); }
      }
      public Builder SetAggs(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAggs = true;
        result.aggs_ = value;
        return this;
      }
      public Builder ClearAggs() {
        PrepareBuilder();
        result.hasAggs = false;
        result.aggs_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasGroupBys {
        get { return result.hasGroupBys; }
      }
      public pb::ByteString GroupBys {
        get { return result.GroupBys; }
        set { SetGroupBys(value); }
      }
      public Builder SetGroupBys(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroupBys = true;
        result.groupBys_ = value;
        return this;
      }
      public Builder ClearGroupBys() {
        PrepareBuilder();
        result.hasGroupBys = false;
        result.groupBys_ = pb::ByteString.Empty;
        return this;
      }
    }
    static SearchResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SingleWordAnalyzerParameter : pb::GeneratedMessage<SingleWordAnalyzerParameter, SingleWordAnalyzerParameter.Builder> {
    private SingleWordAnalyzerParameter() { }
    private static readonly SingleWordAnalyzerParameter defaultInstance = new SingleWordAnalyzerParameter().MakeReadOnly();
    private static readonly string[] _singleWordAnalyzerParameterFieldNames = new string[] { "case_sensitive", "delimit_word" };
    private static readonly uint[] _singleWordAnalyzerParameterFieldTags = new uint[] { 8, 16 };
    public static SingleWordAnalyzerParameter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SingleWordAnalyzerParameter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SingleWordAnalyzerParameter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleWordAnalyzerParameter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SingleWordAnalyzerParameter, SingleWordAnalyzerParameter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SingleWordAnalyzerParameter__FieldAccessorTable; }
    }
    
    public const int CaseSensitiveFieldNumber = 1;
    private bool hasCaseSensitive;
    private bool caseSensitive_;
    public bool HasCaseSensitive {
      get { return hasCaseSensitive; }
    }
    public bool CaseSensitive {
      get { return caseSensitive_; }
    }
    
    public const int DelimitWordFieldNumber = 2;
    private bool hasDelimitWord;
    private bool delimitWord_;
    public bool HasDelimitWord {
      get { return hasDelimitWord; }
    }
    public bool DelimitWord {
      get { return delimitWord_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _singleWordAnalyzerParameterFieldNames;
      if (hasCaseSensitive) {
        output.WriteBool(1, field_names[0], CaseSensitive);
      }
      if (hasDelimitWord) {
        output.WriteBool(2, field_names[1], DelimitWord);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCaseSensitive) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, CaseSensitive);
      }
      if (hasDelimitWord) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, DelimitWord);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SingleWordAnalyzerParameter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SingleWordAnalyzerParameter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SingleWordAnalyzerParameter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SingleWordAnalyzerParameter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SingleWordAnalyzerParameter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SingleWordAnalyzerParameter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SingleWordAnalyzerParameter result;
      
      private SingleWordAnalyzerParameter PrepareBuilder() {
        if (resultIsReadOnly) {
          SingleWordAnalyzerParameter original = result;
          result = new SingleWordAnalyzerParameter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SingleWordAnalyzerParameter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SingleWordAnalyzerParameter.Descriptor; }
      }
      
      public override SingleWordAnalyzerParameter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SingleWordAnalyzerParameter.DefaultInstance; }
      }
      
      public override SingleWordAnalyzerParameter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SingleWordAnalyzerParameter) {
          return MergeFrom((SingleWordAnalyzerParameter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SingleWordAnalyzerParameter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SingleWordAnalyzerParameter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCaseSensitive) {
          CaseSensitive = other.CaseSensitive;
        }
        if (other.HasDelimitWord) {
          DelimitWord = other.DelimitWord;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_singleWordAnalyzerParameterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _singleWordAnalyzerParameterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCaseSensitive = input.ReadBool(ref result.caseSensitive_);
              break;
            }
            case 16: {
              result.hasDelimitWord = input.ReadBool(ref result.delimitWord_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCaseSensitive {
        get { return result.hasCaseSensitive; }
      }
      public bool CaseSensitive {
        get { return result.CaseSensitive; }
        set { SetCaseSensitive(value); }
      }
      public Builder SetCaseSensitive(bool value) {
        PrepareBuilder();
        result.hasCaseSensitive = true;
        result.caseSensitive_ = value;
        return this;
      }
      public Builder ClearCaseSensitive() {
        PrepareBuilder();
        result.hasCaseSensitive = false;
        result.caseSensitive_ = false;
        return this;
      }
      
      public bool HasDelimitWord {
        get { return result.hasDelimitWord; }
      }
      public bool DelimitWord {
        get { return result.DelimitWord; }
        set { SetDelimitWord(value); }
      }
      public Builder SetDelimitWord(bool value) {
        PrepareBuilder();
        result.hasDelimitWord = true;
        result.delimitWord_ = value;
        return this;
      }
      public Builder ClearDelimitWord() {
        PrepareBuilder();
        result.hasDelimitWord = false;
        result.delimitWord_ = false;
        return this;
      }
    }
    static SingleWordAnalyzerParameter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SplitAnalyzerParameter : pb::GeneratedMessage<SplitAnalyzerParameter, SplitAnalyzerParameter.Builder> {
    private SplitAnalyzerParameter() { }
    private static readonly SplitAnalyzerParameter defaultInstance = new SplitAnalyzerParameter().MakeReadOnly();
    private static readonly string[] _splitAnalyzerParameterFieldNames = new string[] { "delimiter" };
    private static readonly uint[] _splitAnalyzerParameterFieldTags = new uint[] { 10 };
    public static SplitAnalyzerParameter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SplitAnalyzerParameter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SplitAnalyzerParameter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SplitAnalyzerParameter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SplitAnalyzerParameter, SplitAnalyzerParameter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SplitAnalyzerParameter__FieldAccessorTable; }
    }
    
    public const int DelimiterFieldNumber = 1;
    private bool hasDelimiter;
    private string delimiter_ = "";
    public bool HasDelimiter {
      get { return hasDelimiter; }
    }
    public string Delimiter {
      get { return delimiter_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _splitAnalyzerParameterFieldNames;
      if (hasDelimiter) {
        output.WriteString(1, field_names[0], Delimiter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDelimiter) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Delimiter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SplitAnalyzerParameter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SplitAnalyzerParameter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SplitAnalyzerParameter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SplitAnalyzerParameter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SplitAnalyzerParameter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SplitAnalyzerParameter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SplitAnalyzerParameter result;
      
      private SplitAnalyzerParameter PrepareBuilder() {
        if (resultIsReadOnly) {
          SplitAnalyzerParameter original = result;
          result = new SplitAnalyzerParameter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SplitAnalyzerParameter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SplitAnalyzerParameter.Descriptor; }
      }
      
      public override SplitAnalyzerParameter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SplitAnalyzerParameter.DefaultInstance; }
      }
      
      public override SplitAnalyzerParameter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SplitAnalyzerParameter) {
          return MergeFrom((SplitAnalyzerParameter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SplitAnalyzerParameter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SplitAnalyzerParameter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDelimiter) {
          Delimiter = other.Delimiter;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_splitAnalyzerParameterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _splitAnalyzerParameterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDelimiter = input.ReadString(ref result.delimiter_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDelimiter {
        get { return result.hasDelimiter; }
      }
      public string Delimiter {
        get { return result.Delimiter; }
        set { SetDelimiter(value); }
      }
      public Builder SetDelimiter(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDelimiter = true;
        result.delimiter_ = value;
        return this;
      }
      public Builder ClearDelimiter() {
        PrepareBuilder();
        result.hasDelimiter = false;
        result.delimiter_ = "";
        return this;
      }
    }
    static SplitAnalyzerParameter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FuzzyAnalyzerParameter : pb::GeneratedMessage<FuzzyAnalyzerParameter, FuzzyAnalyzerParameter.Builder> {
    private FuzzyAnalyzerParameter() { }
    private static readonly FuzzyAnalyzerParameter defaultInstance = new FuzzyAnalyzerParameter().MakeReadOnly();
    private static readonly string[] _fuzzyAnalyzerParameterFieldNames = new string[] { "max_chars", "min_chars" };
    private static readonly uint[] _fuzzyAnalyzerParameterFieldTags = new uint[] { 16, 8 };
    public static FuzzyAnalyzerParameter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FuzzyAnalyzerParameter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FuzzyAnalyzerParameter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FuzzyAnalyzerParameter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FuzzyAnalyzerParameter, FuzzyAnalyzerParameter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FuzzyAnalyzerParameter__FieldAccessorTable; }
    }
    
    public const int MinCharsFieldNumber = 1;
    private bool hasMinChars;
    private int minChars_;
    public bool HasMinChars {
      get { return hasMinChars; }
    }
    public int MinChars {
      get { return minChars_; }
    }
    
    public const int MaxCharsFieldNumber = 2;
    private bool hasMaxChars;
    private int maxChars_;
    public bool HasMaxChars {
      get { return hasMaxChars; }
    }
    public int MaxChars {
      get { return maxChars_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fuzzyAnalyzerParameterFieldNames;
      if (hasMinChars) {
        output.WriteInt32(1, field_names[1], MinChars);
      }
      if (hasMaxChars) {
        output.WriteInt32(2, field_names[0], MaxChars);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMinChars) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, MinChars);
      }
      if (hasMaxChars) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, MaxChars);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FuzzyAnalyzerParameter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FuzzyAnalyzerParameter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FuzzyAnalyzerParameter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FuzzyAnalyzerParameter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FuzzyAnalyzerParameter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FuzzyAnalyzerParameter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FuzzyAnalyzerParameter result;
      
      private FuzzyAnalyzerParameter PrepareBuilder() {
        if (resultIsReadOnly) {
          FuzzyAnalyzerParameter original = result;
          result = new FuzzyAnalyzerParameter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FuzzyAnalyzerParameter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FuzzyAnalyzerParameter.Descriptor; }
      }
      
      public override FuzzyAnalyzerParameter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FuzzyAnalyzerParameter.DefaultInstance; }
      }
      
      public override FuzzyAnalyzerParameter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FuzzyAnalyzerParameter) {
          return MergeFrom((FuzzyAnalyzerParameter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FuzzyAnalyzerParameter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FuzzyAnalyzerParameter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMinChars) {
          MinChars = other.MinChars;
        }
        if (other.HasMaxChars) {
          MaxChars = other.MaxChars;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fuzzyAnalyzerParameterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fuzzyAnalyzerParameterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMinChars = input.ReadInt32(ref result.minChars_);
              break;
            }
            case 16: {
              result.hasMaxChars = input.ReadInt32(ref result.maxChars_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMinChars {
        get { return result.hasMinChars; }
      }
      public int MinChars {
        get { return result.MinChars; }
        set { SetMinChars(value); }
      }
      public Builder SetMinChars(int value) {
        PrepareBuilder();
        result.hasMinChars = true;
        result.minChars_ = value;
        return this;
      }
      public Builder ClearMinChars() {
        PrepareBuilder();
        result.hasMinChars = false;
        result.minChars_ = 0;
        return this;
      }
      
      public bool HasMaxChars {
        get { return result.hasMaxChars; }
      }
      public int MaxChars {
        get { return result.MaxChars; }
        set { SetMaxChars(value); }
      }
      public Builder SetMaxChars(int value) {
        PrepareBuilder();
        result.hasMaxChars = true;
        result.maxChars_ = value;
        return this;
      }
      public Builder ClearMaxChars() {
        PrepareBuilder();
        result.hasMaxChars = false;
        result.maxChars_ = 0;
        return this;
      }
    }
    static FuzzyAnalyzerParameter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FieldSchema : pb::GeneratedMessage<FieldSchema, FieldSchema.Builder> {
    private FieldSchema() { }
    private static readonly FieldSchema defaultInstance = new FieldSchema().MakeReadOnly();
    private static readonly string[] _fieldSchemaFieldNames = new string[] { "analyzer", "analyzer_parameter", "date_formates", "doc_values", "field_name", "field_schemas", "field_type", "index", "index_options", "is_array", "is_virtual_field", "source_field_names", "store" };
    private static readonly uint[] _fieldSchemaFieldTags = new uint[] { 34, 82, 106, 48, 10, 66, 16, 40, 24, 72, 88, 98, 56 };
    public static FieldSchema DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldSchema DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldSchema ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldSchema, FieldSchema.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldSchema__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int FieldTypeFieldNumber = 2;
    private bool hasFieldType;
    private global::com.alicloud.openservices.tablestore.core.protocol.FieldType fieldType_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldType.LONG;
    public bool HasFieldType {
      get { return hasFieldType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldType FieldType {
      get { return fieldType_; }
    }
    
    public const int IndexOptionsFieldNumber = 3;
    private bool hasIndexOptions;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions indexOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions.DOCS;
    public bool HasIndexOptions {
      get { return hasIndexOptions; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions IndexOptions {
      get { return indexOptions_; }
    }
    
    public const int AnalyzerFieldNumber = 4;
    private bool hasAnalyzer;
    private string analyzer_ = "";
    public bool HasAnalyzer {
      get { return hasAnalyzer; }
    }
    public string Analyzer {
      get { return analyzer_; }
    }
    
    public const int IndexFieldNumber = 5;
    private bool hasIndex;
    private bool index_;
    public bool HasIndex {
      get { return hasIndex; }
    }
    public bool Index {
      get { return index_; }
    }
    
    public const int DocValuesFieldNumber = 6;
    private bool hasDocValues;
    private bool docValues_;
    public bool HasDocValues {
      get { return hasDocValues; }
    }
    public bool DocValues {
      get { return docValues_; }
    }
    
    public const int StoreFieldNumber = 7;
    private bool hasStore;
    private bool store_;
    public bool HasStore {
      get { return hasStore; }
    }
    public bool Store {
      get { return store_; }
    }
    
    public const int FieldSchemasFieldNumber = 8;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> fieldSchemas_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
      get { return fieldSchemas_; }
    }
    public int FieldSchemasCount {
      get { return fieldSchemas_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
      return fieldSchemas_[index];
    }
    
    public const int IsArrayFieldNumber = 9;
    private bool hasIsArray;
    private bool isArray_;
    public bool HasIsArray {
      get { return hasIsArray; }
    }
    public bool IsArray {
      get { return isArray_; }
    }
    
    public const int AnalyzerParameterFieldNumber = 10;
    private bool hasAnalyzerParameter;
    private pb::ByteString analyzerParameter_ = pb::ByteString.Empty;
    public bool HasAnalyzerParameter {
      get { return hasAnalyzerParameter; }
    }
    public pb::ByteString AnalyzerParameter {
      get { return analyzerParameter_; }
    }
    
    public const int IsVirtualFieldFieldNumber = 11;
    private bool hasIsVirtualField;
    private bool isVirtualField_;
    public bool HasIsVirtualField {
      get { return hasIsVirtualField; }
    }
    public bool IsVirtualField {
      get { return isVirtualField_; }
    }
    
    public const int SourceFieldNamesFieldNumber = 12;
    private pbc::PopsicleList<string> sourceFieldNames_ = new pbc::PopsicleList<string>();
    public scg::IList<string> SourceFieldNamesList {
      get { return pbc::Lists.AsReadOnly(sourceFieldNames_); }
    }
    public int SourceFieldNamesCount {
      get { return sourceFieldNames_.Count; }
    }
    public string GetSourceFieldNames(int index) {
      return sourceFieldNames_[index];
    }
    
    public const int DateFormatesFieldNumber = 13;
    private pbc::PopsicleList<string> dateFormates_ = new pbc::PopsicleList<string>();
    public scg::IList<string> DateFormatesList {
      get { return pbc::Lists.AsReadOnly(dateFormates_); }
    }
    public int DateFormatesCount {
      get { return dateFormates_.Count; }
    }
    public string GetDateFormates(int index) {
      return dateFormates_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fieldSchemaFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[4], FieldName);
      }
      if (hasFieldType) {
        output.WriteEnum(2, field_names[6], (int) FieldType, FieldType);
      }
      if (hasIndexOptions) {
        output.WriteEnum(3, field_names[8], (int) IndexOptions, IndexOptions);
      }
      if (hasAnalyzer) {
        output.WriteString(4, field_names[0], Analyzer);
      }
      if (hasIndex) {
        output.WriteBool(5, field_names[7], Index);
      }
      if (hasDocValues) {
        output.WriteBool(6, field_names[3], DocValues);
      }
      if (hasStore) {
        output.WriteBool(7, field_names[12], Store);
      }
      if (fieldSchemas_.Count > 0) {
        output.WriteMessageArray(8, field_names[5], fieldSchemas_);
      }
      if (hasIsArray) {
        output.WriteBool(9, field_names[9], IsArray);
      }
      if (hasAnalyzerParameter) {
        output.WriteBytes(10, field_names[1], AnalyzerParameter);
      }
      if (hasIsVirtualField) {
        output.WriteBool(11, field_names[10], IsVirtualField);
      }
      if (sourceFieldNames_.Count > 0) {
        output.WriteStringArray(12, field_names[11], sourceFieldNames_);
      }
      if (dateFormates_.Count > 0) {
        output.WriteStringArray(13, field_names[2], dateFormates_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasFieldType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) FieldType);
      }
      if (hasIndexOptions) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) IndexOptions);
      }
      if (hasAnalyzer) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Analyzer);
      }
      if (hasIndex) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, Index);
      }
      if (hasDocValues) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, DocValues);
      }
      if (hasStore) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, Store);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema element in FieldSchemasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasIsArray) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, IsArray);
      }
      if (hasAnalyzerParameter) {
        size += pb::CodedOutputStream.ComputeBytesSize(10, AnalyzerParameter);
      }
      if (hasIsVirtualField) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, IsVirtualField);
      }
      {
        int dataSize = 0;
        foreach (string element in SourceFieldNamesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * sourceFieldNames_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in DateFormatesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * dateFormates_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FieldSchema ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSchema ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldSchema ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldSchema ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldSchema ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldSchema MakeReadOnly() {
      fieldSchemas_.MakeReadOnly();
      sourceFieldNames_.MakeReadOnly();
      dateFormates_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldSchema prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldSchema, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldSchema cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldSchema result;
      
      private FieldSchema PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldSchema original = result;
          result = new FieldSchema();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldSchema MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Descriptor; }
      }
      
      public override FieldSchema DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance; }
      }
      
      public override FieldSchema BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldSchema) {
          return MergeFrom((FieldSchema) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldSchema other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasFieldType) {
          FieldType = other.FieldType;
        }
        if (other.HasIndexOptions) {
          IndexOptions = other.IndexOptions;
        }
        if (other.HasAnalyzer) {
          Analyzer = other.Analyzer;
        }
        if (other.HasIndex) {
          Index = other.Index;
        }
        if (other.HasDocValues) {
          DocValues = other.DocValues;
        }
        if (other.HasStore) {
          Store = other.Store;
        }
        if (other.fieldSchemas_.Count != 0) {
          result.fieldSchemas_.Add(other.fieldSchemas_);
        }
        if (other.HasIsArray) {
          IsArray = other.IsArray;
        }
        if (other.HasAnalyzerParameter) {
          AnalyzerParameter = other.AnalyzerParameter;
        }
        if (other.HasIsVirtualField) {
          IsVirtualField = other.IsVirtualField;
        }
        if (other.sourceFieldNames_.Count != 0) {
          result.sourceFieldNames_.Add(other.sourceFieldNames_);
        }
        if (other.dateFormates_.Count != 0) {
          result.dateFormates_.Add(other.dateFormates_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldSchemaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.fieldType_, out unknown)) {
                result.hasFieldType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.indexOptions_, out unknown)) {
                result.hasIndexOptions = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              result.hasAnalyzer = input.ReadString(ref result.analyzer_);
              break;
            }
            case 40: {
              result.hasIndex = input.ReadBool(ref result.index_);
              break;
            }
            case 48: {
              result.hasDocValues = input.ReadBool(ref result.docValues_);
              break;
            }
            case 56: {
              result.hasStore = input.ReadBool(ref result.store_);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.fieldSchemas_, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance, extensionRegistry);
              break;
            }
            case 72: {
              result.hasIsArray = input.ReadBool(ref result.isArray_);
              break;
            }
            case 82: {
              result.hasAnalyzerParameter = input.ReadBytes(ref result.analyzerParameter_);
              break;
            }
            case 88: {
              result.hasIsVirtualField = input.ReadBool(ref result.isVirtualField_);
              break;
            }
            case 98: {
              input.ReadStringArray(tag, field_name, result.sourceFieldNames_);
              break;
            }
            case 106: {
              input.ReadStringArray(tag, field_name, result.dateFormates_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasFieldType {
       get { return result.hasFieldType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldType FieldType {
        get { return result.FieldType; }
        set { SetFieldType(value); }
      }
      public Builder SetFieldType(global::com.alicloud.openservices.tablestore.core.protocol.FieldType value) {
        PrepareBuilder();
        result.hasFieldType = true;
        result.fieldType_ = value;
        return this;
      }
      public Builder ClearFieldType() {
        PrepareBuilder();
        result.hasFieldType = false;
        result.fieldType_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldType.LONG;
        return this;
      }
      
      public bool HasIndexOptions {
       get { return result.hasIndexOptions; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions IndexOptions {
        get { return result.IndexOptions; }
        set { SetIndexOptions(value); }
      }
      public Builder SetIndexOptions(global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions value) {
        PrepareBuilder();
        result.hasIndexOptions = true;
        result.indexOptions_ = value;
        return this;
      }
      public Builder ClearIndexOptions() {
        PrepareBuilder();
        result.hasIndexOptions = false;
        result.indexOptions_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexOptions.DOCS;
        return this;
      }
      
      public bool HasAnalyzer {
        get { return result.hasAnalyzer; }
      }
      public string Analyzer {
        get { return result.Analyzer; }
        set { SetAnalyzer(value); }
      }
      public Builder SetAnalyzer(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAnalyzer = true;
        result.analyzer_ = value;
        return this;
      }
      public Builder ClearAnalyzer() {
        PrepareBuilder();
        result.hasAnalyzer = false;
        result.analyzer_ = "";
        return this;
      }
      
      public bool HasIndex {
        get { return result.hasIndex; }
      }
      public bool Index {
        get { return result.Index; }
        set { SetIndex(value); }
      }
      public Builder SetIndex(bool value) {
        PrepareBuilder();
        result.hasIndex = true;
        result.index_ = value;
        return this;
      }
      public Builder ClearIndex() {
        PrepareBuilder();
        result.hasIndex = false;
        result.index_ = false;
        return this;
      }
      
      public bool HasDocValues {
        get { return result.hasDocValues; }
      }
      public bool DocValues {
        get { return result.DocValues; }
        set { SetDocValues(value); }
      }
      public Builder SetDocValues(bool value) {
        PrepareBuilder();
        result.hasDocValues = true;
        result.docValues_ = value;
        return this;
      }
      public Builder ClearDocValues() {
        PrepareBuilder();
        result.hasDocValues = false;
        result.docValues_ = false;
        return this;
      }
      
      public bool HasStore {
        get { return result.hasStore; }
      }
      public bool Store {
        get { return result.Store; }
        set { SetStore(value); }
      }
      public Builder SetStore(bool value) {
        PrepareBuilder();
        result.hasStore = true;
        result.store_ = value;
        return this;
      }
      public Builder ClearStore() {
        PrepareBuilder();
        result.hasStore = false;
        result.store_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
        get { return PrepareBuilder().fieldSchemas_; }
      }
      public int FieldSchemasCount {
        get { return result.FieldSchemasCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
        return result.GetFieldSchemas(index);
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_[index] = value;
        return this;
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_.Add(value);
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFieldSchemas(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> values) {
        PrepareBuilder();
        result.fieldSchemas_.Add(values);
        return this;
      }
      public Builder ClearFieldSchemas() {
        PrepareBuilder();
        result.fieldSchemas_.Clear();
        return this;
      }
      
      public bool HasIsArray {
        get { return result.hasIsArray; }
      }
      public bool IsArray {
        get { return result.IsArray; }
        set { SetIsArray(value); }
      }
      public Builder SetIsArray(bool value) {
        PrepareBuilder();
        result.hasIsArray = true;
        result.isArray_ = value;
        return this;
      }
      public Builder ClearIsArray() {
        PrepareBuilder();
        result.hasIsArray = false;
        result.isArray_ = false;
        return this;
      }
      
      public bool HasAnalyzerParameter {
        get { return result.hasAnalyzerParameter; }
      }
      public pb::ByteString AnalyzerParameter {
        get { return result.AnalyzerParameter; }
        set { SetAnalyzerParameter(value); }
      }
      public Builder SetAnalyzerParameter(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAnalyzerParameter = true;
        result.analyzerParameter_ = value;
        return this;
      }
      public Builder ClearAnalyzerParameter() {
        PrepareBuilder();
        result.hasAnalyzerParameter = false;
        result.analyzerParameter_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasIsVirtualField {
        get { return result.hasIsVirtualField; }
      }
      public bool IsVirtualField {
        get { return result.IsVirtualField; }
        set { SetIsVirtualField(value); }
      }
      public Builder SetIsVirtualField(bool value) {
        PrepareBuilder();
        result.hasIsVirtualField = true;
        result.isVirtualField_ = value;
        return this;
      }
      public Builder ClearIsVirtualField() {
        PrepareBuilder();
        result.hasIsVirtualField = false;
        result.isVirtualField_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<string> SourceFieldNamesList {
        get { return PrepareBuilder().sourceFieldNames_; }
      }
      public int SourceFieldNamesCount {
        get { return result.SourceFieldNamesCount; }
      }
      public string GetSourceFieldNames(int index) {
        return result.GetSourceFieldNames(index);
      }
      public Builder SetSourceFieldNames(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sourceFieldNames_[index] = value;
        return this;
      }
      public Builder AddSourceFieldNames(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sourceFieldNames_.Add(value);
        return this;
      }
      public Builder AddRangeSourceFieldNames(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.sourceFieldNames_.Add(values);
        return this;
      }
      public Builder ClearSourceFieldNames() {
        PrepareBuilder();
        result.sourceFieldNames_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> DateFormatesList {
        get { return PrepareBuilder().dateFormates_; }
      }
      public int DateFormatesCount {
        get { return result.DateFormatesCount; }
      }
      public string GetDateFormates(int index) {
        return result.GetDateFormates(index);
      }
      public Builder SetDateFormates(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dateFormates_[index] = value;
        return this;
      }
      public Builder AddDateFormates(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.dateFormates_.Add(value);
        return this;
      }
      public Builder AddRangeDateFormates(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.dateFormates_.Add(values);
        return this;
      }
      public Builder ClearDateFormates() {
        PrepareBuilder();
        result.dateFormates_.Clear();
        return this;
      }
    }
    static FieldSchema() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IndexSchema : pb::GeneratedMessage<IndexSchema, IndexSchema.Builder> {
    private IndexSchema() { }
    private static readonly IndexSchema defaultInstance = new IndexSchema().MakeReadOnly();
    private static readonly string[] _indexSchemaFieldNames = new string[] { "field_schemas", "index_setting", "index_sort" };
    private static readonly uint[] _indexSchemaFieldTags = new uint[] { 10, 18, 26 };
    public static IndexSchema DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexSchema DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IndexSchema ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexSchema, IndexSchema.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSchema__FieldAccessorTable; }
    }
    
    public const int FieldSchemasFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> fieldSchemas_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
      get { return fieldSchemas_; }
    }
    public int FieldSchemasCount {
      get { return fieldSchemas_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
      return fieldSchemas_[index];
    }
    
    public const int IndexSettingFieldNumber = 2;
    private bool hasIndexSetting;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting indexSetting_;
    public bool HasIndexSetting {
      get { return hasIndexSetting; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting IndexSetting {
      get { return indexSetting_ ?? global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance; }
    }
    
    public const int IndexSortFieldNumber = 3;
    private bool hasIndexSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.Sort indexSort_;
    public bool HasIndexSort {
      get { return hasIndexSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Sort IndexSort {
      get { return indexSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _indexSchemaFieldNames;
      if (fieldSchemas_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], fieldSchemas_);
      }
      if (hasIndexSetting) {
        output.WriteMessage(2, field_names[1], IndexSetting);
      }
      if (hasIndexSort) {
        output.WriteMessage(3, field_names[2], IndexSort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema element in FieldSchemasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIndexSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, IndexSetting);
      }
      if (hasIndexSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, IndexSort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IndexSchema ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSchema ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSchema ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexSchema ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexSchema ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IndexSchema MakeReadOnly() {
      fieldSchemas_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexSchema prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IndexSchema, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IndexSchema cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IndexSchema result;
      
      private IndexSchema PrepareBuilder() {
        if (resultIsReadOnly) {
          IndexSchema original = result;
          result = new IndexSchema();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IndexSchema MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Descriptor; }
      }
      
      public override IndexSchema DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance; }
      }
      
      public override IndexSchema BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexSchema) {
          return MergeFrom((IndexSchema) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexSchema other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance) return this;
        PrepareBuilder();
        if (other.fieldSchemas_.Count != 0) {
          result.fieldSchemas_.Add(other.fieldSchemas_);
        }
        if (other.HasIndexSetting) {
          MergeIndexSetting(other.IndexSetting);
        }
        if (other.HasIndexSort) {
          MergeIndexSort(other.IndexSort);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_indexSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _indexSchemaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.fieldSchemas_, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.CreateBuilder();
              if (result.hasIndexSetting) {
                subBuilder.MergeFrom(IndexSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              IndexSetting = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder();
              if (result.hasIndexSort) {
                subBuilder.MergeFrom(IndexSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              IndexSort = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> FieldSchemasList {
        get { return PrepareBuilder().fieldSchemas_; }
      }
      public int FieldSchemasCount {
        get { return result.FieldSchemasCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema GetFieldSchemas(int index) {
        return result.GetFieldSchemas(index);
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_[index] = value;
        return this;
      }
      public Builder SetFieldSchemas(int index, global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fieldSchemas_.Add(value);
        return this;
      }
      public Builder AddFieldSchemas(global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fieldSchemas_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFieldSchemas(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.FieldSchema> values) {
        PrepareBuilder();
        result.fieldSchemas_.Add(values);
        return this;
      }
      public Builder ClearFieldSchemas() {
        PrepareBuilder();
        result.fieldSchemas_.Clear();
        return this;
      }
      
      public bool HasIndexSetting {
       get { return result.hasIndexSetting; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting IndexSetting {
        get { return result.IndexSetting; }
        set { SetIndexSetting(value); }
      }
      public Builder SetIndexSetting(global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexSetting = true;
        result.indexSetting_ = value;
        return this;
      }
      public Builder SetIndexSetting(global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIndexSetting = true;
        result.indexSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIndexSetting(global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIndexSetting &&
            result.indexSetting_ != global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance) {
            result.indexSetting_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.CreateBuilder(result.indexSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.indexSetting_ = value;
        }
        result.hasIndexSetting = true;
        return this;
      }
      public Builder ClearIndexSetting() {
        PrepareBuilder();
        result.hasIndexSetting = false;
        result.indexSetting_ = null;
        return this;
      }
      
      public bool HasIndexSort {
       get { return result.hasIndexSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Sort IndexSort {
        get { return result.IndexSort; }
        set { SetIndexSort(value); }
      }
      public Builder SetIndexSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexSort = true;
        result.indexSort_ = value;
        return this;
      }
      public Builder SetIndexSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIndexSort = true;
        result.indexSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIndexSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIndexSort &&
            result.indexSort_ != global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance) {
            result.indexSort_ = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder(result.indexSort_).MergeFrom(value).BuildPartial();
        } else {
          result.indexSort_ = value;
        }
        result.hasIndexSort = true;
        return this;
      }
      public Builder ClearIndexSort() {
        PrepareBuilder();
        result.hasIndexSort = false;
        result.indexSort_ = null;
        return this;
      }
    }
    static IndexSchema() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IndexSetting : pb::GeneratedMessage<IndexSetting, IndexSetting.Builder> {
    private IndexSetting() { }
    private static readonly IndexSetting defaultInstance = new IndexSetting().MakeReadOnly();
    private static readonly string[] _indexSettingFieldNames = new string[] { "number_of_shards", "routing_fields", "routing_partition_size" };
    private static readonly uint[] _indexSettingFieldTags = new uint[] { 8, 18, 24 };
    public static IndexSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IndexSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexSetting, IndexSetting.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexSetting__FieldAccessorTable; }
    }
    
    public const int NumberOfShardsFieldNumber = 1;
    private bool hasNumberOfShards;
    private int numberOfShards_;
    public bool HasNumberOfShards {
      get { return hasNumberOfShards; }
    }
    public int NumberOfShards {
      get { return numberOfShards_; }
    }
    
    public const int RoutingFieldsFieldNumber = 2;
    private pbc::PopsicleList<string> routingFields_ = new pbc::PopsicleList<string>();
    public scg::IList<string> RoutingFieldsList {
      get { return pbc::Lists.AsReadOnly(routingFields_); }
    }
    public int RoutingFieldsCount {
      get { return routingFields_.Count; }
    }
    public string GetRoutingFields(int index) {
      return routingFields_[index];
    }
    
    public const int RoutingPartitionSizeFieldNumber = 3;
    private bool hasRoutingPartitionSize;
    private int routingPartitionSize_;
    public bool HasRoutingPartitionSize {
      get { return hasRoutingPartitionSize; }
    }
    public int RoutingPartitionSize {
      get { return routingPartitionSize_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _indexSettingFieldNames;
      if (hasNumberOfShards) {
        output.WriteInt32(1, field_names[0], NumberOfShards);
      }
      if (routingFields_.Count > 0) {
        output.WriteStringArray(2, field_names[1], routingFields_);
      }
      if (hasRoutingPartitionSize) {
        output.WriteInt32(3, field_names[2], RoutingPartitionSize);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumberOfShards) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, NumberOfShards);
      }
      {
        int dataSize = 0;
        foreach (string element in RoutingFieldsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * routingFields_.Count;
      }
      if (hasRoutingPartitionSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, RoutingPartitionSize);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IndexSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IndexSetting MakeReadOnly() {
      routingFields_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IndexSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IndexSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IndexSetting result;
      
      private IndexSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          IndexSetting original = result;
          result = new IndexSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IndexSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.Descriptor; }
      }
      
      public override IndexSetting DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance; }
      }
      
      public override IndexSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexSetting) {
          return MergeFrom((IndexSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexSetting other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.IndexSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNumberOfShards) {
          NumberOfShards = other.NumberOfShards;
        }
        if (other.routingFields_.Count != 0) {
          result.routingFields_.Add(other.routingFields_);
        }
        if (other.HasRoutingPartitionSize) {
          RoutingPartitionSize = other.RoutingPartitionSize;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_indexSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _indexSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNumberOfShards = input.ReadInt32(ref result.numberOfShards_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.routingFields_);
              break;
            }
            case 24: {
              result.hasRoutingPartitionSize = input.ReadInt32(ref result.routingPartitionSize_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNumberOfShards {
        get { return result.hasNumberOfShards; }
      }
      public int NumberOfShards {
        get { return result.NumberOfShards; }
        set { SetNumberOfShards(value); }
      }
      public Builder SetNumberOfShards(int value) {
        PrepareBuilder();
        result.hasNumberOfShards = true;
        result.numberOfShards_ = value;
        return this;
      }
      public Builder ClearNumberOfShards() {
        PrepareBuilder();
        result.hasNumberOfShards = false;
        result.numberOfShards_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<string> RoutingFieldsList {
        get { return PrepareBuilder().routingFields_; }
      }
      public int RoutingFieldsCount {
        get { return result.RoutingFieldsCount; }
      }
      public string GetRoutingFields(int index) {
        return result.GetRoutingFields(index);
      }
      public Builder SetRoutingFields(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingFields_[index] = value;
        return this;
      }
      public Builder AddRoutingFields(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routingFields_.Add(value);
        return this;
      }
      public Builder AddRangeRoutingFields(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.routingFields_.Add(values);
        return this;
      }
      public Builder ClearRoutingFields() {
        PrepareBuilder();
        result.routingFields_.Clear();
        return this;
      }
      
      public bool HasRoutingPartitionSize {
        get { return result.hasRoutingPartitionSize; }
      }
      public int RoutingPartitionSize {
        get { return result.RoutingPartitionSize; }
        set { SetRoutingPartitionSize(value); }
      }
      public Builder SetRoutingPartitionSize(int value) {
        PrepareBuilder();
        result.hasRoutingPartitionSize = true;
        result.routingPartitionSize_ = value;
        return this;
      }
      public Builder ClearRoutingPartitionSize() {
        PrepareBuilder();
        result.hasRoutingPartitionSize = false;
        result.routingPartitionSize_ = 0;
        return this;
      }
    }
    static IndexSetting() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateSearchIndexRequest : pb::GeneratedMessage<CreateSearchIndexRequest, CreateSearchIndexRequest.Builder> {
    private CreateSearchIndexRequest() { }
    private static readonly CreateSearchIndexRequest defaultInstance = new CreateSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _createSearchIndexRequestFieldNames = new string[] { "index_name", "schema", "source_index_name", "table_name", "time_to_live" };
    private static readonly uint[] _createSearchIndexRequestFieldTags = new uint[] { 18, 26, 34, 10, 40 };
    public static CreateSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateSearchIndexRequest, CreateSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public const int SchemaFieldNumber = 3;
    private bool hasSchema;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema schema_;
    public bool HasSchema {
      get { return hasSchema; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
      get { return schema_ ?? global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance; }
    }
    
    public const int SourceIndexNameFieldNumber = 4;
    private bool hasSourceIndexName;
    private string sourceIndexName_ = "";
    public bool HasSourceIndexName {
      get { return hasSourceIndexName; }
    }
    public string SourceIndexName {
      get { return sourceIndexName_; }
    }
    
    public const int TimeToLiveFieldNumber = 5;
    private bool hasTimeToLive;
    private int timeToLive_;
    public bool HasTimeToLive {
      get { return hasTimeToLive; }
    }
    public int TimeToLive {
      get { return timeToLive_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTableName) return false;
        if (!hasIndexName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[3], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      if (hasSchema) {
        output.WriteMessage(3, field_names[1], Schema);
      }
      if (hasSourceIndexName) {
        output.WriteString(4, field_names[2], SourceIndexName);
      }
      if (hasTimeToLive) {
        output.WriteInt32(5, field_names[4], TimeToLive);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      if (hasSchema) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Schema);
      }
      if (hasSourceIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, SourceIndexName);
      }
      if (hasTimeToLive) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, TimeToLive);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateSearchIndexRequest result;
      
      private CreateSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateSearchIndexRequest original = result;
          result = new CreateSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.Descriptor; }
      }
      
      public override CreateSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.DefaultInstance; }
      }
      
      public override CreateSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateSearchIndexRequest) {
          return MergeFrom((CreateSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        if (other.HasSchema) {
          MergeSchema(other.Schema);
        }
        if (other.HasSourceIndexName) {
          SourceIndexName = other.SourceIndexName;
        }
        if (other.HasTimeToLive) {
          TimeToLive = other.TimeToLive;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder();
              if (result.hasSchema) {
                subBuilder.MergeFrom(Schema);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Schema = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasSourceIndexName = input.ReadString(ref result.sourceIndexName_);
              break;
            }
            case 40: {
              result.hasTimeToLive = input.ReadInt32(ref result.timeToLive_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
      
      public bool HasSchema {
       get { return result.hasSchema; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
        get { return result.Schema; }
        set { SetSchema(value); }
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = value;
        return this;
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSchema &&
            result.schema_ != global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance) {
            result.schema_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder(result.schema_).MergeFrom(value).BuildPartial();
        } else {
          result.schema_ = value;
        }
        result.hasSchema = true;
        return this;
      }
      public Builder ClearSchema() {
        PrepareBuilder();
        result.hasSchema = false;
        result.schema_ = null;
        return this;
      }
      
      public bool HasSourceIndexName {
        get { return result.hasSourceIndexName; }
      }
      public string SourceIndexName {
        get { return result.SourceIndexName; }
        set { SetSourceIndexName(value); }
      }
      public Builder SetSourceIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSourceIndexName = true;
        result.sourceIndexName_ = value;
        return this;
      }
      public Builder ClearSourceIndexName() {
        PrepareBuilder();
        result.hasSourceIndexName = false;
        result.sourceIndexName_ = "";
        return this;
      }
      
      public bool HasTimeToLive {
        get { return result.hasTimeToLive; }
      }
      public int TimeToLive {
        get { return result.TimeToLive; }
        set { SetTimeToLive(value); }
      }
      public Builder SetTimeToLive(int value) {
        PrepareBuilder();
        result.hasTimeToLive = true;
        result.timeToLive_ = value;
        return this;
      }
      public Builder ClearTimeToLive() {
        PrepareBuilder();
        result.hasTimeToLive = false;
        result.timeToLive_ = 0;
        return this;
      }
    }
    static CreateSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateSearchIndexResponse : pb::GeneratedMessage<CreateSearchIndexResponse, CreateSearchIndexResponse.Builder> {
    private CreateSearchIndexResponse() { }
    private static readonly CreateSearchIndexResponse defaultInstance = new CreateSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _createSearchIndexResponseFieldNames = new string[] {  };
    private static readonly uint[] _createSearchIndexResponseFieldTags = new uint[] {  };
    public static CreateSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateSearchIndexResponse, CreateSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CreateSearchIndexResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createSearchIndexResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateSearchIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateSearchIndexResponse result;
      
      private CreateSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateSearchIndexResponse original = result;
          result = new CreateSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.Descriptor; }
      }
      
      public override CreateSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.DefaultInstance; }
      }
      
      public override CreateSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateSearchIndexResponse) {
          return MergeFrom((CreateSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CreateSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CreateSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IndexInfo : pb::GeneratedMessage<IndexInfo, IndexInfo.Builder> {
    private IndexInfo() { }
    private static readonly IndexInfo defaultInstance = new IndexInfo().MakeReadOnly();
    private static readonly string[] _indexInfoFieldNames = new string[] { "index_name", "table_name" };
    private static readonly uint[] _indexInfoFieldTags = new uint[] { 18, 10 };
    public static IndexInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IndexInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IndexInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IndexInfo, IndexInfo.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_IndexInfo__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _indexInfoFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IndexInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IndexInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IndexInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IndexInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IndexInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IndexInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IndexInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IndexInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IndexInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IndexInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IndexInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IndexInfo result;
      
      private IndexInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          IndexInfo original = result;
          result = new IndexInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IndexInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Descriptor; }
      }
      
      public override IndexInfo DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.DefaultInstance; }
      }
      
      public override IndexInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IndexInfo) {
          return MergeFrom((IndexInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IndexInfo other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_indexInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _indexInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
    }
    static IndexInfo() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListSearchIndexRequest : pb::GeneratedMessage<ListSearchIndexRequest, ListSearchIndexRequest.Builder> {
    private ListSearchIndexRequest() { }
    private static readonly ListSearchIndexRequest defaultInstance = new ListSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _listSearchIndexRequestFieldNames = new string[] { "table_name" };
    private static readonly uint[] _listSearchIndexRequestFieldTags = new uint[] { 10 };
    public static ListSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListSearchIndexRequest, ListSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[0], TableName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListSearchIndexRequest result;
      
      private ListSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ListSearchIndexRequest original = result;
          result = new ListSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.Descriptor; }
      }
      
      public override ListSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.DefaultInstance; }
      }
      
      public override ListSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListSearchIndexRequest) {
          return MergeFrom((ListSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
    }
    static ListSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ListSearchIndexResponse : pb::GeneratedMessage<ListSearchIndexResponse, ListSearchIndexResponse.Builder> {
    private ListSearchIndexResponse() { }
    private static readonly ListSearchIndexResponse defaultInstance = new ListSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _listSearchIndexResponseFieldNames = new string[] { "indices" };
    private static readonly uint[] _listSearchIndexResponseFieldTags = new uint[] { 10 };
    public static ListSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ListSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ListSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ListSearchIndexResponse, ListSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ListSearchIndexResponse__FieldAccessorTable; }
    }
    
    public const int IndicesFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> indices_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> IndicesList {
      get { return indices_; }
    }
    public int IndicesCount {
      get { return indices_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo GetIndices(int index) {
      return indices_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _listSearchIndexResponseFieldNames;
      if (indices_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], indices_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo element in IndicesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ListSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ListSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ListSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ListSearchIndexResponse MakeReadOnly() {
      indices_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ListSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ListSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ListSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ListSearchIndexResponse result;
      
      private ListSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ListSearchIndexResponse original = result;
          result = new ListSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ListSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.Descriptor; }
      }
      
      public override ListSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.DefaultInstance; }
      }
      
      public override ListSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ListSearchIndexResponse) {
          return MergeFrom((ListSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ListSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ListSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.indices_.Count != 0) {
          result.indices_.Add(other.indices_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_listSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _listSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.indices_, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> IndicesList {
        get { return PrepareBuilder().indices_; }
      }
      public int IndicesCount {
        get { return result.IndicesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo GetIndices(int index) {
        return result.GetIndices(index);
      }
      public Builder SetIndices(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indices_[index] = value;
        return this;
      }
      public Builder SetIndices(int index, global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indices_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIndices(global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.indices_.Add(value);
        return this;
      }
      public Builder AddIndices(global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.indices_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIndices(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.IndexInfo> values) {
        PrepareBuilder();
        result.indices_.Add(values);
        return this;
      }
      public Builder ClearIndices() {
        PrepareBuilder();
        result.indices_.Clear();
        return this;
      }
    }
    static ListSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteSearchIndexRequest : pb::GeneratedMessage<DeleteSearchIndexRequest, DeleteSearchIndexRequest.Builder> {
    private DeleteSearchIndexRequest() { }
    private static readonly DeleteSearchIndexRequest defaultInstance = new DeleteSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _deleteSearchIndexRequestFieldNames = new string[] { "index_name", "table_name" };
    private static readonly uint[] _deleteSearchIndexRequestFieldTags = new uint[] { 18, 10 };
    public static DeleteSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteSearchIndexRequest, DeleteSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteSearchIndexRequest result;
      
      private DeleteSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteSearchIndexRequest original = result;
          result = new DeleteSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.Descriptor; }
      }
      
      public override DeleteSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.DefaultInstance; }
      }
      
      public override DeleteSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteSearchIndexRequest) {
          return MergeFrom((DeleteSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
    }
    static DeleteSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteSearchIndexResponse : pb::GeneratedMessage<DeleteSearchIndexResponse, DeleteSearchIndexResponse.Builder> {
    private DeleteSearchIndexResponse() { }
    private static readonly DeleteSearchIndexResponse defaultInstance = new DeleteSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _deleteSearchIndexResponseFieldNames = new string[] {  };
    private static readonly uint[] _deleteSearchIndexResponseFieldTags = new uint[] {  };
    public static DeleteSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteSearchIndexResponse, DeleteSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DeleteSearchIndexResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteSearchIndexResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteSearchIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteSearchIndexResponse result;
      
      private DeleteSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteSearchIndexResponse original = result;
          result = new DeleteSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.Descriptor; }
      }
      
      public override DeleteSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.DefaultInstance; }
      }
      
      public override DeleteSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteSearchIndexResponse) {
          return MergeFrom((DeleteSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DeleteSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static DeleteSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncStat : pb::GeneratedMessage<SyncStat, SyncStat.Builder> {
    private SyncStat() { }
    private static readonly SyncStat defaultInstance = new SyncStat().MakeReadOnly();
    private static readonly string[] _syncStatFieldNames = new string[] { "current_sync_timestamp", "sync_phase" };
    private static readonly uint[] _syncStatFieldTags = new uint[] { 16, 8 };
    public static SyncStat DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyncStat DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyncStat ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyncStat, SyncStat.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SyncStat__FieldAccessorTable; }
    }
    
    public const int SyncPhaseFieldNumber = 1;
    private bool hasSyncPhase;
    private global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase syncPhase_ = global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase.FULL;
    public bool HasSyncPhase {
      get { return hasSyncPhase; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase SyncPhase {
      get { return syncPhase_; }
    }
    
    public const int CurrentSyncTimestampFieldNumber = 2;
    private bool hasCurrentSyncTimestamp;
    private long currentSyncTimestamp_;
    public bool HasCurrentSyncTimestamp {
      get { return hasCurrentSyncTimestamp; }
    }
    public long CurrentSyncTimestamp {
      get { return currentSyncTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syncStatFieldNames;
      if (hasSyncPhase) {
        output.WriteEnum(1, field_names[1], (int) SyncPhase, SyncPhase);
      }
      if (hasCurrentSyncTimestamp) {
        output.WriteInt64(2, field_names[0], CurrentSyncTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSyncPhase) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) SyncPhase);
      }
      if (hasCurrentSyncTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, CurrentSyncTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyncStat ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncStat ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncStat ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncStat ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncStat ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncStat ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyncStat ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyncStat ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyncStat ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncStat ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyncStat MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyncStat prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyncStat, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyncStat cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyncStat result;
      
      private SyncStat PrepareBuilder() {
        if (resultIsReadOnly) {
          SyncStat original = result;
          result = new SyncStat();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyncStat MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Descriptor; }
      }
      
      public override SyncStat DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance; }
      }
      
      public override SyncStat BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyncStat) {
          return MergeFrom((SyncStat) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyncStat other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSyncPhase) {
          SyncPhase = other.SyncPhase;
        }
        if (other.HasCurrentSyncTimestamp) {
          CurrentSyncTimestamp = other.CurrentSyncTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syncStatFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syncStatFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.syncPhase_, out unknown)) {
                result.hasSyncPhase = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasCurrentSyncTimestamp = input.ReadInt64(ref result.currentSyncTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSyncPhase {
       get { return result.hasSyncPhase; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase SyncPhase {
        get { return result.SyncPhase; }
        set { SetSyncPhase(value); }
      }
      public Builder SetSyncPhase(global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase value) {
        PrepareBuilder();
        result.hasSyncPhase = true;
        result.syncPhase_ = value;
        return this;
      }
      public Builder ClearSyncPhase() {
        PrepareBuilder();
        result.hasSyncPhase = false;
        result.syncPhase_ = global::com.alicloud.openservices.tablestore.core.protocol.SyncPhase.FULL;
        return this;
      }
      
      public bool HasCurrentSyncTimestamp {
        get { return result.hasCurrentSyncTimestamp; }
      }
      public long CurrentSyncTimestamp {
        get { return result.CurrentSyncTimestamp; }
        set { SetCurrentSyncTimestamp(value); }
      }
      public Builder SetCurrentSyncTimestamp(long value) {
        PrepareBuilder();
        result.hasCurrentSyncTimestamp = true;
        result.currentSyncTimestamp_ = value;
        return this;
      }
      public Builder ClearCurrentSyncTimestamp() {
        PrepareBuilder();
        result.hasCurrentSyncTimestamp = false;
        result.currentSyncTimestamp_ = 0L;
        return this;
      }
    }
    static SyncStat() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MeteringInfo : pb::GeneratedMessage<MeteringInfo, MeteringInfo.Builder> {
    private MeteringInfo() { }
    private static readonly MeteringInfo defaultInstance = new MeteringInfo().MakeReadOnly();
    private static readonly string[] _meteringInfoFieldNames = new string[] { "reserved_read_cu", "row_count", "storage_size", "timestamp" };
    private static readonly uint[] _meteringInfoFieldTags = new uint[] { 24, 16, 8, 32 };
    public static MeteringInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MeteringInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MeteringInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MeteringInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MeteringInfo, MeteringInfo.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MeteringInfo__FieldAccessorTable; }
    }
    
    public const int StorageSizeFieldNumber = 1;
    private bool hasStorageSize;
    private long storageSize_;
    public bool HasStorageSize {
      get { return hasStorageSize; }
    }
    public long StorageSize {
      get { return storageSize_; }
    }
    
    public const int RowCountFieldNumber = 2;
    private bool hasRowCount;
    private long rowCount_;
    public bool HasRowCount {
      get { return hasRowCount; }
    }
    public long RowCount {
      get { return rowCount_; }
    }
    
    public const int ReservedReadCuFieldNumber = 3;
    private bool hasReservedReadCu;
    private long reservedReadCu_;
    public bool HasReservedReadCu {
      get { return hasReservedReadCu; }
    }
    public long ReservedReadCu {
      get { return reservedReadCu_; }
    }
    
    public const int TimestampFieldNumber = 4;
    private bool hasTimestamp;
    private long timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public long Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _meteringInfoFieldNames;
      if (hasStorageSize) {
        output.WriteInt64(1, field_names[2], StorageSize);
      }
      if (hasRowCount) {
        output.WriteInt64(2, field_names[1], RowCount);
      }
      if (hasReservedReadCu) {
        output.WriteInt64(3, field_names[0], ReservedReadCu);
      }
      if (hasTimestamp) {
        output.WriteInt64(4, field_names[3], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStorageSize) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, StorageSize);
      }
      if (hasRowCount) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, RowCount);
      }
      if (hasReservedReadCu) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, ReservedReadCu);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, Timestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MeteringInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MeteringInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MeteringInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MeteringInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MeteringInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MeteringInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MeteringInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MeteringInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MeteringInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MeteringInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MeteringInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MeteringInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MeteringInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MeteringInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MeteringInfo result;
      
      private MeteringInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MeteringInfo original = result;
          result = new MeteringInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MeteringInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.Descriptor; }
      }
      
      public override MeteringInfo DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.DefaultInstance; }
      }
      
      public override MeteringInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MeteringInfo) {
          return MergeFrom((MeteringInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MeteringInfo other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStorageSize) {
          StorageSize = other.StorageSize;
        }
        if (other.HasRowCount) {
          RowCount = other.RowCount;
        }
        if (other.HasReservedReadCu) {
          ReservedReadCu = other.ReservedReadCu;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_meteringInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _meteringInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStorageSize = input.ReadInt64(ref result.storageSize_);
              break;
            }
            case 16: {
              result.hasRowCount = input.ReadInt64(ref result.rowCount_);
              break;
            }
            case 24: {
              result.hasReservedReadCu = input.ReadInt64(ref result.reservedReadCu_);
              break;
            }
            case 32: {
              result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStorageSize {
        get { return result.hasStorageSize; }
      }
      public long StorageSize {
        get { return result.StorageSize; }
        set { SetStorageSize(value); }
      }
      public Builder SetStorageSize(long value) {
        PrepareBuilder();
        result.hasStorageSize = true;
        result.storageSize_ = value;
        return this;
      }
      public Builder ClearStorageSize() {
        PrepareBuilder();
        result.hasStorageSize = false;
        result.storageSize_ = 0L;
        return this;
      }
      
      public bool HasRowCount {
        get { return result.hasRowCount; }
      }
      public long RowCount {
        get { return result.RowCount; }
        set { SetRowCount(value); }
      }
      public Builder SetRowCount(long value) {
        PrepareBuilder();
        result.hasRowCount = true;
        result.rowCount_ = value;
        return this;
      }
      public Builder ClearRowCount() {
        PrepareBuilder();
        result.hasRowCount = false;
        result.rowCount_ = 0L;
        return this;
      }
      
      public bool HasReservedReadCu {
        get { return result.hasReservedReadCu; }
      }
      public long ReservedReadCu {
        get { return result.ReservedReadCu; }
        set { SetReservedReadCu(value); }
      }
      public Builder SetReservedReadCu(long value) {
        PrepareBuilder();
        result.hasReservedReadCu = true;
        result.reservedReadCu_ = value;
        return this;
      }
      public Builder ClearReservedReadCu() {
        PrepareBuilder();
        result.hasReservedReadCu = false;
        result.reservedReadCu_ = 0L;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public long Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(long value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
    }
    static MeteringInfo() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeSearchIndexRequest : pb::GeneratedMessage<DescribeSearchIndexRequest, DescribeSearchIndexRequest.Builder> {
    private DescribeSearchIndexRequest() { }
    private static readonly DescribeSearchIndexRequest defaultInstance = new DescribeSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _describeSearchIndexRequestFieldNames = new string[] { "index_name", "table_name" };
    private static readonly uint[] _describeSearchIndexRequestFieldTags = new uint[] { 18, 10 };
    public static DescribeSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeSearchIndexRequest, DescribeSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeSearchIndexRequest result;
      
      private DescribeSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeSearchIndexRequest original = result;
          result = new DescribeSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.Descriptor; }
      }
      
      public override DescribeSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.DefaultInstance; }
      }
      
      public override DescribeSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeSearchIndexRequest) {
          return MergeFrom((DescribeSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
    }
    static DescribeSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DescribeSearchIndexResponse : pb::GeneratedMessage<DescribeSearchIndexResponse, DescribeSearchIndexResponse.Builder> {
    private DescribeSearchIndexResponse() { }
    private static readonly DescribeSearchIndexResponse defaultInstance = new DescribeSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _describeSearchIndexResponseFieldNames = new string[] { "brother_index_name", "create_time", "metering_info", "schema", "sync_stat", "time_to_live" };
    private static readonly uint[] _describeSearchIndexResponseFieldTags = new uint[] { 34, 48, 26, 10, 18, 56 };
    public static DescribeSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DescribeSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DescribeSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DescribeSearchIndexResponse, DescribeSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DescribeSearchIndexResponse__FieldAccessorTable; }
    }
    
    public const int SchemaFieldNumber = 1;
    private bool hasSchema;
    private global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema schema_;
    public bool HasSchema {
      get { return hasSchema; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
      get { return schema_ ?? global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance; }
    }
    
    public const int SyncStatFieldNumber = 2;
    private bool hasSyncStat;
    private global::com.alicloud.openservices.tablestore.core.protocol.SyncStat syncStat_;
    public bool HasSyncStat {
      get { return hasSyncStat; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SyncStat SyncStat {
      get { return syncStat_ ?? global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance; }
    }
    
    public const int MeteringInfoFieldNumber = 3;
    private bool hasMeteringInfo;
    private global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo meteringInfo_;
    public bool HasMeteringInfo {
      get { return hasMeteringInfo; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo MeteringInfo {
      get { return meteringInfo_ ?? global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.DefaultInstance; }
    }
    
    public const int BrotherIndexNameFieldNumber = 4;
    private bool hasBrotherIndexName;
    private string brotherIndexName_ = "";
    public bool HasBrotherIndexName {
      get { return hasBrotherIndexName; }
    }
    public string BrotherIndexName {
      get { return brotherIndexName_; }
    }
    
    public const int CreateTimeFieldNumber = 6;
    private bool hasCreateTime;
    private long createTime_;
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    public long CreateTime {
      get { return createTime_; }
    }
    
    public const int TimeToLiveFieldNumber = 7;
    private bool hasTimeToLive;
    private int timeToLive_;
    public bool HasTimeToLive {
      get { return hasTimeToLive; }
    }
    public int TimeToLive {
      get { return timeToLive_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _describeSearchIndexResponseFieldNames;
      if (hasSchema) {
        output.WriteMessage(1, field_names[3], Schema);
      }
      if (hasSyncStat) {
        output.WriteMessage(2, field_names[4], SyncStat);
      }
      if (hasMeteringInfo) {
        output.WriteMessage(3, field_names[2], MeteringInfo);
      }
      if (hasBrotherIndexName) {
        output.WriteString(4, field_names[0], BrotherIndexName);
      }
      if (hasCreateTime) {
        output.WriteInt64(6, field_names[1], CreateTime);
      }
      if (hasTimeToLive) {
        output.WriteInt32(7, field_names[5], TimeToLive);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSchema) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Schema);
      }
      if (hasSyncStat) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SyncStat);
      }
      if (hasMeteringInfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, MeteringInfo);
      }
      if (hasBrotherIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, BrotherIndexName);
      }
      if (hasCreateTime) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, CreateTime);
      }
      if (hasTimeToLive) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, TimeToLive);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DescribeSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DescribeSearchIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DescribeSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DescribeSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DescribeSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DescribeSearchIndexResponse result;
      
      private DescribeSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DescribeSearchIndexResponse original = result;
          result = new DescribeSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DescribeSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.Descriptor; }
      }
      
      public override DescribeSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.DefaultInstance; }
      }
      
      public override DescribeSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DescribeSearchIndexResponse) {
          return MergeFrom((DescribeSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DescribeSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DescribeSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSchema) {
          MergeSchema(other.Schema);
        }
        if (other.HasSyncStat) {
          MergeSyncStat(other.SyncStat);
        }
        if (other.HasMeteringInfo) {
          MergeMeteringInfo(other.MeteringInfo);
        }
        if (other.HasBrotherIndexName) {
          BrotherIndexName = other.BrotherIndexName;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasTimeToLive) {
          TimeToLive = other.TimeToLive;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_describeSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _describeSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder();
              if (result.hasSchema) {
                subBuilder.MergeFrom(Schema);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Schema = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.CreateBuilder();
              if (result.hasSyncStat) {
                subBuilder.MergeFrom(SyncStat);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SyncStat = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.CreateBuilder();
              if (result.hasMeteringInfo) {
                subBuilder.MergeFrom(MeteringInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MeteringInfo = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasBrotherIndexName = input.ReadString(ref result.brotherIndexName_);
              break;
            }
            case 48: {
              result.hasCreateTime = input.ReadInt64(ref result.createTime_);
              break;
            }
            case 56: {
              result.hasTimeToLive = input.ReadInt32(ref result.timeToLive_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSchema {
       get { return result.hasSchema; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema Schema {
        get { return result.Schema; }
        set { SetSchema(value); }
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = value;
        return this;
      }
      public Builder SetSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSchema = true;
        result.schema_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSchema(global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSchema &&
            result.schema_ != global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.DefaultInstance) {
            result.schema_ = global::com.alicloud.openservices.tablestore.core.protocol.IndexSchema.CreateBuilder(result.schema_).MergeFrom(value).BuildPartial();
        } else {
          result.schema_ = value;
        }
        result.hasSchema = true;
        return this;
      }
      public Builder ClearSchema() {
        PrepareBuilder();
        result.hasSchema = false;
        result.schema_ = null;
        return this;
      }
      
      public bool HasSyncStat {
       get { return result.hasSyncStat; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SyncStat SyncStat {
        get { return result.SyncStat; }
        set { SetSyncStat(value); }
      }
      public Builder SetSyncStat(global::com.alicloud.openservices.tablestore.core.protocol.SyncStat value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSyncStat = true;
        result.syncStat_ = value;
        return this;
      }
      public Builder SetSyncStat(global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSyncStat = true;
        result.syncStat_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSyncStat(global::com.alicloud.openservices.tablestore.core.protocol.SyncStat value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSyncStat &&
            result.syncStat_ != global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.DefaultInstance) {
            result.syncStat_ = global::com.alicloud.openservices.tablestore.core.protocol.SyncStat.CreateBuilder(result.syncStat_).MergeFrom(value).BuildPartial();
        } else {
          result.syncStat_ = value;
        }
        result.hasSyncStat = true;
        return this;
      }
      public Builder ClearSyncStat() {
        PrepareBuilder();
        result.hasSyncStat = false;
        result.syncStat_ = null;
        return this;
      }
      
      public bool HasMeteringInfo {
       get { return result.hasMeteringInfo; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo MeteringInfo {
        get { return result.MeteringInfo; }
        set { SetMeteringInfo(value); }
      }
      public Builder SetMeteringInfo(global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMeteringInfo = true;
        result.meteringInfo_ = value;
        return this;
      }
      public Builder SetMeteringInfo(global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMeteringInfo = true;
        result.meteringInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMeteringInfo(global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMeteringInfo &&
            result.meteringInfo_ != global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.DefaultInstance) {
            result.meteringInfo_ = global::com.alicloud.openservices.tablestore.core.protocol.MeteringInfo.CreateBuilder(result.meteringInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.meteringInfo_ = value;
        }
        result.hasMeteringInfo = true;
        return this;
      }
      public Builder ClearMeteringInfo() {
        PrepareBuilder();
        result.hasMeteringInfo = false;
        result.meteringInfo_ = null;
        return this;
      }
      
      public bool HasBrotherIndexName {
        get { return result.hasBrotherIndexName; }
      }
      public string BrotherIndexName {
        get { return result.BrotherIndexName; }
        set { SetBrotherIndexName(value); }
      }
      public Builder SetBrotherIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrotherIndexName = true;
        result.brotherIndexName_ = value;
        return this;
      }
      public Builder ClearBrotherIndexName() {
        PrepareBuilder();
        result.hasBrotherIndexName = false;
        result.brotherIndexName_ = "";
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      public long CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      public Builder SetCreateTime(long value) {
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = 0L;
        return this;
      }
      
      public bool HasTimeToLive {
        get { return result.hasTimeToLive; }
      }
      public int TimeToLive {
        get { return result.TimeToLive; }
        set { SetTimeToLive(value); }
      }
      public Builder SetTimeToLive(int value) {
        PrepareBuilder();
        result.hasTimeToLive = true;
        result.timeToLive_ = value;
        return this;
      }
      public Builder ClearTimeToLive() {
        PrepareBuilder();
        result.hasTimeToLive = false;
        result.timeToLive_ = 0;
        return this;
      }
    }
    static DescribeSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateSearchIndexRequest : pb::GeneratedMessage<UpdateSearchIndexRequest, UpdateSearchIndexRequest.Builder> {
    private UpdateSearchIndexRequest() { }
    private static readonly UpdateSearchIndexRequest defaultInstance = new UpdateSearchIndexRequest().MakeReadOnly();
    private static readonly string[] _updateSearchIndexRequestFieldNames = new string[] { "index_name", "table_name", "time_to_live" };
    private static readonly uint[] _updateSearchIndexRequestFieldTags = new uint[] { 18, 10, 40 };
    public static UpdateSearchIndexRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateSearchIndexRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateSearchIndexRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateSearchIndexRequest, UpdateSearchIndexRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public const int TimeToLiveFieldNumber = 5;
    private bool hasTimeToLive;
    private int timeToLive_;
    public bool HasTimeToLive {
      get { return hasTimeToLive; }
    }
    public int TimeToLive {
      get { return timeToLive_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateSearchIndexRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[1], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[0], IndexName);
      }
      if (hasTimeToLive) {
        output.WriteInt32(5, field_names[2], TimeToLive);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      if (hasTimeToLive) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, TimeToLive);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateSearchIndexRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateSearchIndexRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateSearchIndexRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateSearchIndexRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateSearchIndexRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateSearchIndexRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateSearchIndexRequest result;
      
      private UpdateSearchIndexRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateSearchIndexRequest original = result;
          result = new UpdateSearchIndexRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateSearchIndexRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexRequest.Descriptor; }
      }
      
      public override UpdateSearchIndexRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexRequest.DefaultInstance; }
      }
      
      public override UpdateSearchIndexRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateSearchIndexRequest) {
          return MergeFrom((UpdateSearchIndexRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateSearchIndexRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        if (other.HasTimeToLive) {
          TimeToLive = other.TimeToLive;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateSearchIndexRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateSearchIndexRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
            case 40: {
              result.hasTimeToLive = input.ReadInt32(ref result.timeToLive_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
      
      public bool HasTimeToLive {
        get { return result.hasTimeToLive; }
      }
      public int TimeToLive {
        get { return result.TimeToLive; }
        set { SetTimeToLive(value); }
      }
      public Builder SetTimeToLive(int value) {
        PrepareBuilder();
        result.hasTimeToLive = true;
        result.timeToLive_ = value;
        return this;
      }
      public Builder ClearTimeToLive() {
        PrepareBuilder();
        result.hasTimeToLive = false;
        result.timeToLive_ = 0;
        return this;
      }
    }
    static UpdateSearchIndexRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateSearchIndexResponse : pb::GeneratedMessage<UpdateSearchIndexResponse, UpdateSearchIndexResponse.Builder> {
    private UpdateSearchIndexResponse() { }
    private static readonly UpdateSearchIndexResponse defaultInstance = new UpdateSearchIndexResponse().MakeReadOnly();
    private static readonly string[] _updateSearchIndexResponseFieldNames = new string[] {  };
    private static readonly uint[] _updateSearchIndexResponseFieldTags = new uint[] {  };
    public static UpdateSearchIndexResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateSearchIndexResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateSearchIndexResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateSearchIndexResponse, UpdateSearchIndexResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_UpdateSearchIndexResponse__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateSearchIndexResponseFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateSearchIndexResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateSearchIndexResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateSearchIndexResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateSearchIndexResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateSearchIndexResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateSearchIndexResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateSearchIndexResponse result;
      
      private UpdateSearchIndexResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateSearchIndexResponse original = result;
          result = new UpdateSearchIndexResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateSearchIndexResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexResponse.Descriptor; }
      }
      
      public override UpdateSearchIndexResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexResponse.DefaultInstance; }
      }
      
      public override UpdateSearchIndexResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateSearchIndexResponse) {
          return MergeFrom((UpdateSearchIndexResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateSearchIndexResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.UpdateSearchIndexResponse.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateSearchIndexResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateSearchIndexResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateSearchIndexResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ScanQuery : pb::GeneratedMessage<ScanQuery, ScanQuery.Builder> {
    private ScanQuery() { }
    private static readonly ScanQuery defaultInstance = new ScanQuery().MakeReadOnly();
    private static readonly string[] _scanQueryFieldNames = new string[] { "alive_time", "current_parallel_id", "limit", "max_paralle", "query", "token" };
    private static readonly uint[] _scanQueryFieldTags = new uint[] { 24, 40, 16, 48, 10, 34 };
    public static ScanQuery DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ScanQuery DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ScanQuery ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ScanQuery__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ScanQuery, ScanQuery.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ScanQuery__FieldAccessorTable; }
    }
    
    public const int QueryFieldNumber = 1;
    private bool hasQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.Query query_;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
      get { return query_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance; }
    }
    
    public const int LimitFieldNumber = 2;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public const int AliveTimeFieldNumber = 3;
    private bool hasAliveTime;
    private int aliveTime_;
    public bool HasAliveTime {
      get { return hasAliveTime; }
    }
    public int AliveTime {
      get { return aliveTime_; }
    }
    
    public const int TokenFieldNumber = 4;
    private bool hasToken;
    private pb::ByteString token_ = pb::ByteString.Empty;
    public bool HasToken {
      get { return hasToken; }
    }
    public pb::ByteString Token {
      get { return token_; }
    }
    
    public const int CurrentParallelIdFieldNumber = 5;
    private bool hasCurrentParallelId;
    private int currentParallelId_;
    public bool HasCurrentParallelId {
      get { return hasCurrentParallelId; }
    }
    public int CurrentParallelId {
      get { return currentParallelId_; }
    }
    
    public const int MaxParalleFieldNumber = 6;
    private bool hasMaxParalle;
    private int maxParalle_;
    public bool HasMaxParalle {
      get { return hasMaxParalle; }
    }
    public int MaxParalle {
      get { return maxParalle_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _scanQueryFieldNames;
      if (hasQuery) {
        output.WriteMessage(1, field_names[4], Query);
      }
      if (hasLimit) {
        output.WriteInt32(2, field_names[2], Limit);
      }
      if (hasAliveTime) {
        output.WriteInt32(3, field_names[0], AliveTime);
      }
      if (hasToken) {
        output.WriteBytes(4, field_names[5], Token);
      }
      if (hasCurrentParallelId) {
        output.WriteInt32(5, field_names[1], CurrentParallelId);
      }
      if (hasMaxParalle) {
        output.WriteInt32(6, field_names[3], MaxParalle);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Query);
      }
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Limit);
      }
      if (hasAliveTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, AliveTime);
      }
      if (hasToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, Token);
      }
      if (hasCurrentParallelId) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, CurrentParallelId);
      }
      if (hasMaxParalle) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, MaxParalle);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ScanQuery ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScanQuery ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScanQuery ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ScanQuery ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ScanQuery ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScanQuery ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ScanQuery ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ScanQuery ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ScanQuery ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ScanQuery ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ScanQuery MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ScanQuery prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ScanQuery, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ScanQuery cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ScanQuery result;
      
      private ScanQuery PrepareBuilder() {
        if (resultIsReadOnly) {
          ScanQuery original = result;
          result = new ScanQuery();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ScanQuery MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.Descriptor; }
      }
      
      public override ScanQuery DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.DefaultInstance; }
      }
      
      public override ScanQuery BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ScanQuery) {
          return MergeFrom((ScanQuery) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ScanQuery other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasQuery) {
          MergeQuery(other.Query);
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        if (other.HasAliveTime) {
          AliveTime = other.AliveTime;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasCurrentParallelId) {
          CurrentParallelId = other.CurrentParallelId;
        }
        if (other.HasMaxParalle) {
          MaxParalle = other.MaxParalle;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_scanQueryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _scanQueryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder();
              if (result.hasQuery) {
                subBuilder.MergeFrom(Query);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Query = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
            case 24: {
              result.hasAliveTime = input.ReadInt32(ref result.aliveTime_);
              break;
            }
            case 34: {
              result.hasToken = input.ReadBytes(ref result.token_);
              break;
            }
            case 40: {
              result.hasCurrentParallelId = input.ReadInt32(ref result.currentParallelId_);
              break;
            }
            case 48: {
              result.hasMaxParalle = input.ReadInt32(ref result.maxParalle_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasQuery {
       get { return result.hasQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder SetQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = builderForValue.Build();
        return this;
      }
      public Builder MergeQuery(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasQuery &&
            result.query_ != global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance) {
            result.query_ = global::com.alicloud.openservices.tablestore.core.protocol.Query.CreateBuilder(result.query_).MergeFrom(value).BuildPartial();
        } else {
          result.query_ = value;
        }
        result.hasQuery = true;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = null;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      public bool HasAliveTime {
        get { return result.hasAliveTime; }
      }
      public int AliveTime {
        get { return result.AliveTime; }
        set { SetAliveTime(value); }
      }
      public Builder SetAliveTime(int value) {
        PrepareBuilder();
        result.hasAliveTime = true;
        result.aliveTime_ = value;
        return this;
      }
      public Builder ClearAliveTime() {
        PrepareBuilder();
        result.hasAliveTime = false;
        result.aliveTime_ = 0;
        return this;
      }
      
      public bool HasToken {
        get { return result.hasToken; }
      }
      public pb::ByteString Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasCurrentParallelId {
        get { return result.hasCurrentParallelId; }
      }
      public int CurrentParallelId {
        get { return result.CurrentParallelId; }
        set { SetCurrentParallelId(value); }
      }
      public Builder SetCurrentParallelId(int value) {
        PrepareBuilder();
        result.hasCurrentParallelId = true;
        result.currentParallelId_ = value;
        return this;
      }
      public Builder ClearCurrentParallelId() {
        PrepareBuilder();
        result.hasCurrentParallelId = false;
        result.currentParallelId_ = 0;
        return this;
      }
      
      public bool HasMaxParalle {
        get { return result.hasMaxParalle; }
      }
      public int MaxParalle {
        get { return result.MaxParalle; }
        set { SetMaxParalle(value); }
      }
      public Builder SetMaxParalle(int value) {
        PrepareBuilder();
        result.hasMaxParalle = true;
        result.maxParalle_ = value;
        return this;
      }
      public Builder ClearMaxParalle() {
        PrepareBuilder();
        result.hasMaxParalle = false;
        result.maxParalle_ = 0;
        return this;
      }
    }
    static ScanQuery() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParallelScanRequest : pb::GeneratedMessage<ParallelScanRequest, ParallelScanRequest.Builder> {
    private ParallelScanRequest() { }
    private static readonly ParallelScanRequest defaultInstance = new ParallelScanRequest().MakeReadOnly();
    private static readonly string[] _parallelScanRequestFieldNames = new string[] { "columns_to_get", "index_name", "scan_query", "session_id", "table_name", "timeout_ms" };
    private static readonly uint[] _parallelScanRequestFieldTags = new uint[] { 26, 18, 42, 34, 10, 48 };
    public static ParallelScanRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParallelScanRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParallelScanRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParallelScanRequest, ParallelScanRequest.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanRequest__FieldAccessorTable; }
    }
    
    public const int TableNameFieldNumber = 1;
    private bool hasTableName;
    private string tableName_ = "";
    public bool HasTableName {
      get { return hasTableName; }
    }
    public string TableName {
      get { return tableName_; }
    }
    
    public const int IndexNameFieldNumber = 2;
    private bool hasIndexName;
    private string indexName_ = "";
    public bool HasIndexName {
      get { return hasIndexName; }
    }
    public string IndexName {
      get { return indexName_; }
    }
    
    public const int ColumnsToGetFieldNumber = 3;
    private bool hasColumnsToGet;
    private global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet columnsToGet_;
    public bool HasColumnsToGet {
      get { return hasColumnsToGet; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet ColumnsToGet {
      get { return columnsToGet_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance; }
    }
    
    public const int SessionIdFieldNumber = 4;
    private bool hasSessionId;
    private pb::ByteString sessionId_ = pb::ByteString.Empty;
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public pb::ByteString SessionId {
      get { return sessionId_; }
    }
    
    public const int ScanQueryFieldNumber = 5;
    private bool hasScanQuery;
    private global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery scanQuery_;
    public bool HasScanQuery {
      get { return hasScanQuery; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery ScanQuery {
      get { return scanQuery_ ?? global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.DefaultInstance; }
    }
    
    public const int TimeoutMsFieldNumber = 6;
    private bool hasTimeoutMs;
    private int timeoutMs_;
    public bool HasTimeoutMs {
      get { return hasTimeoutMs; }
    }
    public int TimeoutMs {
      get { return timeoutMs_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _parallelScanRequestFieldNames;
      if (hasTableName) {
        output.WriteString(1, field_names[4], TableName);
      }
      if (hasIndexName) {
        output.WriteString(2, field_names[1], IndexName);
      }
      if (hasColumnsToGet) {
        output.WriteMessage(3, field_names[0], ColumnsToGet);
      }
      if (hasSessionId) {
        output.WriteBytes(4, field_names[3], SessionId);
      }
      if (hasScanQuery) {
        output.WriteMessage(5, field_names[2], ScanQuery);
      }
      if (hasTimeoutMs) {
        output.WriteInt32(6, field_names[5], TimeoutMs);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTableName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TableName);
      }
      if (hasIndexName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, IndexName);
      }
      if (hasColumnsToGet) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, ColumnsToGet);
      }
      if (hasSessionId) {
        size += pb::CodedOutputStream.ComputeBytesSize(4, SessionId);
      }
      if (hasScanQuery) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, ScanQuery);
      }
      if (hasTimeoutMs) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, TimeoutMs);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ParallelScanRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParallelScanRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParallelScanRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParallelScanRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParallelScanRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParallelScanRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParallelScanRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParallelScanRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParallelScanRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParallelScanRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParallelScanRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParallelScanRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParallelScanRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParallelScanRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParallelScanRequest result;
      
      private ParallelScanRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ParallelScanRequest original = result;
          result = new ParallelScanRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParallelScanRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanRequest.Descriptor; }
      }
      
      public override ParallelScanRequest DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanRequest.DefaultInstance; }
      }
      
      public override ParallelScanRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParallelScanRequest) {
          return MergeFrom((ParallelScanRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParallelScanRequest other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTableName) {
          TableName = other.TableName;
        }
        if (other.HasIndexName) {
          IndexName = other.IndexName;
        }
        if (other.HasColumnsToGet) {
          MergeColumnsToGet(other.ColumnsToGet);
        }
        if (other.HasSessionId) {
          SessionId = other.SessionId;
        }
        if (other.HasScanQuery) {
          MergeScanQuery(other.ScanQuery);
        }
        if (other.HasTimeoutMs) {
          TimeoutMs = other.TimeoutMs;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_parallelScanRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _parallelScanRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTableName = input.ReadString(ref result.tableName_);
              break;
            }
            case 18: {
              result.hasIndexName = input.ReadString(ref result.indexName_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.CreateBuilder();
              if (result.hasColumnsToGet) {
                subBuilder.MergeFrom(ColumnsToGet);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ColumnsToGet = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasSessionId = input.ReadBytes(ref result.sessionId_);
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.CreateBuilder();
              if (result.hasScanQuery) {
                subBuilder.MergeFrom(ScanQuery);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ScanQuery = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              result.hasTimeoutMs = input.ReadInt32(ref result.timeoutMs_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTableName {
        get { return result.hasTableName; }
      }
      public string TableName {
        get { return result.TableName; }
        set { SetTableName(value); }
      }
      public Builder SetTableName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableName = true;
        result.tableName_ = value;
        return this;
      }
      public Builder ClearTableName() {
        PrepareBuilder();
        result.hasTableName = false;
        result.tableName_ = "";
        return this;
      }
      
      public bool HasIndexName {
        get { return result.hasIndexName; }
      }
      public string IndexName {
        get { return result.IndexName; }
        set { SetIndexName(value); }
      }
      public Builder SetIndexName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIndexName = true;
        result.indexName_ = value;
        return this;
      }
      public Builder ClearIndexName() {
        PrepareBuilder();
        result.hasIndexName = false;
        result.indexName_ = "";
        return this;
      }
      
      public bool HasColumnsToGet {
       get { return result.hasColumnsToGet; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet ColumnsToGet {
        get { return result.ColumnsToGet; }
        set { SetColumnsToGet(value); }
      }
      public Builder SetColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasColumnsToGet = true;
        result.columnsToGet_ = value;
        return this;
      }
      public Builder SetColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasColumnsToGet = true;
        result.columnsToGet_ = builderForValue.Build();
        return this;
      }
      public Builder MergeColumnsToGet(global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasColumnsToGet &&
            result.columnsToGet_ != global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.DefaultInstance) {
            result.columnsToGet_ = global::com.alicloud.openservices.tablestore.core.protocol.ColumnsToGet.CreateBuilder(result.columnsToGet_).MergeFrom(value).BuildPartial();
        } else {
          result.columnsToGet_ = value;
        }
        result.hasColumnsToGet = true;
        return this;
      }
      public Builder ClearColumnsToGet() {
        PrepareBuilder();
        result.hasColumnsToGet = false;
        result.columnsToGet_ = null;
        return this;
      }
      
      public bool HasSessionId {
        get { return result.hasSessionId; }
      }
      public pb::ByteString SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder ClearSessionId() {
        PrepareBuilder();
        result.hasSessionId = false;
        result.sessionId_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasScanQuery {
       get { return result.hasScanQuery; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery ScanQuery {
        get { return result.ScanQuery; }
        set { SetScanQuery(value); }
      }
      public Builder SetScanQuery(global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScanQuery = true;
        result.scanQuery_ = value;
        return this;
      }
      public Builder SetScanQuery(global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScanQuery = true;
        result.scanQuery_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScanQuery(global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScanQuery &&
            result.scanQuery_ != global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.DefaultInstance) {
            result.scanQuery_ = global::com.alicloud.openservices.tablestore.core.protocol.ScanQuery.CreateBuilder(result.scanQuery_).MergeFrom(value).BuildPartial();
        } else {
          result.scanQuery_ = value;
        }
        result.hasScanQuery = true;
        return this;
      }
      public Builder ClearScanQuery() {
        PrepareBuilder();
        result.hasScanQuery = false;
        result.scanQuery_ = null;
        return this;
      }
      
      public bool HasTimeoutMs {
        get { return result.hasTimeoutMs; }
      }
      public int TimeoutMs {
        get { return result.TimeoutMs; }
        set { SetTimeoutMs(value); }
      }
      public Builder SetTimeoutMs(int value) {
        PrepareBuilder();
        result.hasTimeoutMs = true;
        result.timeoutMs_ = value;
        return this;
      }
      public Builder ClearTimeoutMs() {
        PrepareBuilder();
        result.hasTimeoutMs = false;
        result.timeoutMs_ = 0;
        return this;
      }
    }
    static ParallelScanRequest() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParallelScanResponse : pb::GeneratedMessage<ParallelScanResponse, ParallelScanResponse.Builder> {
    private ParallelScanResponse() { }
    private static readonly ParallelScanResponse defaultInstance = new ParallelScanResponse().MakeReadOnly();
    private static readonly string[] _parallelScanResponseFieldNames = new string[] { "next_token", "rows" };
    private static readonly uint[] _parallelScanResponseFieldTags = new uint[] { 18, 10 };
    public static ParallelScanResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParallelScanResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParallelScanResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParallelScanResponse, ParallelScanResponse.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_ParallelScanResponse__FieldAccessorTable; }
    }
    
    public const int RowsFieldNumber = 1;
    private pbc::PopsicleList<pb::ByteString> rows_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> RowsList {
      get { return pbc::Lists.AsReadOnly(rows_); }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public pb::ByteString GetRows(int index) {
      return rows_[index];
    }
    
    public const int NextTokenFieldNumber = 2;
    private bool hasNextToken;
    private pb::ByteString nextToken_ = pb::ByteString.Empty;
    public bool HasNextToken {
      get { return hasNextToken; }
    }
    public pb::ByteString NextToken {
      get { return nextToken_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _parallelScanResponseFieldNames;
      if (rows_.Count > 0) {
        output.WriteBytesArray(1, field_names[1], rows_);
      }
      if (hasNextToken) {
        output.WriteBytes(2, field_names[0], NextToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (pb::ByteString element in RowsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * rows_.Count;
      }
      if (hasNextToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, NextToken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ParallelScanResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParallelScanResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParallelScanResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParallelScanResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParallelScanResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParallelScanResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParallelScanResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParallelScanResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParallelScanResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParallelScanResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParallelScanResponse MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParallelScanResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParallelScanResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParallelScanResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParallelScanResponse result;
      
      private ParallelScanResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ParallelScanResponse original = result;
          result = new ParallelScanResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParallelScanResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanResponse.Descriptor; }
      }
      
      public override ParallelScanResponse DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanResponse.DefaultInstance; }
      }
      
      public override ParallelScanResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParallelScanResponse) {
          return MergeFrom((ParallelScanResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParallelScanResponse other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.ParallelScanResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        if (other.HasNextToken) {
          NextToken = other.NextToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_parallelScanResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _parallelScanResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadBytesArray(tag, field_name, result.rows_);
              break;
            }
            case 18: {
              result.hasNextToken = input.ReadBytes(ref result.nextToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<pb::ByteString> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public pb::ByteString GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder AddRows(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
      
      public bool HasNextToken {
        get { return result.hasNextToken; }
      }
      public pb::ByteString NextToken {
        get { return result.NextToken; }
        set { SetNextToken(value); }
      }
      public Builder SetNextToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextToken = true;
        result.nextToken_ = value;
        return this;
      }
      public Builder ClearNextToken() {
        PrepareBuilder();
        result.hasNextToken = false;
        result.nextToken_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ParallelScanResponse() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GeoPoint : pb::GeneratedMessage<GeoPoint, GeoPoint.Builder> {
    private GeoPoint() { }
    private static readonly GeoPoint defaultInstance = new GeoPoint().MakeReadOnly();
    private static readonly string[] _geoPointFieldNames = new string[] { "lat", "lon" };
    private static readonly uint[] _geoPointFieldTags = new uint[] { 9, 17 };
    public static GeoPoint DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeoPoint DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GeoPoint ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPoint__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeoPoint, GeoPoint.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GeoPoint__FieldAccessorTable; }
    }
    
    public const int LatFieldNumber = 1;
    private bool hasLat;
    private double lat_;
    public bool HasLat {
      get { return hasLat; }
    }
    public double Lat {
      get { return lat_; }
    }
    
    public const int LonFieldNumber = 2;
    private bool hasLon;
    private double lon_;
    public bool HasLon {
      get { return hasLon; }
    }
    public double Lon {
      get { return lon_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _geoPointFieldNames;
      if (hasLat) {
        output.WriteDouble(1, field_names[0], Lat);
      }
      if (hasLon) {
        output.WriteDouble(2, field_names[1], Lon);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLat) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, Lat);
      }
      if (hasLon) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, Lon);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GeoPoint ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoPoint ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoPoint ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeoPoint ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeoPoint ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoPoint ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeoPoint ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeoPoint ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeoPoint ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeoPoint ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GeoPoint MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeoPoint prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GeoPoint, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GeoPoint cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GeoPoint result;
      
      private GeoPoint PrepareBuilder() {
        if (resultIsReadOnly) {
          GeoPoint original = result;
          result = new GeoPoint();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GeoPoint MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.Descriptor; }
      }
      
      public override GeoPoint DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.DefaultInstance; }
      }
      
      public override GeoPoint BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeoPoint) {
          return MergeFrom((GeoPoint) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeoPoint other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLat) {
          Lat = other.Lat;
        }
        if (other.HasLon) {
          Lon = other.Lon;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_geoPointFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _geoPointFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasLat = input.ReadDouble(ref result.lat_);
              break;
            }
            case 17: {
              result.hasLon = input.ReadDouble(ref result.lon_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLat {
        get { return result.hasLat; }
      }
      public double Lat {
        get { return result.Lat; }
        set { SetLat(value); }
      }
      public Builder SetLat(double value) {
        PrepareBuilder();
        result.hasLat = true;
        result.lat_ = value;
        return this;
      }
      public Builder ClearLat() {
        PrepareBuilder();
        result.hasLat = false;
        result.lat_ = 0D;
        return this;
      }
      
      public bool HasLon {
        get { return result.hasLon; }
      }
      public double Lon {
        get { return result.Lon; }
        set { SetLon(value); }
      }
      public Builder SetLon(double value) {
        PrepareBuilder();
        result.hasLon = true;
        result.lon_ = value;
        return this;
      }
      public Builder ClearLon() {
        PrepareBuilder();
        result.hasLon = false;
        result.lon_ = 0D;
        return this;
      }
    }
    static GeoPoint() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Aggregation : pb::GeneratedMessage<Aggregation, Aggregation.Builder> {
    private Aggregation() { }
    private static readonly Aggregation defaultInstance = new Aggregation().MakeReadOnly();
    private static readonly string[] _aggregationFieldNames = new string[] { "body", "name", "type" };
    private static readonly uint[] _aggregationFieldTags = new uint[] { 26, 10, 16 };
    public static Aggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Aggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Aggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Aggregation, Aggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregation__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.AggregationType type_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationType.AGG_AVG;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationType Type {
      get { return type_; }
    }
    
    public const int BodyFieldNumber = 3;
    private bool hasBody;
    private pb::ByteString body_ = pb::ByteString.Empty;
    public bool HasBody {
      get { return hasBody; }
    }
    public pb::ByteString Body {
      get { return body_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _aggregationFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[1], Name);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[2], (int) Type, Type);
      }
      if (hasBody) {
        output.WriteBytes(3, field_names[0], Body);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasBody) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, Body);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Aggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Aggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Aggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Aggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Aggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Aggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Aggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Aggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Aggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Aggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Aggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Aggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Aggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Aggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Aggregation result;
      
      private Aggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          Aggregation original = result;
          result = new Aggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Aggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.Descriptor; }
      }
      
      public override Aggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.DefaultInstance; }
      }
      
      public override Aggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Aggregation) {
          return MergeFrom((Aggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Aggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasBody) {
          Body = other.Body;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_aggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _aggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              result.hasBody = input.ReadBytes(ref result.body_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.AggregationType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationType.AGG_AVG;
        return this;
      }
      
      public bool HasBody {
        get { return result.hasBody; }
      }
      public pb::ByteString Body {
        get { return result.Body; }
        set { SetBody(value); }
      }
      public Builder SetBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder ClearBody() {
        PrepareBuilder();
        result.hasBody = false;
        result.body_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Aggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Aggregations : pb::GeneratedMessage<Aggregations, Aggregations.Builder> {
    private Aggregations() { }
    private static readonly Aggregations defaultInstance = new Aggregations().MakeReadOnly();
    private static readonly string[] _aggregationsFieldNames = new string[] { "aggs" };
    private static readonly uint[] _aggregationsFieldTags = new uint[] { 10 };
    public static Aggregations DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Aggregations DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Aggregations ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregations__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Aggregations, Aggregations.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Aggregations__FieldAccessorTable; }
    }
    
    public const int AggsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Aggregation> aggs_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Aggregation>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Aggregation> AggsList {
      get { return aggs_; }
    }
    public int AggsCount {
      get { return aggs_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Aggregation GetAggs(int index) {
      return aggs_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _aggregationsFieldNames;
      if (aggs_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], aggs_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Aggregation element in AggsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Aggregations ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Aggregations ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Aggregations ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Aggregations ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Aggregations ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Aggregations ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Aggregations ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Aggregations ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Aggregations ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Aggregations ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Aggregations MakeReadOnly() {
      aggs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Aggregations prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Aggregations, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Aggregations cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Aggregations result;
      
      private Aggregations PrepareBuilder() {
        if (resultIsReadOnly) {
          Aggregations original = result;
          result = new Aggregations();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Aggregations MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Descriptor; }
      }
      
      public override Aggregations DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance; }
      }
      
      public override Aggregations BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Aggregations) {
          return MergeFrom((Aggregations) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Aggregations other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance) return this;
        PrepareBuilder();
        if (other.aggs_.Count != 0) {
          result.aggs_.Add(other.aggs_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_aggregationsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _aggregationsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.aggs_, global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Aggregation> AggsList {
        get { return PrepareBuilder().aggs_; }
      }
      public int AggsCount {
        get { return result.AggsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Aggregation GetAggs(int index) {
        return result.GetAggs(index);
      }
      public Builder SetAggs(int index, global::com.alicloud.openservices.tablestore.core.protocol.Aggregation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.aggs_[index] = value;
        return this;
      }
      public Builder SetAggs(int index, global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.aggs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.aggs_.Add(value);
        return this;
      }
      public Builder AddAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.aggs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAggs(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Aggregation> values) {
        PrepareBuilder();
        result.aggs_.Add(values);
        return this;
      }
      public Builder ClearAggs() {
        PrepareBuilder();
        result.aggs_.Clear();
        return this;
      }
    }
    static Aggregations() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupBy : pb::GeneratedMessage<GroupBy, GroupBy.Builder> {
    private GroupBy() { }
    private static readonly GroupBy defaultInstance = new GroupBy().MakeReadOnly();
    private static readonly string[] _groupByFieldNames = new string[] { "body", "name", "type" };
    private static readonly uint[] _groupByFieldTags = new uint[] { 26, 10, 16 };
    public static GroupBy DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupBy DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupBy ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBy__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupBy, GroupBy.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBy__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupByType type_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupByType.GROUP_BY_FIELD;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByType Type {
      get { return type_; }
    }
    
    public const int BodyFieldNumber = 3;
    private bool hasBody;
    private pb::ByteString body_ = pb::ByteString.Empty;
    public bool HasBody {
      get { return hasBody; }
    }
    public pb::ByteString Body {
      get { return body_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[1], Name);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[2], (int) Type, Type);
      }
      if (hasBody) {
        output.WriteBytes(3, field_names[0], Body);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasBody) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, Body);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupBy ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBy ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBy ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBy ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBy ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBy ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupBy ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupBy ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupBy ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBy ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupBy MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupBy prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupBy, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupBy cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupBy result;
      
      private GroupBy PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupBy original = result;
          result = new GroupBy();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupBy MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.Descriptor; }
      }
      
      public override GroupBy DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.DefaultInstance; }
      }
      
      public override GroupBy BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupBy) {
          return MergeFrom((GroupBy) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupBy other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasBody) {
          Body = other.Body;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              result.hasBody = input.ReadBytes(ref result.body_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.GroupByType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupByType.GROUP_BY_FIELD;
        return this;
      }
      
      public bool HasBody {
        get { return result.hasBody; }
      }
      public pb::ByteString Body {
        get { return result.Body; }
        set { SetBody(value); }
      }
      public Builder SetBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder ClearBody() {
        PrepareBuilder();
        result.hasBody = false;
        result.body_ = pb::ByteString.Empty;
        return this;
      }
    }
    static GroupBy() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupBys : pb::GeneratedMessage<GroupBys, GroupBys.Builder> {
    private GroupBys() { }
    private static readonly GroupBys defaultInstance = new GroupBys().MakeReadOnly();
    private static readonly string[] _groupBysFieldNames = new string[] { "group_bys" };
    private static readonly uint[] _groupBysFieldTags = new uint[] { 10 };
    public static GroupBys DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupBys DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupBys ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBys__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupBys, GroupBys.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBys__FieldAccessorTable; }
    }
    
    public const int GroupBys_FieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBy> groupBys_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBy>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBy> GroupBys_List {
      get { return groupBys_; }
    }
    public int GroupBys_Count {
      get { return groupBys_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBy GetGroupBys_(int index) {
      return groupBys_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupBysFieldNames;
      if (groupBys_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], groupBys_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupBy element in GroupBys_List) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupBys ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBys ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBys ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBys ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBys ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBys ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupBys ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupBys ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupBys ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBys ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupBys MakeReadOnly() {
      groupBys_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupBys prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupBys, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupBys cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupBys result;
      
      private GroupBys PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupBys original = result;
          result = new GroupBys();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupBys MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Descriptor; }
      }
      
      public override GroupBys DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance; }
      }
      
      public override GroupBys BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupBys) {
          return MergeFrom((GroupBys) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupBys other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance) return this;
        PrepareBuilder();
        if (other.groupBys_.Count != 0) {
          result.groupBys_.Add(other.groupBys_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupBysFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupBysFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.groupBys_, global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBy> GroupBys_List {
        get { return PrepareBuilder().groupBys_; }
      }
      public int GroupBys_Count {
        get { return result.GroupBys_Count; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBy GetGroupBys_(int index) {
        return result.GetGroupBys_(index);
      }
      public Builder SetGroupBys_(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupBy value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupBys_[index] = value;
        return this;
      }
      public Builder SetGroupBys_(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupBys_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroupBys_(global::com.alicloud.openservices.tablestore.core.protocol.GroupBy value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupBys_.Add(value);
        return this;
      }
      public Builder AddGroupBys_(global::com.alicloud.openservices.tablestore.core.protocol.GroupBy.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupBys_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroupBys_(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBy> values) {
        PrepareBuilder();
        result.groupBys_.Add(values);
        return this;
      }
      public Builder ClearGroupBys_() {
        PrepareBuilder();
        result.groupBys_.Clear();
        return this;
      }
    }
    static GroupBys() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AvgAggregation : pb::GeneratedMessage<AvgAggregation, AvgAggregation.Builder> {
    private AvgAggregation() { }
    private static readonly AvgAggregation defaultInstance = new AvgAggregation().MakeReadOnly();
    private static readonly string[] _avgAggregationFieldNames = new string[] { "field_name", "missing" };
    private static readonly uint[] _avgAggregationFieldTags = new uint[] { 10, 18 };
    public static AvgAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AvgAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AvgAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AvgAggregation, AvgAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregation__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int MissingFieldNumber = 2;
    private bool hasMissing;
    private pb::ByteString missing_ = pb::ByteString.Empty;
    public bool HasMissing {
      get { return hasMissing; }
    }
    public pb::ByteString Missing {
      get { return missing_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _avgAggregationFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasMissing) {
        output.WriteBytes(2, field_names[1], Missing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasMissing) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Missing);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AvgAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AvgAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AvgAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AvgAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AvgAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AvgAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AvgAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AvgAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AvgAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AvgAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AvgAggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AvgAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AvgAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AvgAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AvgAggregation result;
      
      private AvgAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          AvgAggregation original = result;
          result = new AvgAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AvgAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregation.Descriptor; }
      }
      
      public override AvgAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregation.DefaultInstance; }
      }
      
      public override AvgAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AvgAggregation) {
          return MergeFrom((AvgAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AvgAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasMissing) {
          Missing = other.Missing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_avgAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _avgAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasMissing = input.ReadBytes(ref result.missing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasMissing {
        get { return result.hasMissing; }
      }
      public pb::ByteString Missing {
        get { return result.Missing; }
        set { SetMissing(value); }
      }
      public Builder SetMissing(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissing = true;
        result.missing_ = value;
        return this;
      }
      public Builder ClearMissing() {
        PrepareBuilder();
        result.hasMissing = false;
        result.missing_ = pb::ByteString.Empty;
        return this;
      }
    }
    static AvgAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MaxAggregation : pb::GeneratedMessage<MaxAggregation, MaxAggregation.Builder> {
    private MaxAggregation() { }
    private static readonly MaxAggregation defaultInstance = new MaxAggregation().MakeReadOnly();
    private static readonly string[] _maxAggregationFieldNames = new string[] { "field_name", "missing" };
    private static readonly uint[] _maxAggregationFieldTags = new uint[] { 10, 18 };
    public static MaxAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MaxAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MaxAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MaxAggregation, MaxAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregation__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int MissingFieldNumber = 2;
    private bool hasMissing;
    private pb::ByteString missing_ = pb::ByteString.Empty;
    public bool HasMissing {
      get { return hasMissing; }
    }
    public pb::ByteString Missing {
      get { return missing_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _maxAggregationFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasMissing) {
        output.WriteBytes(2, field_names[1], Missing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasMissing) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Missing);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MaxAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MaxAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MaxAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MaxAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MaxAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MaxAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MaxAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MaxAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MaxAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MaxAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MaxAggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MaxAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MaxAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MaxAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MaxAggregation result;
      
      private MaxAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          MaxAggregation original = result;
          result = new MaxAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MaxAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregation.Descriptor; }
      }
      
      public override MaxAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregation.DefaultInstance; }
      }
      
      public override MaxAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MaxAggregation) {
          return MergeFrom((MaxAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MaxAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasMissing) {
          Missing = other.Missing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_maxAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _maxAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasMissing = input.ReadBytes(ref result.missing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasMissing {
        get { return result.hasMissing; }
      }
      public pb::ByteString Missing {
        get { return result.Missing; }
        set { SetMissing(value); }
      }
      public Builder SetMissing(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissing = true;
        result.missing_ = value;
        return this;
      }
      public Builder ClearMissing() {
        PrepareBuilder();
        result.hasMissing = false;
        result.missing_ = pb::ByteString.Empty;
        return this;
      }
    }
    static MaxAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MinAggregation : pb::GeneratedMessage<MinAggregation, MinAggregation.Builder> {
    private MinAggregation() { }
    private static readonly MinAggregation defaultInstance = new MinAggregation().MakeReadOnly();
    private static readonly string[] _minAggregationFieldNames = new string[] { "field_name", "missing" };
    private static readonly uint[] _minAggregationFieldTags = new uint[] { 10, 18 };
    public static MinAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MinAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MinAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MinAggregation, MinAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregation__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int MissingFieldNumber = 2;
    private bool hasMissing;
    private pb::ByteString missing_ = pb::ByteString.Empty;
    public bool HasMissing {
      get { return hasMissing; }
    }
    public pb::ByteString Missing {
      get { return missing_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _minAggregationFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasMissing) {
        output.WriteBytes(2, field_names[1], Missing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasMissing) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Missing);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MinAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MinAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MinAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MinAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MinAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MinAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MinAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MinAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MinAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MinAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MinAggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MinAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MinAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MinAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MinAggregation result;
      
      private MinAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          MinAggregation original = result;
          result = new MinAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MinAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MinAggregation.Descriptor; }
      }
      
      public override MinAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MinAggregation.DefaultInstance; }
      }
      
      public override MinAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MinAggregation) {
          return MergeFrom((MinAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MinAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MinAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasMissing) {
          Missing = other.Missing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_minAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _minAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasMissing = input.ReadBytes(ref result.missing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasMissing {
        get { return result.hasMissing; }
      }
      public pb::ByteString Missing {
        get { return result.Missing; }
        set { SetMissing(value); }
      }
      public Builder SetMissing(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissing = true;
        result.missing_ = value;
        return this;
      }
      public Builder ClearMissing() {
        PrepareBuilder();
        result.hasMissing = false;
        result.missing_ = pb::ByteString.Empty;
        return this;
      }
    }
    static MinAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SumAggregation : pb::GeneratedMessage<SumAggregation, SumAggregation.Builder> {
    private SumAggregation() { }
    private static readonly SumAggregation defaultInstance = new SumAggregation().MakeReadOnly();
    private static readonly string[] _sumAggregationFieldNames = new string[] { "field_name", "missing" };
    private static readonly uint[] _sumAggregationFieldTags = new uint[] { 10, 18 };
    public static SumAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SumAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SumAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SumAggregation, SumAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregation__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int MissingFieldNumber = 2;
    private bool hasMissing;
    private pb::ByteString missing_ = pb::ByteString.Empty;
    public bool HasMissing {
      get { return hasMissing; }
    }
    public pb::ByteString Missing {
      get { return missing_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sumAggregationFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasMissing) {
        output.WriteBytes(2, field_names[1], Missing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasMissing) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Missing);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SumAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SumAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SumAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SumAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SumAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SumAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SumAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SumAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SumAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SumAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SumAggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SumAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SumAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SumAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SumAggregation result;
      
      private SumAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          SumAggregation original = result;
          result = new SumAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SumAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SumAggregation.Descriptor; }
      }
      
      public override SumAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SumAggregation.DefaultInstance; }
      }
      
      public override SumAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SumAggregation) {
          return MergeFrom((SumAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SumAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SumAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasMissing) {
          Missing = other.Missing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sumAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sumAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasMissing = input.ReadBytes(ref result.missing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasMissing {
        get { return result.hasMissing; }
      }
      public pb::ByteString Missing {
        get { return result.Missing; }
        set { SetMissing(value); }
      }
      public Builder SetMissing(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissing = true;
        result.missing_ = value;
        return this;
      }
      public Builder ClearMissing() {
        PrepareBuilder();
        result.hasMissing = false;
        result.missing_ = pb::ByteString.Empty;
        return this;
      }
    }
    static SumAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CountAggregation : pb::GeneratedMessage<CountAggregation, CountAggregation.Builder> {
    private CountAggregation() { }
    private static readonly CountAggregation defaultInstance = new CountAggregation().MakeReadOnly();
    private static readonly string[] _countAggregationFieldNames = new string[] { "field_name" };
    private static readonly uint[] _countAggregationFieldTags = new uint[] { 10 };
    public static CountAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CountAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CountAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CountAggregation, CountAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregation__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _countAggregationFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CountAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CountAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CountAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CountAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CountAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CountAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CountAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CountAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CountAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CountAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CountAggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CountAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CountAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CountAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CountAggregation result;
      
      private CountAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          CountAggregation original = result;
          result = new CountAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CountAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CountAggregation.Descriptor; }
      }
      
      public override CountAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CountAggregation.DefaultInstance; }
      }
      
      public override CountAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CountAggregation) {
          return MergeFrom((CountAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CountAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CountAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_countAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _countAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
    }
    static CountAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DistinctCountAggregation : pb::GeneratedMessage<DistinctCountAggregation, DistinctCountAggregation.Builder> {
    private DistinctCountAggregation() { }
    private static readonly DistinctCountAggregation defaultInstance = new DistinctCountAggregation().MakeReadOnly();
    private static readonly string[] _distinctCountAggregationFieldNames = new string[] { "field_name", "missing" };
    private static readonly uint[] _distinctCountAggregationFieldTags = new uint[] { 10, 18 };
    public static DistinctCountAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DistinctCountAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DistinctCountAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DistinctCountAggregation, DistinctCountAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregation__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int MissingFieldNumber = 2;
    private bool hasMissing;
    private pb::ByteString missing_ = pb::ByteString.Empty;
    public bool HasMissing {
      get { return hasMissing; }
    }
    public pb::ByteString Missing {
      get { return missing_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _distinctCountAggregationFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasMissing) {
        output.WriteBytes(2, field_names[1], Missing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasMissing) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Missing);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DistinctCountAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DistinctCountAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DistinctCountAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DistinctCountAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DistinctCountAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DistinctCountAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DistinctCountAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DistinctCountAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DistinctCountAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DistinctCountAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DistinctCountAggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DistinctCountAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DistinctCountAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DistinctCountAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DistinctCountAggregation result;
      
      private DistinctCountAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          DistinctCountAggregation original = result;
          result = new DistinctCountAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DistinctCountAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregation.Descriptor; }
      }
      
      public override DistinctCountAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregation.DefaultInstance; }
      }
      
      public override DistinctCountAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DistinctCountAggregation) {
          return MergeFrom((DistinctCountAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DistinctCountAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasMissing) {
          Missing = other.Missing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_distinctCountAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _distinctCountAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasMissing = input.ReadBytes(ref result.missing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasMissing {
        get { return result.hasMissing; }
      }
      public pb::ByteString Missing {
        get { return result.Missing; }
        set { SetMissing(value); }
      }
      public Builder SetMissing(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissing = true;
        result.missing_ = value;
        return this;
      }
      public Builder ClearMissing() {
        PrepareBuilder();
        result.hasMissing = false;
        result.missing_ = pb::ByteString.Empty;
        return this;
      }
    }
    static DistinctCountAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TopRowsAggregation : pb::GeneratedMessage<TopRowsAggregation, TopRowsAggregation.Builder> {
    private TopRowsAggregation() { }
    private static readonly TopRowsAggregation defaultInstance = new TopRowsAggregation().MakeReadOnly();
    private static readonly string[] _topRowsAggregationFieldNames = new string[] { "limit", "sort" };
    private static readonly uint[] _topRowsAggregationFieldTags = new uint[] { 8, 18 };
    public static TopRowsAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TopRowsAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TopRowsAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TopRowsAggregation, TopRowsAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregation__FieldAccessorTable; }
    }
    
    public const int LimitFieldNumber = 1;
    private bool hasLimit;
    private int limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public int Limit {
      get { return limit_; }
    }
    
    public const int SortFieldNumber = 2;
    private bool hasSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.Sort sort_;
    public bool HasSort {
      get { return hasSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Sort Sort {
      get { return sort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _topRowsAggregationFieldNames;
      if (hasLimit) {
        output.WriteInt32(1, field_names[0], Limit);
      }
      if (hasSort) {
        output.WriteMessage(2, field_names[1], Sort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Limit);
      }
      if (hasSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Sort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TopRowsAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TopRowsAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TopRowsAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TopRowsAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TopRowsAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TopRowsAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TopRowsAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TopRowsAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TopRowsAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TopRowsAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TopRowsAggregation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TopRowsAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TopRowsAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TopRowsAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TopRowsAggregation result;
      
      private TopRowsAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          TopRowsAggregation original = result;
          result = new TopRowsAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TopRowsAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregation.Descriptor; }
      }
      
      public override TopRowsAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregation.DefaultInstance; }
      }
      
      public override TopRowsAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TopRowsAggregation) {
          return MergeFrom((TopRowsAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TopRowsAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        if (other.HasSort) {
          MergeSort(other.Sort);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_topRowsAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _topRowsAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLimit = input.ReadInt32(ref result.limit_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder();
              if (result.hasSort) {
                subBuilder.MergeFrom(Sort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Sort = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public int Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(int value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
      
      public bool HasSort {
       get { return result.hasSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Sort Sort {
        get { return result.Sort; }
        set { SetSort(value); }
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = value;
        return this;
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSort(global::com.alicloud.openservices.tablestore.core.protocol.Sort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSort &&
            result.sort_ != global::com.alicloud.openservices.tablestore.core.protocol.Sort.DefaultInstance) {
            result.sort_ = global::com.alicloud.openservices.tablestore.core.protocol.Sort.CreateBuilder(result.sort_).MergeFrom(value).BuildPartial();
        } else {
          result.sort_ = value;
        }
        result.hasSort = true;
        return this;
      }
      public Builder ClearSort() {
        PrepareBuilder();
        result.hasSort = false;
        result.sort_ = null;
        return this;
      }
    }
    static TopRowsAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PercentilesAggregation : pb::GeneratedMessage<PercentilesAggregation, PercentilesAggregation.Builder> {
    private PercentilesAggregation() { }
    private static readonly PercentilesAggregation defaultInstance = new PercentilesAggregation().MakeReadOnly();
    private static readonly string[] _percentilesAggregationFieldNames = new string[] { "field_name", "missing", "percentiles" };
    private static readonly uint[] _percentilesAggregationFieldTags = new uint[] { 10, 26, 17 };
    public static PercentilesAggregation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PercentilesAggregation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PercentilesAggregation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PercentilesAggregation, PercentilesAggregation.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregation__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int PercentilesFieldNumber = 2;
    private pbc::PopsicleList<double> percentiles_ = new pbc::PopsicleList<double>();
    public scg::IList<double> PercentilesList {
      get { return pbc::Lists.AsReadOnly(percentiles_); }
    }
    public int PercentilesCount {
      get { return percentiles_.Count; }
    }
    public double GetPercentiles(int index) {
      return percentiles_[index];
    }
    
    public const int MissingFieldNumber = 3;
    private bool hasMissing;
    private pb::ByteString missing_ = pb::ByteString.Empty;
    public bool HasMissing {
      get { return hasMissing; }
    }
    public pb::ByteString Missing {
      get { return missing_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _percentilesAggregationFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (percentiles_.Count > 0) {
        output.WriteDoubleArray(2, field_names[2], percentiles_);
      }
      if (hasMissing) {
        output.WriteBytes(3, field_names[1], Missing);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      {
        int dataSize = 0;
        dataSize = 8 * percentiles_.Count;
        size += dataSize;
        size += 1 * percentiles_.Count;
      }
      if (hasMissing) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, Missing);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PercentilesAggregation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PercentilesAggregation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PercentilesAggregation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PercentilesAggregation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PercentilesAggregation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PercentilesAggregation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PercentilesAggregation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PercentilesAggregation MakeReadOnly() {
      percentiles_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PercentilesAggregation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PercentilesAggregation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PercentilesAggregation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PercentilesAggregation result;
      
      private PercentilesAggregation PrepareBuilder() {
        if (resultIsReadOnly) {
          PercentilesAggregation original = result;
          result = new PercentilesAggregation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PercentilesAggregation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregation.Descriptor; }
      }
      
      public override PercentilesAggregation DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregation.DefaultInstance; }
      }
      
      public override PercentilesAggregation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PercentilesAggregation) {
          return MergeFrom((PercentilesAggregation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PercentilesAggregation other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.percentiles_.Count != 0) {
          result.percentiles_.Add(other.percentiles_);
        }
        if (other.HasMissing) {
          Missing = other.Missing;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_percentilesAggregationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _percentilesAggregationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18:
            case 17: {
              input.ReadDoubleArray(tag, field_name, result.percentiles_);
              break;
            }
            case 26: {
              result.hasMissing = input.ReadBytes(ref result.missing_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<double> PercentilesList {
        get { return PrepareBuilder().percentiles_; }
      }
      public int PercentilesCount {
        get { return result.PercentilesCount; }
      }
      public double GetPercentiles(int index) {
        return result.GetPercentiles(index);
      }
      public Builder SetPercentiles(int index, double value) {
        PrepareBuilder();
        result.percentiles_[index] = value;
        return this;
      }
      public Builder AddPercentiles(double value) {
        PrepareBuilder();
        result.percentiles_.Add(value);
        return this;
      }
      public Builder AddRangePercentiles(scg::IEnumerable<double> values) {
        PrepareBuilder();
        result.percentiles_.Add(values);
        return this;
      }
      public Builder ClearPercentiles() {
        PrepareBuilder();
        result.percentiles_.Clear();
        return this;
      }
      
      public bool HasMissing {
        get { return result.hasMissing; }
      }
      public pb::ByteString Missing {
        get { return result.Missing; }
        set { SetMissing(value); }
      }
      public Builder SetMissing(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissing = true;
        result.missing_ = value;
        return this;
      }
      public Builder ClearMissing() {
        PrepareBuilder();
        result.hasMissing = false;
        result.missing_ = pb::ByteString.Empty;
        return this;
      }
    }
    static PercentilesAggregation() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FieldRange : pb::GeneratedMessage<FieldRange, FieldRange.Builder> {
    private FieldRange() { }
    private static readonly FieldRange defaultInstance = new FieldRange().MakeReadOnly();
    private static readonly string[] _fieldRangeFieldNames = new string[] { "max", "min" };
    private static readonly uint[] _fieldRangeFieldTags = new uint[] { 18, 10 };
    public static FieldRange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FieldRange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FieldRange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldRange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FieldRange, FieldRange.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_FieldRange__FieldAccessorTable; }
    }
    
    public const int MinFieldNumber = 1;
    private bool hasMin;
    private pb::ByteString min_ = pb::ByteString.Empty;
    public bool HasMin {
      get { return hasMin; }
    }
    public pb::ByteString Min {
      get { return min_; }
    }
    
    public const int MaxFieldNumber = 2;
    private bool hasMax;
    private pb::ByteString max_ = pb::ByteString.Empty;
    public bool HasMax {
      get { return hasMax; }
    }
    public pb::ByteString Max {
      get { return max_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fieldRangeFieldNames;
      if (hasMin) {
        output.WriteBytes(1, field_names[1], Min);
      }
      if (hasMax) {
        output.WriteBytes(2, field_names[0], Max);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMin) {
        size += pb::CodedOutputStream.ComputeBytesSize(1, Min);
      }
      if (hasMax) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Max);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FieldRange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldRange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldRange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FieldRange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FieldRange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldRange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FieldRange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FieldRange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FieldRange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FieldRange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FieldRange MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FieldRange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FieldRange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FieldRange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FieldRange result;
      
      private FieldRange PrepareBuilder() {
        if (resultIsReadOnly) {
          FieldRange original = result;
          result = new FieldRange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FieldRange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.Descriptor; }
      }
      
      public override FieldRange DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.DefaultInstance; }
      }
      
      public override FieldRange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FieldRange) {
          return MergeFrom((FieldRange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FieldRange other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMin) {
          Min = other.Min;
        }
        if (other.HasMax) {
          Max = other.Max;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fieldRangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fieldRangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMin = input.ReadBytes(ref result.min_);
              break;
            }
            case 18: {
              result.hasMax = input.ReadBytes(ref result.max_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMin {
        get { return result.hasMin; }
      }
      public pb::ByteString Min {
        get { return result.Min; }
        set { SetMin(value); }
      }
      public Builder SetMin(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMin = true;
        result.min_ = value;
        return this;
      }
      public Builder ClearMin() {
        PrepareBuilder();
        result.hasMin = false;
        result.min_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMax {
        get { return result.hasMax; }
      }
      public pb::ByteString Max {
        get { return result.Max; }
        set { SetMax(value); }
      }
      public Builder SetMax(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMax = true;
        result.max_ = value;
        return this;
      }
      public Builder ClearMax() {
        PrepareBuilder();
        result.hasMax = false;
        result.max_ = pb::ByteString.Empty;
        return this;
      }
    }
    static FieldRange() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByHistogram : pb::GeneratedMessage<GroupByHistogram, GroupByHistogram.Builder> {
    private GroupByHistogram() { }
    private static readonly GroupByHistogram defaultInstance = new GroupByHistogram().MakeReadOnly();
    private static readonly string[] _groupByHistogramFieldNames = new string[] { "field_name", "field_range", "interval", "min_doc_count", "missing", "sort", "sub_aggs", "sub_group_bys" };
    private static readonly uint[] _groupByHistogramFieldTags = new uint[] { 10, 50, 18, 32, 26, 42, 58, 66 };
    public static GroupByHistogram DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByHistogram DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByHistogram ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogram__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByHistogram, GroupByHistogram.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogram__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int IntervalFieldNumber = 2;
    private bool hasInterval;
    private pb::ByteString interval_ = pb::ByteString.Empty;
    public bool HasInterval {
      get { return hasInterval; }
    }
    public pb::ByteString Interval {
      get { return interval_; }
    }
    
    public const int MissingFieldNumber = 3;
    private bool hasMissing;
    private pb::ByteString missing_ = pb::ByteString.Empty;
    public bool HasMissing {
      get { return hasMissing; }
    }
    public pb::ByteString Missing {
      get { return missing_; }
    }
    
    public const int MinDocCountFieldNumber = 4;
    private bool hasMinDocCount;
    private long minDocCount_;
    public bool HasMinDocCount {
      get { return hasMinDocCount; }
    }
    public long MinDocCount {
      get { return minDocCount_; }
    }
    
    public const int SortFieldNumber = 5;
    private bool hasSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort sort_;
    public bool HasSort {
      get { return hasSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort Sort {
      get { return sort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.DefaultInstance; }
    }
    
    public const int FieldRangeFieldNumber = 6;
    private bool hasFieldRange;
    private global::com.alicloud.openservices.tablestore.core.protocol.FieldRange fieldRange_;
    public bool HasFieldRange {
      get { return hasFieldRange; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.FieldRange FieldRange {
      get { return fieldRange_ ?? global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.DefaultInstance; }
    }
    
    public const int SubAggsFieldNumber = 7;
    private bool hasSubAggs;
    private global::com.alicloud.openservices.tablestore.core.protocol.Aggregations subAggs_;
    public bool HasSubAggs {
      get { return hasSubAggs; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
      get { return subAggs_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance; }
    }
    
    public const int SubGroupBysFieldNumber = 8;
    private bool hasSubGroupBys;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBys subGroupBys_;
    public bool HasSubGroupBys {
      get { return hasSubGroupBys; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
      get { return subGroupBys_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByHistogramFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasInterval) {
        output.WriteBytes(2, field_names[2], Interval);
      }
      if (hasMissing) {
        output.WriteBytes(3, field_names[4], Missing);
      }
      if (hasMinDocCount) {
        output.WriteInt64(4, field_names[3], MinDocCount);
      }
      if (hasSort) {
        output.WriteMessage(5, field_names[5], Sort);
      }
      if (hasFieldRange) {
        output.WriteMessage(6, field_names[1], FieldRange);
      }
      if (hasSubAggs) {
        output.WriteMessage(7, field_names[6], SubAggs);
      }
      if (hasSubGroupBys) {
        output.WriteMessage(8, field_names[7], SubGroupBys);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasInterval) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Interval);
      }
      if (hasMissing) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, Missing);
      }
      if (hasMinDocCount) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, MinDocCount);
      }
      if (hasSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, Sort);
      }
      if (hasFieldRange) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, FieldRange);
      }
      if (hasSubAggs) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, SubAggs);
      }
      if (hasSubGroupBys) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, SubGroupBys);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByHistogram ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByHistogram ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogram ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByHistogram ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogram ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByHistogram ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogram ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByHistogram ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByHistogram ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByHistogram ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByHistogram MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByHistogram prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByHistogram, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByHistogram cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByHistogram result;
      
      private GroupByHistogram PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByHistogram original = result;
          result = new GroupByHistogram();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByHistogram MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogram.Descriptor; }
      }
      
      public override GroupByHistogram DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogram.DefaultInstance; }
      }
      
      public override GroupByHistogram BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByHistogram) {
          return MergeFrom((GroupByHistogram) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByHistogram other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogram.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasInterval) {
          Interval = other.Interval;
        }
        if (other.HasMissing) {
          Missing = other.Missing;
        }
        if (other.HasMinDocCount) {
          MinDocCount = other.MinDocCount;
        }
        if (other.HasSort) {
          MergeSort(other.Sort);
        }
        if (other.HasFieldRange) {
          MergeFieldRange(other.FieldRange);
        }
        if (other.HasSubAggs) {
          MergeSubAggs(other.SubAggs);
        }
        if (other.HasSubGroupBys) {
          MergeSubGroupBys(other.SubGroupBys);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByHistogramFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByHistogramFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              result.hasInterval = input.ReadBytes(ref result.interval_);
              break;
            }
            case 26: {
              result.hasMissing = input.ReadBytes(ref result.missing_);
              break;
            }
            case 32: {
              result.hasMinDocCount = input.ReadInt64(ref result.minDocCount_);
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.CreateBuilder();
              if (result.hasSort) {
                subBuilder.MergeFrom(Sort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Sort = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.CreateBuilder();
              if (result.hasFieldRange) {
                subBuilder.MergeFrom(FieldRange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              FieldRange = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder();
              if (result.hasSubAggs) {
                subBuilder.MergeFrom(SubAggs);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggs = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder();
              if (result.hasSubGroupBys) {
                subBuilder.MergeFrom(SubGroupBys);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBys = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasInterval {
        get { return result.hasInterval; }
      }
      public pb::ByteString Interval {
        get { return result.Interval; }
        set { SetInterval(value); }
      }
      public Builder SetInterval(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInterval = true;
        result.interval_ = value;
        return this;
      }
      public Builder ClearInterval() {
        PrepareBuilder();
        result.hasInterval = false;
        result.interval_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMissing {
        get { return result.hasMissing; }
      }
      public pb::ByteString Missing {
        get { return result.Missing; }
        set { SetMissing(value); }
      }
      public Builder SetMissing(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMissing = true;
        result.missing_ = value;
        return this;
      }
      public Builder ClearMissing() {
        PrepareBuilder();
        result.hasMissing = false;
        result.missing_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMinDocCount {
        get { return result.hasMinDocCount; }
      }
      public long MinDocCount {
        get { return result.MinDocCount; }
        set { SetMinDocCount(value); }
      }
      public Builder SetMinDocCount(long value) {
        PrepareBuilder();
        result.hasMinDocCount = true;
        result.minDocCount_ = value;
        return this;
      }
      public Builder ClearMinDocCount() {
        PrepareBuilder();
        result.hasMinDocCount = false;
        result.minDocCount_ = 0L;
        return this;
      }
      
      public bool HasSort {
       get { return result.hasSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort Sort {
        get { return result.Sort; }
        set { SetSort(value); }
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = value;
        return this;
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSort(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSort &&
            result.sort_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.DefaultInstance) {
            result.sort_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.CreateBuilder(result.sort_).MergeFrom(value).BuildPartial();
        } else {
          result.sort_ = value;
        }
        result.hasSort = true;
        return this;
      }
      public Builder ClearSort() {
        PrepareBuilder();
        result.hasSort = false;
        result.sort_ = null;
        return this;
      }
      
      public bool HasFieldRange {
       get { return result.hasFieldRange; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.FieldRange FieldRange {
        get { return result.FieldRange; }
        set { SetFieldRange(value); }
      }
      public Builder SetFieldRange(global::com.alicloud.openservices.tablestore.core.protocol.FieldRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldRange = true;
        result.fieldRange_ = value;
        return this;
      }
      public Builder SetFieldRange(global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFieldRange = true;
        result.fieldRange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFieldRange(global::com.alicloud.openservices.tablestore.core.protocol.FieldRange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFieldRange &&
            result.fieldRange_ != global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.DefaultInstance) {
            result.fieldRange_ = global::com.alicloud.openservices.tablestore.core.protocol.FieldRange.CreateBuilder(result.fieldRange_).MergeFrom(value).BuildPartial();
        } else {
          result.fieldRange_ = value;
        }
        result.hasFieldRange = true;
        return this;
      }
      public Builder ClearFieldRange() {
        PrepareBuilder();
        result.hasFieldRange = false;
        result.fieldRange_ = null;
        return this;
      }
      
      public bool HasSubAggs {
       get { return result.hasSubAggs; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
        get { return result.SubAggs; }
        set { SetSubAggs(value); }
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = value;
        return this;
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggs &&
            result.subAggs_ != global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance) {
            result.subAggs_ = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder(result.subAggs_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggs_ = value;
        }
        result.hasSubAggs = true;
        return this;
      }
      public Builder ClearSubAggs() {
        PrepareBuilder();
        result.hasSubAggs = false;
        result.subAggs_ = null;
        return this;
      }
      
      public bool HasSubGroupBys {
       get { return result.hasSubGroupBys; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
        get { return result.SubGroupBys; }
        set { SetSubGroupBys(value); }
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = value;
        return this;
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBys &&
            result.subGroupBys_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance) {
            result.subGroupBys_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder(result.subGroupBys_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBys_ = value;
        }
        result.hasSubGroupBys = true;
        return this;
      }
      public Builder ClearSubGroupBys() {
        PrepareBuilder();
        result.hasSubGroupBys = false;
        result.subGroupBys_ = null;
        return this;
      }
    }
    static GroupByHistogram() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupKeySort : pb::GeneratedMessage<GroupKeySort, GroupKeySort.Builder> {
    private GroupKeySort() { }
    private static readonly GroupKeySort defaultInstance = new GroupKeySort().MakeReadOnly();
    private static readonly string[] _groupKeySortFieldNames = new string[] { "order" };
    private static readonly uint[] _groupKeySortFieldTags = new uint[] { 8 };
    public static GroupKeySort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupKeySort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupKeySort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupKeySort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupKeySort, GroupKeySort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupKeySort__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupKeySortFieldNames;
      if (hasOrder) {
        output.WriteEnum(1, field_names[0], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupKeySort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupKeySort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupKeySort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupKeySort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupKeySort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupKeySort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupKeySort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupKeySort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupKeySort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupKeySort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupKeySort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupKeySort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupKeySort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupKeySort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupKeySort result;
      
      private GroupKeySort PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupKeySort original = result;
          result = new GroupKeySort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupKeySort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.Descriptor; }
      }
      
      public override GroupKeySort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.DefaultInstance; }
      }
      
      public override GroupKeySort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupKeySort) {
          return MergeFrom((GroupKeySort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupKeySort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupKeySortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupKeySortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
    }
    static GroupKeySort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RowCountSort : pb::GeneratedMessage<RowCountSort, RowCountSort.Builder> {
    private RowCountSort() { }
    private static readonly RowCountSort defaultInstance = new RowCountSort().MakeReadOnly();
    private static readonly string[] _rowCountSortFieldNames = new string[] { "order" };
    private static readonly uint[] _rowCountSortFieldTags = new uint[] { 8 };
    public static RowCountSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RowCountSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RowCountSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowCountSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RowCountSort, RowCountSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_RowCountSort__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rowCountSortFieldNames;
      if (hasOrder) {
        output.WriteEnum(1, field_names[0], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RowCountSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowCountSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowCountSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RowCountSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RowCountSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowCountSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RowCountSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RowCountSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RowCountSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RowCountSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RowCountSort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RowCountSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RowCountSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RowCountSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RowCountSort result;
      
      private RowCountSort PrepareBuilder() {
        if (resultIsReadOnly) {
          RowCountSort original = result;
          result = new RowCountSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RowCountSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.Descriptor; }
      }
      
      public override RowCountSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.DefaultInstance; }
      }
      
      public override RowCountSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RowCountSort) {
          return MergeFrom((RowCountSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RowCountSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rowCountSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rowCountSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
    }
    static RowCountSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SubAggSort : pb::GeneratedMessage<SubAggSort, SubAggSort.Builder> {
    private SubAggSort() { }
    private static readonly SubAggSort defaultInstance = new SubAggSort().MakeReadOnly();
    private static readonly string[] _subAggSortFieldNames = new string[] { "order", "sub_agg_name" };
    private static readonly uint[] _subAggSortFieldTags = new uint[] { 16, 10 };
    public static SubAggSort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubAggSort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubAggSort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SubAggSort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubAggSort, SubAggSort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SubAggSort__FieldAccessorTable; }
    }
    
    public const int SubAggNameFieldNumber = 1;
    private bool hasSubAggName;
    private string subAggName_ = "";
    public bool HasSubAggName {
      get { return hasSubAggName; }
    }
    public string SubAggName {
      get { return subAggName_; }
    }
    
    public const int OrderFieldNumber = 2;
    private bool hasOrder;
    private global::com.alicloud.openservices.tablestore.core.protocol.SortOrder order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _subAggSortFieldNames;
      if (hasSubAggName) {
        output.WriteString(1, field_names[1], SubAggName);
      }
      if (hasOrder) {
        output.WriteEnum(2, field_names[0], (int) Order, Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSubAggName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, SubAggName);
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SubAggSort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubAggSort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubAggSort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubAggSort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubAggSort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubAggSort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubAggSort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubAggSort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubAggSort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubAggSort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubAggSort MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubAggSort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SubAggSort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubAggSort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubAggSort result;
      
      private SubAggSort PrepareBuilder() {
        if (resultIsReadOnly) {
          SubAggSort original = result;
          result = new SubAggSort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubAggSort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.Descriptor; }
      }
      
      public override SubAggSort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.DefaultInstance; }
      }
      
      public override SubAggSort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubAggSort) {
          return MergeFrom((SubAggSort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubAggSort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSubAggName) {
          SubAggName = other.SubAggName;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subAggSortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subAggSortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSubAggName = input.ReadString(ref result.subAggName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.order_, out unknown)) {
                result.hasOrder = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSubAggName {
        get { return result.hasSubAggName; }
      }
      public string SubAggName {
        get { return result.SubAggName; }
        set { SetSubAggName(value); }
      }
      public Builder SetSubAggName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggName = true;
        result.subAggName_ = value;
        return this;
      }
      public Builder ClearSubAggName() {
        PrepareBuilder();
        result.hasSubAggName = false;
        result.subAggName_ = "";
        return this;
      }
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SortOrder Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::com.alicloud.openservices.tablestore.core.protocol.SortOrder value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = global::com.alicloud.openservices.tablestore.core.protocol.SortOrder.SORT_ORDER_ASC;
        return this;
      }
    }
    static SubAggSort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupBySorter : pb::GeneratedMessage<GroupBySorter, GroupBySorter.Builder> {
    private GroupBySorter() { }
    private static readonly GroupBySorter defaultInstance = new GroupBySorter().MakeReadOnly();
    private static readonly string[] _groupBySorterFieldNames = new string[] { "group_key_sort", "row_count_sort", "sub_agg_sort" };
    private static readonly uint[] _groupBySorterFieldTags = new uint[] { 10, 18, 26 };
    public static GroupBySorter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupBySorter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupBySorter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySorter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupBySorter, GroupBySorter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySorter__FieldAccessorTable; }
    }
    
    public const int GroupKeySortFieldNumber = 1;
    private bool hasGroupKeySort;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort groupKeySort_;
    public bool HasGroupKeySort {
      get { return hasGroupKeySort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort GroupKeySort {
      get { return groupKeySort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.DefaultInstance; }
    }
    
    public const int RowCountSortFieldNumber = 2;
    private bool hasRowCountSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort rowCountSort_;
    public bool HasRowCountSort {
      get { return hasRowCountSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort RowCountSort {
      get { return rowCountSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.DefaultInstance; }
    }
    
    public const int SubAggSortFieldNumber = 3;
    private bool hasSubAggSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort subAggSort_;
    public bool HasSubAggSort {
      get { return hasSubAggSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort SubAggSort {
      get { return subAggSort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupBySorterFieldNames;
      if (hasGroupKeySort) {
        output.WriteMessage(1, field_names[0], GroupKeySort);
      }
      if (hasRowCountSort) {
        output.WriteMessage(2, field_names[1], RowCountSort);
      }
      if (hasSubAggSort) {
        output.WriteMessage(3, field_names[2], SubAggSort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGroupKeySort) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, GroupKeySort);
      }
      if (hasRowCountSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, RowCountSort);
      }
      if (hasSubAggSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, SubAggSort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupBySorter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBySorter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBySorter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBySorter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBySorter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBySorter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupBySorter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupBySorter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupBySorter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBySorter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupBySorter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupBySorter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupBySorter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupBySorter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupBySorter result;
      
      private GroupBySorter PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupBySorter original = result;
          result = new GroupBySorter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupBySorter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.Descriptor; }
      }
      
      public override GroupBySorter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.DefaultInstance; }
      }
      
      public override GroupBySorter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupBySorter) {
          return MergeFrom((GroupBySorter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupBySorter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGroupKeySort) {
          MergeGroupKeySort(other.GroupKeySort);
        }
        if (other.HasRowCountSort) {
          MergeRowCountSort(other.RowCountSort);
        }
        if (other.HasSubAggSort) {
          MergeSubAggSort(other.SubAggSort);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupBySorterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupBySorterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.CreateBuilder();
              if (result.hasGroupKeySort) {
                subBuilder.MergeFrom(GroupKeySort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GroupKeySort = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.CreateBuilder();
              if (result.hasRowCountSort) {
                subBuilder.MergeFrom(RowCountSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RowCountSort = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.CreateBuilder();
              if (result.hasSubAggSort) {
                subBuilder.MergeFrom(SubAggSort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggSort = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGroupKeySort {
       get { return result.hasGroupKeySort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort GroupKeySort {
        get { return result.GroupKeySort; }
        set { SetGroupKeySort(value); }
      }
      public Builder SetGroupKeySort(global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroupKeySort = true;
        result.groupKeySort_ = value;
        return this;
      }
      public Builder SetGroupKeySort(global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGroupKeySort = true;
        result.groupKeySort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGroupKeySort(global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGroupKeySort &&
            result.groupKeySort_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.DefaultInstance) {
            result.groupKeySort_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupKeySort.CreateBuilder(result.groupKeySort_).MergeFrom(value).BuildPartial();
        } else {
          result.groupKeySort_ = value;
        }
        result.hasGroupKeySort = true;
        return this;
      }
      public Builder ClearGroupKeySort() {
        PrepareBuilder();
        result.hasGroupKeySort = false;
        result.groupKeySort_ = null;
        return this;
      }
      
      public bool HasRowCountSort {
       get { return result.hasRowCountSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort RowCountSort {
        get { return result.RowCountSort; }
        set { SetRowCountSort(value); }
      }
      public Builder SetRowCountSort(global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRowCountSort = true;
        result.rowCountSort_ = value;
        return this;
      }
      public Builder SetRowCountSort(global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRowCountSort = true;
        result.rowCountSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRowCountSort(global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRowCountSort &&
            result.rowCountSort_ != global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.DefaultInstance) {
            result.rowCountSort_ = global::com.alicloud.openservices.tablestore.core.protocol.RowCountSort.CreateBuilder(result.rowCountSort_).MergeFrom(value).BuildPartial();
        } else {
          result.rowCountSort_ = value;
        }
        result.hasRowCountSort = true;
        return this;
      }
      public Builder ClearRowCountSort() {
        PrepareBuilder();
        result.hasRowCountSort = false;
        result.rowCountSort_ = null;
        return this;
      }
      
      public bool HasSubAggSort {
       get { return result.hasSubAggSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort SubAggSort {
        get { return result.SubAggSort; }
        set { SetSubAggSort(value); }
      }
      public Builder SetSubAggSort(global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggSort = true;
        result.subAggSort_ = value;
        return this;
      }
      public Builder SetSubAggSort(global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggSort = true;
        result.subAggSort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggSort(global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggSort &&
            result.subAggSort_ != global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.DefaultInstance) {
            result.subAggSort_ = global::com.alicloud.openservices.tablestore.core.protocol.SubAggSort.CreateBuilder(result.subAggSort_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggSort_ = value;
        }
        result.hasSubAggSort = true;
        return this;
      }
      public Builder ClearSubAggSort() {
        PrepareBuilder();
        result.hasSubAggSort = false;
        result.subAggSort_ = null;
        return this;
      }
    }
    static GroupBySorter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupBySort : pb::GeneratedMessage<GroupBySort, GroupBySort.Builder> {
    private GroupBySort() { }
    private static readonly GroupBySort defaultInstance = new GroupBySort().MakeReadOnly();
    private static readonly string[] _groupBySortFieldNames = new string[] { "sorters" };
    private static readonly uint[] _groupBySortFieldTags = new uint[] { 10 };
    public static GroupBySort DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupBySort DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupBySort ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySort__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupBySort, GroupBySort.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBySort__FieldAccessorTable; }
    }
    
    public const int SortersFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter> sorters_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter> SortersList {
      get { return sorters_; }
    }
    public int SortersCount {
      get { return sorters_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter GetSorters(int index) {
      return sorters_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupBySortFieldNames;
      if (sorters_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], sorters_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter element in SortersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupBySort ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBySort ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBySort ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBySort ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBySort ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBySort ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupBySort ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupBySort ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupBySort ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBySort ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupBySort MakeReadOnly() {
      sorters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupBySort prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupBySort, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupBySort cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupBySort result;
      
      private GroupBySort PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupBySort original = result;
          result = new GroupBySort();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupBySort MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.Descriptor; }
      }
      
      public override GroupBySort DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.DefaultInstance; }
      }
      
      public override GroupBySort BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupBySort) {
          return MergeFrom((GroupBySort) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupBySort other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.DefaultInstance) return this;
        PrepareBuilder();
        if (other.sorters_.Count != 0) {
          result.sorters_.Add(other.sorters_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupBySortFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupBySortFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.sorters_, global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter> SortersList {
        get { return PrepareBuilder().sorters_; }
      }
      public int SortersCount {
        get { return result.SortersCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter GetSorters(int index) {
        return result.GetSorters(index);
      }
      public Builder SetSorters(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sorters_[index] = value;
        return this;
      }
      public Builder SetSorters(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sorters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSorters(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sorters_.Add(value);
        return this;
      }
      public Builder AddSorters(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sorters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSorters(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupBySorter> values) {
        PrepareBuilder();
        result.sorters_.Add(values);
        return this;
      }
      public Builder ClearSorters() {
        PrepareBuilder();
        result.sorters_.Clear();
        return this;
      }
    }
    static GroupBySort() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByField : pb::GeneratedMessage<GroupByField, GroupByField.Builder> {
    private GroupByField() { }
    private static readonly GroupByField defaultInstance = new GroupByField().MakeReadOnly();
    private static readonly string[] _groupByFieldFieldNames = new string[] { "field_name", "min_doc_count", "size", "sort", "sub_aggs", "sub_group_bys" };
    private static readonly uint[] _groupByFieldFieldTags = new uint[] { 10, 48, 16, 26, 34, 42 };
    public static GroupByField DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByField DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByField ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByField__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByField, GroupByField.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByField__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int SizeFieldNumber = 2;
    private bool hasSize;
    private int size_;
    public bool HasSize {
      get { return hasSize; }
    }
    public int Size {
      get { return size_; }
    }
    
    public const int SortFieldNumber = 3;
    private bool hasSort;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort sort_;
    public bool HasSort {
      get { return hasSort; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort Sort {
      get { return sort_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.DefaultInstance; }
    }
    
    public const int SubAggsFieldNumber = 4;
    private bool hasSubAggs;
    private global::com.alicloud.openservices.tablestore.core.protocol.Aggregations subAggs_;
    public bool HasSubAggs {
      get { return hasSubAggs; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
      get { return subAggs_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance; }
    }
    
    public const int SubGroupBysFieldNumber = 5;
    private bool hasSubGroupBys;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBys subGroupBys_;
    public bool HasSubGroupBys {
      get { return hasSubGroupBys; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
      get { return subGroupBys_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance; }
    }
    
    public const int MinDocCountFieldNumber = 6;
    private bool hasMinDocCount;
    private long minDocCount_;
    public bool HasMinDocCount {
      get { return hasMinDocCount; }
    }
    public long MinDocCount {
      get { return minDocCount_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByFieldFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasSize) {
        output.WriteInt32(2, field_names[2], Size);
      }
      if (hasSort) {
        output.WriteMessage(3, field_names[3], Sort);
      }
      if (hasSubAggs) {
        output.WriteMessage(4, field_names[4], SubAggs);
      }
      if (hasSubGroupBys) {
        output.WriteMessage(5, field_names[5], SubGroupBys);
      }
      if (hasMinDocCount) {
        output.WriteInt64(6, field_names[1], MinDocCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Size);
      }
      if (hasSort) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Sort);
      }
      if (hasSubAggs) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SubAggs);
      }
      if (hasSubGroupBys) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, SubGroupBys);
      }
      if (hasMinDocCount) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, MinDocCount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByField ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByField ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByField ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByField ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByField ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByField ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByField ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByField ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByField ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByField ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByField MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByField prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByField, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByField cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByField result;
      
      private GroupByField PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByField original = result;
          result = new GroupByField();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByField MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByField.Descriptor; }
      }
      
      public override GroupByField DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByField.DefaultInstance; }
      }
      
      public override GroupByField BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByField) {
          return MergeFrom((GroupByField) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByField other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByField.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasSort) {
          MergeSort(other.Sort);
        }
        if (other.HasSubAggs) {
          MergeSubAggs(other.SubAggs);
        }
        if (other.HasSubGroupBys) {
          MergeSubGroupBys(other.SubGroupBys);
        }
        if (other.HasMinDocCount) {
          MinDocCount = other.MinDocCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByFieldFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByFieldFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 16: {
              result.hasSize = input.ReadInt32(ref result.size_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.CreateBuilder();
              if (result.hasSort) {
                subBuilder.MergeFrom(Sort);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Sort = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder();
              if (result.hasSubAggs) {
                subBuilder.MergeFrom(SubAggs);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggs = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder();
              if (result.hasSubGroupBys) {
                subBuilder.MergeFrom(SubGroupBys);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBys = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              result.hasMinDocCount = input.ReadInt64(ref result.minDocCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      public int Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      public Builder SetSize(int value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasSort {
       get { return result.hasSort; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort Sort {
        get { return result.Sort; }
        set { SetSort(value); }
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = value;
        return this;
      }
      public Builder SetSort(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSort = true;
        result.sort_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSort(global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSort &&
            result.sort_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.DefaultInstance) {
            result.sort_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBySort.CreateBuilder(result.sort_).MergeFrom(value).BuildPartial();
        } else {
          result.sort_ = value;
        }
        result.hasSort = true;
        return this;
      }
      public Builder ClearSort() {
        PrepareBuilder();
        result.hasSort = false;
        result.sort_ = null;
        return this;
      }
      
      public bool HasSubAggs {
       get { return result.hasSubAggs; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
        get { return result.SubAggs; }
        set { SetSubAggs(value); }
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = value;
        return this;
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggs &&
            result.subAggs_ != global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance) {
            result.subAggs_ = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder(result.subAggs_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggs_ = value;
        }
        result.hasSubAggs = true;
        return this;
      }
      public Builder ClearSubAggs() {
        PrepareBuilder();
        result.hasSubAggs = false;
        result.subAggs_ = null;
        return this;
      }
      
      public bool HasSubGroupBys {
       get { return result.hasSubGroupBys; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
        get { return result.SubGroupBys; }
        set { SetSubGroupBys(value); }
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = value;
        return this;
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBys &&
            result.subGroupBys_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance) {
            result.subGroupBys_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder(result.subGroupBys_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBys_ = value;
        }
        result.hasSubGroupBys = true;
        return this;
      }
      public Builder ClearSubGroupBys() {
        PrepareBuilder();
        result.hasSubGroupBys = false;
        result.subGroupBys_ = null;
        return this;
      }
      
      public bool HasMinDocCount {
        get { return result.hasMinDocCount; }
      }
      public long MinDocCount {
        get { return result.MinDocCount; }
        set { SetMinDocCount(value); }
      }
      public Builder SetMinDocCount(long value) {
        PrepareBuilder();
        result.hasMinDocCount = true;
        result.minDocCount_ = value;
        return this;
      }
      public Builder ClearMinDocCount() {
        PrepareBuilder();
        result.hasMinDocCount = false;
        result.minDocCount_ = 0L;
        return this;
      }
    }
    static GroupByField() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Range : pb::GeneratedMessage<Range, Range.Builder> {
    private Range() { }
    private static readonly Range defaultInstance = new Range().MakeReadOnly();
    private static readonly string[] _rangeFieldNames = new string[] { "from", "to" };
    private static readonly uint[] _rangeFieldTags = new uint[] { 9, 17 };
    public static Range DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Range DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Range ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Range__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Range, Range.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_Range__FieldAccessorTable; }
    }
    
    public const int FromFieldNumber = 1;
    private bool hasFrom;
    private double from_;
    public bool HasFrom {
      get { return hasFrom; }
    }
    public double From {
      get { return from_; }
    }
    
    public const int ToFieldNumber = 2;
    private bool hasTo;
    private double to_;
    public bool HasTo {
      get { return hasTo; }
    }
    public double To {
      get { return to_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _rangeFieldNames;
      if (hasFrom) {
        output.WriteDouble(1, field_names[0], From);
      }
      if (hasTo) {
        output.WriteDouble(2, field_names[1], To);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFrom) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, From);
      }
      if (hasTo) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, To);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Range ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Range ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Range ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Range ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Range ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Range ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Range ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Range ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Range ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Range ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Range MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Range prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Range, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Range cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Range result;
      
      private Range PrepareBuilder() {
        if (resultIsReadOnly) {
          Range original = result;
          result = new Range();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Range MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Range.Descriptor; }
      }
      
      public override Range DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.Range.DefaultInstance; }
      }
      
      public override Range BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Range) {
          return MergeFrom((Range) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Range other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.Range.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFrom) {
          From = other.From;
        }
        if (other.HasTo) {
          To = other.To;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_rangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _rangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFrom = input.ReadDouble(ref result.from_);
              break;
            }
            case 17: {
              result.hasTo = input.ReadDouble(ref result.to_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFrom {
        get { return result.hasFrom; }
      }
      public double From {
        get { return result.From; }
        set { SetFrom(value); }
      }
      public Builder SetFrom(double value) {
        PrepareBuilder();
        result.hasFrom = true;
        result.from_ = value;
        return this;
      }
      public Builder ClearFrom() {
        PrepareBuilder();
        result.hasFrom = false;
        result.from_ = 0D;
        return this;
      }
      
      public bool HasTo {
        get { return result.hasTo; }
      }
      public double To {
        get { return result.To; }
        set { SetTo(value); }
      }
      public Builder SetTo(double value) {
        PrepareBuilder();
        result.hasTo = true;
        result.to_ = value;
        return this;
      }
      public Builder ClearTo() {
        PrepareBuilder();
        result.hasTo = false;
        result.to_ = 0D;
        return this;
      }
    }
    static Range() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByRange : pb::GeneratedMessage<GroupByRange, GroupByRange.Builder> {
    private GroupByRange() { }
    private static readonly GroupByRange defaultInstance = new GroupByRange().MakeReadOnly();
    private static readonly string[] _groupByRangeFieldNames = new string[] { "field_name", "ranges", "sub_aggs", "sub_group_bys" };
    private static readonly uint[] _groupByRangeFieldTags = new uint[] { 10, 18, 26, 34 };
    public static GroupByRange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByRange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByRange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByRange, GroupByRange.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRange__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int RangesFieldNumber = 2;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Range> ranges_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Range>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Range> RangesList {
      get { return ranges_; }
    }
    public int RangesCount {
      get { return ranges_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Range GetRanges(int index) {
      return ranges_[index];
    }
    
    public const int SubAggsFieldNumber = 3;
    private bool hasSubAggs;
    private global::com.alicloud.openservices.tablestore.core.protocol.Aggregations subAggs_;
    public bool HasSubAggs {
      get { return hasSubAggs; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
      get { return subAggs_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance; }
    }
    
    public const int SubGroupBysFieldNumber = 4;
    private bool hasSubGroupBys;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBys subGroupBys_;
    public bool HasSubGroupBys {
      get { return hasSubGroupBys; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
      get { return subGroupBys_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByRangeFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (ranges_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], ranges_);
      }
      if (hasSubAggs) {
        output.WriteMessage(3, field_names[2], SubAggs);
      }
      if (hasSubGroupBys) {
        output.WriteMessage(4, field_names[3], SubGroupBys);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Range element in RangesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasSubAggs) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, SubAggs);
      }
      if (hasSubGroupBys) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SubGroupBys);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByRange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByRange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByRange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByRange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByRange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByRange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByRange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByRange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByRange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByRange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByRange MakeReadOnly() {
      ranges_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByRange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByRange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByRange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByRange result;
      
      private GroupByRange PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByRange original = result;
          result = new GroupByRange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByRange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByRange.Descriptor; }
      }
      
      public override GroupByRange DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByRange.DefaultInstance; }
      }
      
      public override GroupByRange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByRange) {
          return MergeFrom((GroupByRange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByRange other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByRange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.ranges_.Count != 0) {
          result.ranges_.Add(other.ranges_);
        }
        if (other.HasSubAggs) {
          MergeSubAggs(other.SubAggs);
        }
        if (other.HasSubGroupBys) {
          MergeSubGroupBys(other.SubGroupBys);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByRangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByRangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.ranges_, global::com.alicloud.openservices.tablestore.core.protocol.Range.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder();
              if (result.hasSubAggs) {
                subBuilder.MergeFrom(SubAggs);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggs = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder();
              if (result.hasSubGroupBys) {
                subBuilder.MergeFrom(SubGroupBys);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBys = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Range> RangesList {
        get { return PrepareBuilder().ranges_; }
      }
      public int RangesCount {
        get { return result.RangesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Range GetRanges(int index) {
        return result.GetRanges(index);
      }
      public Builder SetRanges(int index, global::com.alicloud.openservices.tablestore.core.protocol.Range value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ranges_[index] = value;
        return this;
      }
      public Builder SetRanges(int index, global::com.alicloud.openservices.tablestore.core.protocol.Range.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ranges_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRanges(global::com.alicloud.openservices.tablestore.core.protocol.Range value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ranges_.Add(value);
        return this;
      }
      public Builder AddRanges(global::com.alicloud.openservices.tablestore.core.protocol.Range.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ranges_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRanges(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Range> values) {
        PrepareBuilder();
        result.ranges_.Add(values);
        return this;
      }
      public Builder ClearRanges() {
        PrepareBuilder();
        result.ranges_.Clear();
        return this;
      }
      
      public bool HasSubAggs {
       get { return result.hasSubAggs; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
        get { return result.SubAggs; }
        set { SetSubAggs(value); }
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = value;
        return this;
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggs &&
            result.subAggs_ != global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance) {
            result.subAggs_ = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder(result.subAggs_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggs_ = value;
        }
        result.hasSubAggs = true;
        return this;
      }
      public Builder ClearSubAggs() {
        PrepareBuilder();
        result.hasSubAggs = false;
        result.subAggs_ = null;
        return this;
      }
      
      public bool HasSubGroupBys {
       get { return result.hasSubGroupBys; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
        get { return result.SubGroupBys; }
        set { SetSubGroupBys(value); }
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = value;
        return this;
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBys &&
            result.subGroupBys_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance) {
            result.subGroupBys_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder(result.subGroupBys_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBys_ = value;
        }
        result.hasSubGroupBys = true;
        return this;
      }
      public Builder ClearSubGroupBys() {
        PrepareBuilder();
        result.hasSubGroupBys = false;
        result.subGroupBys_ = null;
        return this;
      }
    }
    static GroupByRange() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByFilter : pb::GeneratedMessage<GroupByFilter, GroupByFilter.Builder> {
    private GroupByFilter() { }
    private static readonly GroupByFilter defaultInstance = new GroupByFilter().MakeReadOnly();
    private static readonly string[] _groupByFilterFieldNames = new string[] { "filters", "sub_aggs", "sub_group_bys" };
    private static readonly uint[] _groupByFilterFieldTags = new uint[] { 10, 18, 26 };
    public static GroupByFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByFilter, GroupByFilter.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilter__FieldAccessorTable; }
    }
    
    public const int FiltersFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> filters_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Query> FiltersList {
      get { return filters_; }
    }
    public int FiltersCount {
      get { return filters_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Query GetFilters(int index) {
      return filters_[index];
    }
    
    public const int SubAggsFieldNumber = 2;
    private bool hasSubAggs;
    private global::com.alicloud.openservices.tablestore.core.protocol.Aggregations subAggs_;
    public bool HasSubAggs {
      get { return hasSubAggs; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
      get { return subAggs_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance; }
    }
    
    public const int SubGroupBysFieldNumber = 3;
    private bool hasSubGroupBys;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBys subGroupBys_;
    public bool HasSubGroupBys {
      get { return hasSubGroupBys; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
      get { return subGroupBys_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByFilterFieldNames;
      if (filters_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], filters_);
      }
      if (hasSubAggs) {
        output.WriteMessage(2, field_names[1], SubAggs);
      }
      if (hasSubGroupBys) {
        output.WriteMessage(3, field_names[2], SubGroupBys);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Query element in FiltersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasSubAggs) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SubAggs);
      }
      if (hasSubGroupBys) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, SubGroupBys);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByFilter MakeReadOnly() {
      filters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByFilter result;
      
      private GroupByFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByFilter original = result;
          result = new GroupByFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilter.Descriptor; }
      }
      
      public override GroupByFilter DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilter.DefaultInstance; }
      }
      
      public override GroupByFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByFilter) {
          return MergeFrom((GroupByFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByFilter other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.filters_.Count != 0) {
          result.filters_.Add(other.filters_);
        }
        if (other.HasSubAggs) {
          MergeSubAggs(other.SubAggs);
        }
        if (other.HasSubGroupBys) {
          MergeSubGroupBys(other.SubGroupBys);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.filters_, global::com.alicloud.openservices.tablestore.core.protocol.Query.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder();
              if (result.hasSubAggs) {
                subBuilder.MergeFrom(SubAggs);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggs = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder();
              if (result.hasSubGroupBys) {
                subBuilder.MergeFrom(SubGroupBys);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBys = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Query> FiltersList {
        get { return PrepareBuilder().filters_; }
      }
      public int FiltersCount {
        get { return result.FiltersCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Query GetFilters(int index) {
        return result.GetFilters(index);
      }
      public Builder SetFilters(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filters_[index] = value;
        return this;
      }
      public Builder SetFilters(int index, global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFilters(global::com.alicloud.openservices.tablestore.core.protocol.Query value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filters_.Add(value);
        return this;
      }
      public Builder AddFilters(global::com.alicloud.openservices.tablestore.core.protocol.Query.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFilters(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Query> values) {
        PrepareBuilder();
        result.filters_.Add(values);
        return this;
      }
      public Builder ClearFilters() {
        PrepareBuilder();
        result.filters_.Clear();
        return this;
      }
      
      public bool HasSubAggs {
       get { return result.hasSubAggs; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
        get { return result.SubAggs; }
        set { SetSubAggs(value); }
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = value;
        return this;
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggs &&
            result.subAggs_ != global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance) {
            result.subAggs_ = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder(result.subAggs_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggs_ = value;
        }
        result.hasSubAggs = true;
        return this;
      }
      public Builder ClearSubAggs() {
        PrepareBuilder();
        result.hasSubAggs = false;
        result.subAggs_ = null;
        return this;
      }
      
      public bool HasSubGroupBys {
       get { return result.hasSubGroupBys; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
        get { return result.SubGroupBys; }
        set { SetSubGroupBys(value); }
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = value;
        return this;
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBys &&
            result.subGroupBys_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance) {
            result.subGroupBys_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder(result.subGroupBys_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBys_ = value;
        }
        result.hasSubGroupBys = true;
        return this;
      }
      public Builder ClearSubGroupBys() {
        PrepareBuilder();
        result.hasSubGroupBys = false;
        result.subGroupBys_ = null;
        return this;
      }
    }
    static GroupByFilter() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByGeoDistance : pb::GeneratedMessage<GroupByGeoDistance, GroupByGeoDistance.Builder> {
    private GroupByGeoDistance() { }
    private static readonly GroupByGeoDistance defaultInstance = new GroupByGeoDistance().MakeReadOnly();
    private static readonly string[] _groupByGeoDistanceFieldNames = new string[] { "field_name", "origin", "ranges", "sub_aggs", "sub_group_bys" };
    private static readonly uint[] _groupByGeoDistanceFieldTags = new uint[] { 10, 18, 26, 34, 42 };
    public static GroupByGeoDistance DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByGeoDistance DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByGeoDistance ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistance__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByGeoDistance, GroupByGeoDistance.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistance__FieldAccessorTable; }
    }
    
    public const int FieldNameFieldNumber = 1;
    private bool hasFieldName;
    private string fieldName_ = "";
    public bool HasFieldName {
      get { return hasFieldName; }
    }
    public string FieldName {
      get { return fieldName_; }
    }
    
    public const int OriginFieldNumber = 2;
    private bool hasOrigin;
    private global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint origin_;
    public bool HasOrigin {
      get { return hasOrigin; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint Origin {
      get { return origin_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.DefaultInstance; }
    }
    
    public const int RangesFieldNumber = 3;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Range> ranges_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Range>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.Range> RangesList {
      get { return ranges_; }
    }
    public int RangesCount {
      get { return ranges_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Range GetRanges(int index) {
      return ranges_[index];
    }
    
    public const int SubAggsFieldNumber = 4;
    private bool hasSubAggs;
    private global::com.alicloud.openservices.tablestore.core.protocol.Aggregations subAggs_;
    public bool HasSubAggs {
      get { return hasSubAggs; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
      get { return subAggs_ ?? global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance; }
    }
    
    public const int SubGroupBysFieldNumber = 5;
    private bool hasSubGroupBys;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBys subGroupBys_;
    public bool HasSubGroupBys {
      get { return hasSubGroupBys; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
      get { return subGroupBys_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByGeoDistanceFieldNames;
      if (hasFieldName) {
        output.WriteString(1, field_names[0], FieldName);
      }
      if (hasOrigin) {
        output.WriteMessage(2, field_names[1], Origin);
      }
      if (ranges_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], ranges_);
      }
      if (hasSubAggs) {
        output.WriteMessage(4, field_names[3], SubAggs);
      }
      if (hasSubGroupBys) {
        output.WriteMessage(5, field_names[4], SubGroupBys);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFieldName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FieldName);
      }
      if (hasOrigin) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Origin);
      }
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.Range element in RangesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasSubAggs) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SubAggs);
      }
      if (hasSubGroupBys) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, SubGroupBys);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByGeoDistance ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByGeoDistance ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistance ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByGeoDistance ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistance ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByGeoDistance ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistance ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByGeoDistance ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByGeoDistance ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByGeoDistance ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByGeoDistance MakeReadOnly() {
      ranges_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByGeoDistance prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByGeoDistance, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByGeoDistance cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByGeoDistance result;
      
      private GroupByGeoDistance PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByGeoDistance original = result;
          result = new GroupByGeoDistance();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByGeoDistance MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistance.Descriptor; }
      }
      
      public override GroupByGeoDistance DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistance.DefaultInstance; }
      }
      
      public override GroupByGeoDistance BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByGeoDistance) {
          return MergeFrom((GroupByGeoDistance) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByGeoDistance other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistance.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFieldName) {
          FieldName = other.FieldName;
        }
        if (other.HasOrigin) {
          MergeOrigin(other.Origin);
        }
        if (other.ranges_.Count != 0) {
          result.ranges_.Add(other.ranges_);
        }
        if (other.HasSubAggs) {
          MergeSubAggs(other.SubAggs);
        }
        if (other.HasSubGroupBys) {
          MergeSubGroupBys(other.SubGroupBys);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByGeoDistanceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByGeoDistanceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFieldName = input.ReadString(ref result.fieldName_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.CreateBuilder();
              if (result.hasOrigin) {
                subBuilder.MergeFrom(Origin);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Origin = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.ranges_, global::com.alicloud.openservices.tablestore.core.protocol.Range.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder();
              if (result.hasSubAggs) {
                subBuilder.MergeFrom(SubAggs);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggs = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder();
              if (result.hasSubGroupBys) {
                subBuilder.MergeFrom(SubGroupBys);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBys = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFieldName {
        get { return result.hasFieldName; }
      }
      public string FieldName {
        get { return result.FieldName; }
        set { SetFieldName(value); }
      }
      public Builder SetFieldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFieldName = true;
        result.fieldName_ = value;
        return this;
      }
      public Builder ClearFieldName() {
        PrepareBuilder();
        result.hasFieldName = false;
        result.fieldName_ = "";
        return this;
      }
      
      public bool HasOrigin {
       get { return result.hasOrigin; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint Origin {
        get { return result.Origin; }
        set { SetOrigin(value); }
      }
      public Builder SetOrigin(global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrigin = true;
        result.origin_ = value;
        return this;
      }
      public Builder SetOrigin(global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrigin = true;
        result.origin_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrigin(global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrigin &&
            result.origin_ != global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.DefaultInstance) {
            result.origin_ = global::com.alicloud.openservices.tablestore.core.protocol.GeoPoint.CreateBuilder(result.origin_).MergeFrom(value).BuildPartial();
        } else {
          result.origin_ = value;
        }
        result.hasOrigin = true;
        return this;
      }
      public Builder ClearOrigin() {
        PrepareBuilder();
        result.hasOrigin = false;
        result.origin_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.Range> RangesList {
        get { return PrepareBuilder().ranges_; }
      }
      public int RangesCount {
        get { return result.RangesCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Range GetRanges(int index) {
        return result.GetRanges(index);
      }
      public Builder SetRanges(int index, global::com.alicloud.openservices.tablestore.core.protocol.Range value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ranges_[index] = value;
        return this;
      }
      public Builder SetRanges(int index, global::com.alicloud.openservices.tablestore.core.protocol.Range.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ranges_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRanges(global::com.alicloud.openservices.tablestore.core.protocol.Range value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ranges_.Add(value);
        return this;
      }
      public Builder AddRanges(global::com.alicloud.openservices.tablestore.core.protocol.Range.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ranges_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRanges(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.Range> values) {
        PrepareBuilder();
        result.ranges_.Add(values);
        return this;
      }
      public Builder ClearRanges() {
        PrepareBuilder();
        result.ranges_.Clear();
        return this;
      }
      
      public bool HasSubAggs {
       get { return result.hasSubAggs; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.Aggregations SubAggs {
        get { return result.SubAggs; }
        set { SetSubAggs(value); }
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = value;
        return this;
      }
      public Builder SetSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggs = true;
        result.subAggs_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggs(global::com.alicloud.openservices.tablestore.core.protocol.Aggregations value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggs &&
            result.subAggs_ != global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.DefaultInstance) {
            result.subAggs_ = global::com.alicloud.openservices.tablestore.core.protocol.Aggregations.CreateBuilder(result.subAggs_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggs_ = value;
        }
        result.hasSubAggs = true;
        return this;
      }
      public Builder ClearSubAggs() {
        PrepareBuilder();
        result.hasSubAggs = false;
        result.subAggs_ = null;
        return this;
      }
      
      public bool HasSubGroupBys {
       get { return result.hasSubGroupBys; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBys SubGroupBys {
        get { return result.SubGroupBys; }
        set { SetSubGroupBys(value); }
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = value;
        return this;
      }
      public Builder SetSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBys = true;
        result.subGroupBys_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBys(global::com.alicloud.openservices.tablestore.core.protocol.GroupBys value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBys &&
            result.subGroupBys_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.DefaultInstance) {
            result.subGroupBys_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBys.CreateBuilder(result.subGroupBys_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBys_ = value;
        }
        result.hasSubGroupBys = true;
        return this;
      }
      public Builder ClearSubGroupBys() {
        PrepareBuilder();
        result.hasSubGroupBys = false;
        result.subGroupBys_ = null;
        return this;
      }
    }
    static GroupByGeoDistance() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AvgAggregationResult : pb::GeneratedMessage<AvgAggregationResult, AvgAggregationResult.Builder> {
    private AvgAggregationResult() { }
    private static readonly AvgAggregationResult defaultInstance = new AvgAggregationResult().MakeReadOnly();
    private static readonly string[] _avgAggregationResultFieldNames = new string[] { "value" };
    private static readonly uint[] _avgAggregationResultFieldTags = new uint[] { 9 };
    public static AvgAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AvgAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AvgAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AvgAggregationResult, AvgAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AvgAggregationResult__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private double value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public double Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _avgAggregationResultFieldNames;
      if (hasValue) {
        output.WriteDouble(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AvgAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AvgAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AvgAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AvgAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AvgAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AvgAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AvgAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AvgAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AvgAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AvgAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AvgAggregationResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AvgAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AvgAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AvgAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AvgAggregationResult result;
      
      private AvgAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AvgAggregationResult original = result;
          result = new AvgAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AvgAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregationResult.Descriptor; }
      }
      
      public override AvgAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregationResult.DefaultInstance; }
      }
      
      public override AvgAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AvgAggregationResult) {
          return MergeFrom((AvgAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AvgAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.AvgAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_avgAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _avgAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasValue = input.ReadDouble(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public double Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(double value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
    }
    static AvgAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TopRowsAggregationResult : pb::GeneratedMessage<TopRowsAggregationResult, TopRowsAggregationResult.Builder> {
    private TopRowsAggregationResult() { }
    private static readonly TopRowsAggregationResult defaultInstance = new TopRowsAggregationResult().MakeReadOnly();
    private static readonly string[] _topRowsAggregationResultFieldNames = new string[] { "rows" };
    private static readonly uint[] _topRowsAggregationResultFieldTags = new uint[] { 10 };
    public static TopRowsAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TopRowsAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TopRowsAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TopRowsAggregationResult, TopRowsAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_TopRowsAggregationResult__FieldAccessorTable; }
    }
    
    public const int RowsFieldNumber = 1;
    private pbc::PopsicleList<pb::ByteString> rows_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> RowsList {
      get { return pbc::Lists.AsReadOnly(rows_); }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public pb::ByteString GetRows(int index) {
      return rows_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _topRowsAggregationResultFieldNames;
      if (rows_.Count > 0) {
        output.WriteBytesArray(1, field_names[0], rows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (pb::ByteString element in RowsList) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * rows_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TopRowsAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TopRowsAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TopRowsAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TopRowsAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TopRowsAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TopRowsAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TopRowsAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TopRowsAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TopRowsAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TopRowsAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TopRowsAggregationResult MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TopRowsAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TopRowsAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TopRowsAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TopRowsAggregationResult result;
      
      private TopRowsAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          TopRowsAggregationResult original = result;
          result = new TopRowsAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TopRowsAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregationResult.Descriptor; }
      }
      
      public override TopRowsAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregationResult.DefaultInstance; }
      }
      
      public override TopRowsAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TopRowsAggregationResult) {
          return MergeFrom((TopRowsAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TopRowsAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.TopRowsAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_topRowsAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _topRowsAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadBytesArray(tag, field_name, result.rows_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<pb::ByteString> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public pb::ByteString GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder AddRows(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
    }
    static TopRowsAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PercentilesAggregationItem : pb::GeneratedMessage<PercentilesAggregationItem, PercentilesAggregationItem.Builder> {
    private PercentilesAggregationItem() { }
    private static readonly PercentilesAggregationItem defaultInstance = new PercentilesAggregationItem().MakeReadOnly();
    private static readonly string[] _percentilesAggregationItemFieldNames = new string[] { "key", "value" };
    private static readonly uint[] _percentilesAggregationItemFieldTags = new uint[] { 9, 18 };
    public static PercentilesAggregationItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PercentilesAggregationItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PercentilesAggregationItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PercentilesAggregationItem, PercentilesAggregationItem.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationItem__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private double key_;
    public bool HasKey {
      get { return hasKey; }
    }
    public double Key {
      get { return key_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private pb::ByteString value_ = pb::ByteString.Empty;
    public bool HasValue {
      get { return hasValue; }
    }
    public pb::ByteString Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _percentilesAggregationItemFieldNames;
      if (hasKey) {
        output.WriteDouble(1, field_names[0], Key);
      }
      if (hasValue) {
        output.WriteBytes(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKey) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, Key);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PercentilesAggregationItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PercentilesAggregationItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregationItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PercentilesAggregationItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregationItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PercentilesAggregationItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregationItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PercentilesAggregationItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PercentilesAggregationItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PercentilesAggregationItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PercentilesAggregationItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PercentilesAggregationItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PercentilesAggregationItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PercentilesAggregationItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PercentilesAggregationItem result;
      
      private PercentilesAggregationItem PrepareBuilder() {
        if (resultIsReadOnly) {
          PercentilesAggregationItem original = result;
          result = new PercentilesAggregationItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PercentilesAggregationItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.Descriptor; }
      }
      
      public override PercentilesAggregationItem DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.DefaultInstance; }
      }
      
      public override PercentilesAggregationItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PercentilesAggregationItem) {
          return MergeFrom((PercentilesAggregationItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PercentilesAggregationItem other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_percentilesAggregationItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _percentilesAggregationItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasKey = input.ReadDouble(ref result.key_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadBytes(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public double Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(double value) {
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = 0D;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public pb::ByteString Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = pb::ByteString.Empty;
        return this;
      }
    }
    static PercentilesAggregationItem() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PercentilesAggregationResult : pb::GeneratedMessage<PercentilesAggregationResult, PercentilesAggregationResult.Builder> {
    private PercentilesAggregationResult() { }
    private static readonly PercentilesAggregationResult defaultInstance = new PercentilesAggregationResult().MakeReadOnly();
    private static readonly string[] _percentilesAggregationResultFieldNames = new string[] { "percentiles_aggregation_items" };
    private static readonly uint[] _percentilesAggregationResultFieldTags = new uint[] { 10 };
    public static PercentilesAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PercentilesAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PercentilesAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PercentilesAggregationResult, PercentilesAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_PercentilesAggregationResult__FieldAccessorTable; }
    }
    
    public const int PercentilesAggregationItemsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem> percentilesAggregationItems_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem> PercentilesAggregationItemsList {
      get { return percentilesAggregationItems_; }
    }
    public int PercentilesAggregationItemsCount {
      get { return percentilesAggregationItems_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem GetPercentilesAggregationItems(int index) {
      return percentilesAggregationItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _percentilesAggregationResultFieldNames;
      if (percentilesAggregationItems_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], percentilesAggregationItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem element in PercentilesAggregationItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PercentilesAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PercentilesAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PercentilesAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PercentilesAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PercentilesAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PercentilesAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PercentilesAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PercentilesAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PercentilesAggregationResult MakeReadOnly() {
      percentilesAggregationItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PercentilesAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PercentilesAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PercentilesAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PercentilesAggregationResult result;
      
      private PercentilesAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          PercentilesAggregationResult original = result;
          result = new PercentilesAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PercentilesAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationResult.Descriptor; }
      }
      
      public override PercentilesAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationResult.DefaultInstance; }
      }
      
      public override PercentilesAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PercentilesAggregationResult) {
          return MergeFrom((PercentilesAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PercentilesAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.percentilesAggregationItems_.Count != 0) {
          result.percentilesAggregationItems_.Add(other.percentilesAggregationItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_percentilesAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _percentilesAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.percentilesAggregationItems_, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem> PercentilesAggregationItemsList {
        get { return PrepareBuilder().percentilesAggregationItems_; }
      }
      public int PercentilesAggregationItemsCount {
        get { return result.PercentilesAggregationItemsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem GetPercentilesAggregationItems(int index) {
        return result.GetPercentilesAggregationItems(index);
      }
      public Builder SetPercentilesAggregationItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.percentilesAggregationItems_[index] = value;
        return this;
      }
      public Builder SetPercentilesAggregationItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.percentilesAggregationItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPercentilesAggregationItems(global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.percentilesAggregationItems_.Add(value);
        return this;
      }
      public Builder AddPercentilesAggregationItems(global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.percentilesAggregationItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePercentilesAggregationItems(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.PercentilesAggregationItem> values) {
        PrepareBuilder();
        result.percentilesAggregationItems_.Add(values);
        return this;
      }
      public Builder ClearPercentilesAggregationItems() {
        PrepareBuilder();
        result.percentilesAggregationItems_.Clear();
        return this;
      }
    }
    static PercentilesAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DistinctCountAggregationResult : pb::GeneratedMessage<DistinctCountAggregationResult, DistinctCountAggregationResult.Builder> {
    private DistinctCountAggregationResult() { }
    private static readonly DistinctCountAggregationResult defaultInstance = new DistinctCountAggregationResult().MakeReadOnly();
    private static readonly string[] _distinctCountAggregationResultFieldNames = new string[] { "value" };
    private static readonly uint[] _distinctCountAggregationResultFieldTags = new uint[] { 8 };
    public static DistinctCountAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DistinctCountAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DistinctCountAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DistinctCountAggregationResult, DistinctCountAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_DistinctCountAggregationResult__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private long value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public long Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _distinctCountAggregationResultFieldNames;
      if (hasValue) {
        output.WriteInt64(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DistinctCountAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DistinctCountAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DistinctCountAggregationResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DistinctCountAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DistinctCountAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DistinctCountAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DistinctCountAggregationResult result;
      
      private DistinctCountAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          DistinctCountAggregationResult original = result;
          result = new DistinctCountAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DistinctCountAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregationResult.Descriptor; }
      }
      
      public override DistinctCountAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregationResult.DefaultInstance; }
      }
      
      public override DistinctCountAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DistinctCountAggregationResult) {
          return MergeFrom((DistinctCountAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DistinctCountAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.DistinctCountAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_distinctCountAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _distinctCountAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasValue = input.ReadInt64(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public long Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(long value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
    }
    static DistinctCountAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MaxAggregationResult : pb::GeneratedMessage<MaxAggregationResult, MaxAggregationResult.Builder> {
    private MaxAggregationResult() { }
    private static readonly MaxAggregationResult defaultInstance = new MaxAggregationResult().MakeReadOnly();
    private static readonly string[] _maxAggregationResultFieldNames = new string[] { "value" };
    private static readonly uint[] _maxAggregationResultFieldTags = new uint[] { 9 };
    public static MaxAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MaxAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MaxAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MaxAggregationResult, MaxAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MaxAggregationResult__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private double value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public double Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _maxAggregationResultFieldNames;
      if (hasValue) {
        output.WriteDouble(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MaxAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MaxAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MaxAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MaxAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MaxAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MaxAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MaxAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MaxAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MaxAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MaxAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MaxAggregationResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MaxAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MaxAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MaxAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MaxAggregationResult result;
      
      private MaxAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          MaxAggregationResult original = result;
          result = new MaxAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MaxAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregationResult.Descriptor; }
      }
      
      public override MaxAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregationResult.DefaultInstance; }
      }
      
      public override MaxAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MaxAggregationResult) {
          return MergeFrom((MaxAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MaxAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MaxAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_maxAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _maxAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasValue = input.ReadDouble(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public double Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(double value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
    }
    static MaxAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MinAggregationResult : pb::GeneratedMessage<MinAggregationResult, MinAggregationResult.Builder> {
    private MinAggregationResult() { }
    private static readonly MinAggregationResult defaultInstance = new MinAggregationResult().MakeReadOnly();
    private static readonly string[] _minAggregationResultFieldNames = new string[] { "value" };
    private static readonly uint[] _minAggregationResultFieldTags = new uint[] { 9 };
    public static MinAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MinAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MinAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MinAggregationResult, MinAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_MinAggregationResult__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private double value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public double Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _minAggregationResultFieldNames;
      if (hasValue) {
        output.WriteDouble(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MinAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MinAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MinAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MinAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MinAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MinAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MinAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MinAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MinAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MinAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MinAggregationResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MinAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MinAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MinAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MinAggregationResult result;
      
      private MinAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          MinAggregationResult original = result;
          result = new MinAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MinAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MinAggregationResult.Descriptor; }
      }
      
      public override MinAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.MinAggregationResult.DefaultInstance; }
      }
      
      public override MinAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MinAggregationResult) {
          return MergeFrom((MinAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MinAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.MinAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_minAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _minAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasValue = input.ReadDouble(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public double Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(double value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
    }
    static MinAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SumAggregationResult : pb::GeneratedMessage<SumAggregationResult, SumAggregationResult.Builder> {
    private SumAggregationResult() { }
    private static readonly SumAggregationResult defaultInstance = new SumAggregationResult().MakeReadOnly();
    private static readonly string[] _sumAggregationResultFieldNames = new string[] { "value" };
    private static readonly uint[] _sumAggregationResultFieldTags = new uint[] { 9 };
    public static SumAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SumAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SumAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SumAggregationResult, SumAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_SumAggregationResult__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private double value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public double Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sumAggregationResultFieldNames;
      if (hasValue) {
        output.WriteDouble(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SumAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SumAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SumAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SumAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SumAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SumAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SumAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SumAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SumAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SumAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SumAggregationResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SumAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SumAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SumAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SumAggregationResult result;
      
      private SumAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          SumAggregationResult original = result;
          result = new SumAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SumAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SumAggregationResult.Descriptor; }
      }
      
      public override SumAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.SumAggregationResult.DefaultInstance; }
      }
      
      public override SumAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SumAggregationResult) {
          return MergeFrom((SumAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SumAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.SumAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sumAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sumAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasValue = input.ReadDouble(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public double Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(double value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
    }
    static SumAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CountAggregationResult : pb::GeneratedMessage<CountAggregationResult, CountAggregationResult.Builder> {
    private CountAggregationResult() { }
    private static readonly CountAggregationResult defaultInstance = new CountAggregationResult().MakeReadOnly();
    private static readonly string[] _countAggregationResultFieldNames = new string[] { "value" };
    private static readonly uint[] _countAggregationResultFieldTags = new uint[] { 8 };
    public static CountAggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CountAggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CountAggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CountAggregationResult, CountAggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_CountAggregationResult__FieldAccessorTable; }
    }
    
    public const int ValueFieldNumber = 1;
    private bool hasValue;
    private long value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public long Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _countAggregationResultFieldNames;
      if (hasValue) {
        output.WriteInt64(1, field_names[0], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CountAggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CountAggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CountAggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CountAggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CountAggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CountAggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CountAggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CountAggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CountAggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CountAggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CountAggregationResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CountAggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CountAggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CountAggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CountAggregationResult result;
      
      private CountAggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CountAggregationResult original = result;
          result = new CountAggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CountAggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CountAggregationResult.Descriptor; }
      }
      
      public override CountAggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.CountAggregationResult.DefaultInstance; }
      }
      
      public override CountAggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CountAggregationResult) {
          return MergeFrom((CountAggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CountAggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.CountAggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_countAggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _countAggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasValue = input.ReadInt64(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public long Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(long value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
    }
    static CountAggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AggregationResult : pb::GeneratedMessage<AggregationResult, AggregationResult.Builder> {
    private AggregationResult() { }
    private static readonly AggregationResult defaultInstance = new AggregationResult().MakeReadOnly();
    private static readonly string[] _aggregationResultFieldNames = new string[] { "agg_result", "name", "type" };
    private static readonly uint[] _aggregationResultFieldTags = new uint[] { 26, 10, 16 };
    public static AggregationResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AggregationResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AggregationResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AggregationResult, AggregationResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationResult__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.AggregationType type_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationType.AGG_AVG;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationType Type {
      get { return type_; }
    }
    
    public const int AggResultFieldNumber = 3;
    private bool hasAggResult;
    private pb::ByteString aggResult_ = pb::ByteString.Empty;
    public bool HasAggResult {
      get { return hasAggResult; }
    }
    public pb::ByteString AggResult {
      get { return aggResult_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _aggregationResultFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[1], Name);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[2], (int) Type, Type);
      }
      if (hasAggResult) {
        output.WriteBytes(3, field_names[0], AggResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasAggResult) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, AggResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AggregationResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AggregationResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AggregationResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AggregationResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AggregationResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AggregationResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AggregationResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AggregationResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AggregationResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AggregationResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AggregationResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AggregationResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AggregationResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AggregationResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AggregationResult result;
      
      private AggregationResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AggregationResult original = result;
          result = new AggregationResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AggregationResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.Descriptor; }
      }
      
      public override AggregationResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.DefaultInstance; }
      }
      
      public override AggregationResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AggregationResult) {
          return MergeFrom((AggregationResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AggregationResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasAggResult) {
          AggResult = other.AggResult;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_aggregationResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _aggregationResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              result.hasAggResult = input.ReadBytes(ref result.aggResult_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.AggregationType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationType.AGG_AVG;
        return this;
      }
      
      public bool HasAggResult {
        get { return result.hasAggResult; }
      }
      public pb::ByteString AggResult {
        get { return result.AggResult; }
        set { SetAggResult(value); }
      }
      public Builder SetAggResult(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAggResult = true;
        result.aggResult_ = value;
        return this;
      }
      public Builder ClearAggResult() {
        PrepareBuilder();
        result.hasAggResult = false;
        result.aggResult_ = pb::ByteString.Empty;
        return this;
      }
    }
    static AggregationResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AggregationsResult : pb::GeneratedMessage<AggregationsResult, AggregationsResult.Builder> {
    private AggregationsResult() { }
    private static readonly AggregationsResult defaultInstance = new AggregationsResult().MakeReadOnly();
    private static readonly string[] _aggregationsResultFieldNames = new string[] { "agg_results" };
    private static readonly uint[] _aggregationsResultFieldTags = new uint[] { 10 };
    public static AggregationsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AggregationsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AggregationsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AggregationsResult, AggregationsResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_AggregationsResult__FieldAccessorTable; }
    }
    
    public const int AggResultsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult> aggResults_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult> AggResultsList {
      get { return aggResults_; }
    }
    public int AggResultsCount {
      get { return aggResults_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult GetAggResults(int index) {
      return aggResults_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _aggregationsResultFieldNames;
      if (aggResults_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], aggResults_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult element in AggResultsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AggregationsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AggregationsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AggregationsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AggregationsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AggregationsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AggregationsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AggregationsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AggregationsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AggregationsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AggregationsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AggregationsResult MakeReadOnly() {
      aggResults_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AggregationsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AggregationsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AggregationsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AggregationsResult result;
      
      private AggregationsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AggregationsResult original = result;
          result = new AggregationsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AggregationsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Descriptor; }
      }
      
      public override AggregationsResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance; }
      }
      
      public override AggregationsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AggregationsResult) {
          return MergeFrom((AggregationsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AggregationsResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.aggResults_.Count != 0) {
          result.aggResults_.Add(other.aggResults_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_aggregationsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _aggregationsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.aggResults_, global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult> AggResultsList {
        get { return PrepareBuilder().aggResults_; }
      }
      public int AggResultsCount {
        get { return result.AggResultsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult GetAggResults(int index) {
        return result.GetAggResults(index);
      }
      public Builder SetAggResults(int index, global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.aggResults_[index] = value;
        return this;
      }
      public Builder SetAggResults(int index, global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.aggResults_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAggResults(global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.aggResults_.Add(value);
        return this;
      }
      public Builder AddAggResults(global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.aggResults_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAggResults(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.AggregationResult> values) {
        PrepareBuilder();
        result.aggResults_.Add(values);
        return this;
      }
      public Builder ClearAggResults() {
        PrepareBuilder();
        result.aggResults_.Clear();
        return this;
      }
    }
    static AggregationsResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByFieldResultItem : pb::GeneratedMessage<GroupByFieldResultItem, GroupByFieldResultItem.Builder> {
    private GroupByFieldResultItem() { }
    private static readonly GroupByFieldResultItem defaultInstance = new GroupByFieldResultItem().MakeReadOnly();
    private static readonly string[] _groupByFieldResultItemFieldNames = new string[] { "key", "row_count", "sub_aggs_result", "sub_group_bys_result" };
    private static readonly uint[] _groupByFieldResultItemFieldTags = new uint[] { 10, 16, 26, 34 };
    public static GroupByFieldResultItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByFieldResultItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByFieldResultItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResultItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByFieldResultItem, GroupByFieldResultItem.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResultItem__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private string key_ = "";
    public bool HasKey {
      get { return hasKey; }
    }
    public string Key {
      get { return key_; }
    }
    
    public const int RowCountFieldNumber = 2;
    private bool hasRowCount;
    private long rowCount_;
    public bool HasRowCount {
      get { return hasRowCount; }
    }
    public long RowCount {
      get { return rowCount_; }
    }
    
    public const int SubAggsResultFieldNumber = 3;
    private bool hasSubAggsResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult subAggsResult_;
    public bool HasSubAggsResult {
      get { return hasSubAggsResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
      get { return subAggsResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance; }
    }
    
    public const int SubGroupBysResultFieldNumber = 4;
    private bool hasSubGroupBysResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult subGroupBysResult_;
    public bool HasSubGroupBysResult {
      get { return hasSubGroupBysResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
      get { return subGroupBysResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByFieldResultItemFieldNames;
      if (hasKey) {
        output.WriteString(1, field_names[0], Key);
      }
      if (hasRowCount) {
        output.WriteInt64(2, field_names[1], RowCount);
      }
      if (hasSubAggsResult) {
        output.WriteMessage(3, field_names[2], SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        output.WriteMessage(4, field_names[3], SubGroupBysResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKey) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Key);
      }
      if (hasRowCount) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, RowCount);
      }
      if (hasSubAggsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SubGroupBysResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByFieldResultItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFieldResultItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFieldResultItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFieldResultItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFieldResultItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFieldResultItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByFieldResultItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByFieldResultItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByFieldResultItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFieldResultItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByFieldResultItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByFieldResultItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByFieldResultItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByFieldResultItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByFieldResultItem result;
      
      private GroupByFieldResultItem PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByFieldResultItem original = result;
          result = new GroupByFieldResultItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByFieldResultItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.Descriptor; }
      }
      
      public override GroupByFieldResultItem DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.DefaultInstance; }
      }
      
      public override GroupByFieldResultItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByFieldResultItem) {
          return MergeFrom((GroupByFieldResultItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByFieldResultItem other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasRowCount) {
          RowCount = other.RowCount;
        }
        if (other.HasSubAggsResult) {
          MergeSubAggsResult(other.SubAggsResult);
        }
        if (other.HasSubGroupBysResult) {
          MergeSubGroupBysResult(other.SubGroupBysResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByFieldResultItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByFieldResultItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadString(ref result.key_);
              break;
            }
            case 16: {
              result.hasRowCount = input.ReadInt64(ref result.rowCount_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder();
              if (result.hasSubAggsResult) {
                subBuilder.MergeFrom(SubAggsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggsResult = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder();
              if (result.hasSubGroupBysResult) {
                subBuilder.MergeFrom(SubGroupBysResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBysResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public string Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = "";
        return this;
      }
      
      public bool HasRowCount {
        get { return result.hasRowCount; }
      }
      public long RowCount {
        get { return result.RowCount; }
        set { SetRowCount(value); }
      }
      public Builder SetRowCount(long value) {
        PrepareBuilder();
        result.hasRowCount = true;
        result.rowCount_ = value;
        return this;
      }
      public Builder ClearRowCount() {
        PrepareBuilder();
        result.hasRowCount = false;
        result.rowCount_ = 0L;
        return this;
      }
      
      public bool HasSubAggsResult {
       get { return result.hasSubAggsResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
        get { return result.SubAggsResult; }
        set { SetSubAggsResult(value); }
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = value;
        return this;
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggsResult &&
            result.subAggsResult_ != global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance) {
            result.subAggsResult_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder(result.subAggsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggsResult_ = value;
        }
        result.hasSubAggsResult = true;
        return this;
      }
      public Builder ClearSubAggsResult() {
        PrepareBuilder();
        result.hasSubAggsResult = false;
        result.subAggsResult_ = null;
        return this;
      }
      
      public bool HasSubGroupBysResult {
       get { return result.hasSubGroupBysResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
        get { return result.SubGroupBysResult; }
        set { SetSubGroupBysResult(value); }
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = value;
        return this;
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBysResult &&
            result.subGroupBysResult_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance) {
            result.subGroupBysResult_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder(result.subGroupBysResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBysResult_ = value;
        }
        result.hasSubGroupBysResult = true;
        return this;
      }
      public Builder ClearSubGroupBysResult() {
        PrepareBuilder();
        result.hasSubGroupBysResult = false;
        result.subGroupBysResult_ = null;
        return this;
      }
    }
    static GroupByFieldResultItem() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByFieldResult : pb::GeneratedMessage<GroupByFieldResult, GroupByFieldResult.Builder> {
    private GroupByFieldResult() { }
    private static readonly GroupByFieldResult defaultInstance = new GroupByFieldResult().MakeReadOnly();
    private static readonly string[] _groupByFieldResultFieldNames = new string[] { "group_by_field_result_items" };
    private static readonly uint[] _groupByFieldResultFieldTags = new uint[] { 10 };
    public static GroupByFieldResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByFieldResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByFieldResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByFieldResult, GroupByFieldResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFieldResult__FieldAccessorTable; }
    }
    
    public const int GroupByFieldResultItemsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem> groupByFieldResultItems_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem> GroupByFieldResultItemsList {
      get { return groupByFieldResultItems_; }
    }
    public int GroupByFieldResultItemsCount {
      get { return groupByFieldResultItems_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem GetGroupByFieldResultItems(int index) {
      return groupByFieldResultItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByFieldResultFieldNames;
      if (groupByFieldResultItems_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], groupByFieldResultItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem element in GroupByFieldResultItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByFieldResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFieldResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFieldResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFieldResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFieldResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFieldResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByFieldResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByFieldResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByFieldResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFieldResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByFieldResult MakeReadOnly() {
      groupByFieldResultItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByFieldResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByFieldResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByFieldResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByFieldResult result;
      
      private GroupByFieldResult PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByFieldResult original = result;
          result = new GroupByFieldResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByFieldResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResult.Descriptor; }
      }
      
      public override GroupByFieldResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResult.DefaultInstance; }
      }
      
      public override GroupByFieldResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByFieldResult) {
          return MergeFrom((GroupByFieldResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByFieldResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.groupByFieldResultItems_.Count != 0) {
          result.groupByFieldResultItems_.Add(other.groupByFieldResultItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByFieldResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByFieldResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.groupByFieldResultItems_, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem> GroupByFieldResultItemsList {
        get { return PrepareBuilder().groupByFieldResultItems_; }
      }
      public int GroupByFieldResultItemsCount {
        get { return result.GroupByFieldResultItemsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem GetGroupByFieldResultItems(int index) {
        return result.GetGroupByFieldResultItems(index);
      }
      public Builder SetGroupByFieldResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByFieldResultItems_[index] = value;
        return this;
      }
      public Builder SetGroupByFieldResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByFieldResultItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroupByFieldResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByFieldResultItems_.Add(value);
        return this;
      }
      public Builder AddGroupByFieldResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByFieldResultItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroupByFieldResultItems(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFieldResultItem> values) {
        PrepareBuilder();
        result.groupByFieldResultItems_.Add(values);
        return this;
      }
      public Builder ClearGroupByFieldResultItems() {
        PrepareBuilder();
        result.groupByFieldResultItems_.Clear();
        return this;
      }
    }
    static GroupByFieldResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByRangeResultItem : pb::GeneratedMessage<GroupByRangeResultItem, GroupByRangeResultItem.Builder> {
    private GroupByRangeResultItem() { }
    private static readonly GroupByRangeResultItem defaultInstance = new GroupByRangeResultItem().MakeReadOnly();
    private static readonly string[] _groupByRangeResultItemFieldNames = new string[] { "from", "row_count", "sub_aggs_result", "sub_group_bys_result", "to" };
    private static readonly uint[] _groupByRangeResultItemFieldTags = new uint[] { 9, 24, 34, 42, 17 };
    public static GroupByRangeResultItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByRangeResultItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByRangeResultItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResultItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByRangeResultItem, GroupByRangeResultItem.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResultItem__FieldAccessorTable; }
    }
    
    public const int FromFieldNumber = 1;
    private bool hasFrom;
    private double from_;
    public bool HasFrom {
      get { return hasFrom; }
    }
    public double From {
      get { return from_; }
    }
    
    public const int ToFieldNumber = 2;
    private bool hasTo;
    private double to_;
    public bool HasTo {
      get { return hasTo; }
    }
    public double To {
      get { return to_; }
    }
    
    public const int RowCountFieldNumber = 3;
    private bool hasRowCount;
    private long rowCount_;
    public bool HasRowCount {
      get { return hasRowCount; }
    }
    public long RowCount {
      get { return rowCount_; }
    }
    
    public const int SubAggsResultFieldNumber = 4;
    private bool hasSubAggsResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult subAggsResult_;
    public bool HasSubAggsResult {
      get { return hasSubAggsResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
      get { return subAggsResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance; }
    }
    
    public const int SubGroupBysResultFieldNumber = 5;
    private bool hasSubGroupBysResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult subGroupBysResult_;
    public bool HasSubGroupBysResult {
      get { return hasSubGroupBysResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
      get { return subGroupBysResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByRangeResultItemFieldNames;
      if (hasFrom) {
        output.WriteDouble(1, field_names[0], From);
      }
      if (hasTo) {
        output.WriteDouble(2, field_names[4], To);
      }
      if (hasRowCount) {
        output.WriteInt64(3, field_names[1], RowCount);
      }
      if (hasSubAggsResult) {
        output.WriteMessage(4, field_names[2], SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        output.WriteMessage(5, field_names[3], SubGroupBysResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFrom) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, From);
      }
      if (hasTo) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, To);
      }
      if (hasRowCount) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, RowCount);
      }
      if (hasSubAggsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, SubGroupBysResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByRangeResultItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByRangeResultItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByRangeResultItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByRangeResultItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByRangeResultItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByRangeResultItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByRangeResultItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByRangeResultItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByRangeResultItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByRangeResultItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByRangeResultItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByRangeResultItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByRangeResultItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByRangeResultItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByRangeResultItem result;
      
      private GroupByRangeResultItem PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByRangeResultItem original = result;
          result = new GroupByRangeResultItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByRangeResultItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.Descriptor; }
      }
      
      public override GroupByRangeResultItem DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.DefaultInstance; }
      }
      
      public override GroupByRangeResultItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByRangeResultItem) {
          return MergeFrom((GroupByRangeResultItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByRangeResultItem other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFrom) {
          From = other.From;
        }
        if (other.HasTo) {
          To = other.To;
        }
        if (other.HasRowCount) {
          RowCount = other.RowCount;
        }
        if (other.HasSubAggsResult) {
          MergeSubAggsResult(other.SubAggsResult);
        }
        if (other.HasSubGroupBysResult) {
          MergeSubGroupBysResult(other.SubGroupBysResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByRangeResultItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByRangeResultItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFrom = input.ReadDouble(ref result.from_);
              break;
            }
            case 17: {
              result.hasTo = input.ReadDouble(ref result.to_);
              break;
            }
            case 24: {
              result.hasRowCount = input.ReadInt64(ref result.rowCount_);
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder();
              if (result.hasSubAggsResult) {
                subBuilder.MergeFrom(SubAggsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggsResult = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder();
              if (result.hasSubGroupBysResult) {
                subBuilder.MergeFrom(SubGroupBysResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBysResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFrom {
        get { return result.hasFrom; }
      }
      public double From {
        get { return result.From; }
        set { SetFrom(value); }
      }
      public Builder SetFrom(double value) {
        PrepareBuilder();
        result.hasFrom = true;
        result.from_ = value;
        return this;
      }
      public Builder ClearFrom() {
        PrepareBuilder();
        result.hasFrom = false;
        result.from_ = 0D;
        return this;
      }
      
      public bool HasTo {
        get { return result.hasTo; }
      }
      public double To {
        get { return result.To; }
        set { SetTo(value); }
      }
      public Builder SetTo(double value) {
        PrepareBuilder();
        result.hasTo = true;
        result.to_ = value;
        return this;
      }
      public Builder ClearTo() {
        PrepareBuilder();
        result.hasTo = false;
        result.to_ = 0D;
        return this;
      }
      
      public bool HasRowCount {
        get { return result.hasRowCount; }
      }
      public long RowCount {
        get { return result.RowCount; }
        set { SetRowCount(value); }
      }
      public Builder SetRowCount(long value) {
        PrepareBuilder();
        result.hasRowCount = true;
        result.rowCount_ = value;
        return this;
      }
      public Builder ClearRowCount() {
        PrepareBuilder();
        result.hasRowCount = false;
        result.rowCount_ = 0L;
        return this;
      }
      
      public bool HasSubAggsResult {
       get { return result.hasSubAggsResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
        get { return result.SubAggsResult; }
        set { SetSubAggsResult(value); }
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = value;
        return this;
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggsResult &&
            result.subAggsResult_ != global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance) {
            result.subAggsResult_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder(result.subAggsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggsResult_ = value;
        }
        result.hasSubAggsResult = true;
        return this;
      }
      public Builder ClearSubAggsResult() {
        PrepareBuilder();
        result.hasSubAggsResult = false;
        result.subAggsResult_ = null;
        return this;
      }
      
      public bool HasSubGroupBysResult {
       get { return result.hasSubGroupBysResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
        get { return result.SubGroupBysResult; }
        set { SetSubGroupBysResult(value); }
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = value;
        return this;
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBysResult &&
            result.subGroupBysResult_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance) {
            result.subGroupBysResult_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder(result.subGroupBysResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBysResult_ = value;
        }
        result.hasSubGroupBysResult = true;
        return this;
      }
      public Builder ClearSubGroupBysResult() {
        PrepareBuilder();
        result.hasSubGroupBysResult = false;
        result.subGroupBysResult_ = null;
        return this;
      }
    }
    static GroupByRangeResultItem() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByRangeResult : pb::GeneratedMessage<GroupByRangeResult, GroupByRangeResult.Builder> {
    private GroupByRangeResult() { }
    private static readonly GroupByRangeResult defaultInstance = new GroupByRangeResult().MakeReadOnly();
    private static readonly string[] _groupByRangeResultFieldNames = new string[] { "group_by_range_result_items" };
    private static readonly uint[] _groupByRangeResultFieldTags = new uint[] { 10 };
    public static GroupByRangeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByRangeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByRangeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByRangeResult, GroupByRangeResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByRangeResult__FieldAccessorTable; }
    }
    
    public const int GroupByRangeResultItemsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem> groupByRangeResultItems_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem> GroupByRangeResultItemsList {
      get { return groupByRangeResultItems_; }
    }
    public int GroupByRangeResultItemsCount {
      get { return groupByRangeResultItems_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem GetGroupByRangeResultItems(int index) {
      return groupByRangeResultItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByRangeResultFieldNames;
      if (groupByRangeResultItems_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], groupByRangeResultItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem element in GroupByRangeResultItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByRangeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByRangeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByRangeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByRangeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByRangeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByRangeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByRangeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByRangeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByRangeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByRangeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByRangeResult MakeReadOnly() {
      groupByRangeResultItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByRangeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByRangeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByRangeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByRangeResult result;
      
      private GroupByRangeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByRangeResult original = result;
          result = new GroupByRangeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByRangeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResult.Descriptor; }
      }
      
      public override GroupByRangeResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResult.DefaultInstance; }
      }
      
      public override GroupByRangeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByRangeResult) {
          return MergeFrom((GroupByRangeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByRangeResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.groupByRangeResultItems_.Count != 0) {
          result.groupByRangeResultItems_.Add(other.groupByRangeResultItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByRangeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByRangeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.groupByRangeResultItems_, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem> GroupByRangeResultItemsList {
        get { return PrepareBuilder().groupByRangeResultItems_; }
      }
      public int GroupByRangeResultItemsCount {
        get { return result.GroupByRangeResultItemsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem GetGroupByRangeResultItems(int index) {
        return result.GetGroupByRangeResultItems(index);
      }
      public Builder SetGroupByRangeResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByRangeResultItems_[index] = value;
        return this;
      }
      public Builder SetGroupByRangeResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByRangeResultItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroupByRangeResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByRangeResultItems_.Add(value);
        return this;
      }
      public Builder AddGroupByRangeResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByRangeResultItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroupByRangeResultItems(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByRangeResultItem> values) {
        PrepareBuilder();
        result.groupByRangeResultItems_.Add(values);
        return this;
      }
      public Builder ClearGroupByRangeResultItems() {
        PrepareBuilder();
        result.groupByRangeResultItems_.Clear();
        return this;
      }
    }
    static GroupByRangeResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByGeoDistanceResultItem : pb::GeneratedMessage<GroupByGeoDistanceResultItem, GroupByGeoDistanceResultItem.Builder> {
    private GroupByGeoDistanceResultItem() { }
    private static readonly GroupByGeoDistanceResultItem defaultInstance = new GroupByGeoDistanceResultItem().MakeReadOnly();
    private static readonly string[] _groupByGeoDistanceResultItemFieldNames = new string[] { "from", "row_count", "sub_aggs_result", "sub_group_bys_result", "to" };
    private static readonly uint[] _groupByGeoDistanceResultItemFieldTags = new uint[] { 9, 24, 34, 42, 17 };
    public static GroupByGeoDistanceResultItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByGeoDistanceResultItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByGeoDistanceResultItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResultItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByGeoDistanceResultItem, GroupByGeoDistanceResultItem.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResultItem__FieldAccessorTable; }
    }
    
    public const int FromFieldNumber = 1;
    private bool hasFrom;
    private double from_;
    public bool HasFrom {
      get { return hasFrom; }
    }
    public double From {
      get { return from_; }
    }
    
    public const int ToFieldNumber = 2;
    private bool hasTo;
    private double to_;
    public bool HasTo {
      get { return hasTo; }
    }
    public double To {
      get { return to_; }
    }
    
    public const int RowCountFieldNumber = 3;
    private bool hasRowCount;
    private long rowCount_;
    public bool HasRowCount {
      get { return hasRowCount; }
    }
    public long RowCount {
      get { return rowCount_; }
    }
    
    public const int SubAggsResultFieldNumber = 4;
    private bool hasSubAggsResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult subAggsResult_;
    public bool HasSubAggsResult {
      get { return hasSubAggsResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
      get { return subAggsResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance; }
    }
    
    public const int SubGroupBysResultFieldNumber = 5;
    private bool hasSubGroupBysResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult subGroupBysResult_;
    public bool HasSubGroupBysResult {
      get { return hasSubGroupBysResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
      get { return subGroupBysResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByGeoDistanceResultItemFieldNames;
      if (hasFrom) {
        output.WriteDouble(1, field_names[0], From);
      }
      if (hasTo) {
        output.WriteDouble(2, field_names[4], To);
      }
      if (hasRowCount) {
        output.WriteInt64(3, field_names[1], RowCount);
      }
      if (hasSubAggsResult) {
        output.WriteMessage(4, field_names[2], SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        output.WriteMessage(5, field_names[3], SubGroupBysResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFrom) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, From);
      }
      if (hasTo) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, To);
      }
      if (hasRowCount) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, RowCount);
      }
      if (hasSubAggsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, SubGroupBysResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByGeoDistanceResultItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByGeoDistanceResultItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByGeoDistanceResultItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByGeoDistanceResultItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByGeoDistanceResultItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByGeoDistanceResultItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByGeoDistanceResultItem result;
      
      private GroupByGeoDistanceResultItem PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByGeoDistanceResultItem original = result;
          result = new GroupByGeoDistanceResultItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByGeoDistanceResultItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.Descriptor; }
      }
      
      public override GroupByGeoDistanceResultItem DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.DefaultInstance; }
      }
      
      public override GroupByGeoDistanceResultItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByGeoDistanceResultItem) {
          return MergeFrom((GroupByGeoDistanceResultItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByGeoDistanceResultItem other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFrom) {
          From = other.From;
        }
        if (other.HasTo) {
          To = other.To;
        }
        if (other.HasRowCount) {
          RowCount = other.RowCount;
        }
        if (other.HasSubAggsResult) {
          MergeSubAggsResult(other.SubAggsResult);
        }
        if (other.HasSubGroupBysResult) {
          MergeSubGroupBysResult(other.SubGroupBysResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByGeoDistanceResultItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByGeoDistanceResultItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasFrom = input.ReadDouble(ref result.from_);
              break;
            }
            case 17: {
              result.hasTo = input.ReadDouble(ref result.to_);
              break;
            }
            case 24: {
              result.hasRowCount = input.ReadInt64(ref result.rowCount_);
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder();
              if (result.hasSubAggsResult) {
                subBuilder.MergeFrom(SubAggsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggsResult = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder();
              if (result.hasSubGroupBysResult) {
                subBuilder.MergeFrom(SubGroupBysResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBysResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFrom {
        get { return result.hasFrom; }
      }
      public double From {
        get { return result.From; }
        set { SetFrom(value); }
      }
      public Builder SetFrom(double value) {
        PrepareBuilder();
        result.hasFrom = true;
        result.from_ = value;
        return this;
      }
      public Builder ClearFrom() {
        PrepareBuilder();
        result.hasFrom = false;
        result.from_ = 0D;
        return this;
      }
      
      public bool HasTo {
        get { return result.hasTo; }
      }
      public double To {
        get { return result.To; }
        set { SetTo(value); }
      }
      public Builder SetTo(double value) {
        PrepareBuilder();
        result.hasTo = true;
        result.to_ = value;
        return this;
      }
      public Builder ClearTo() {
        PrepareBuilder();
        result.hasTo = false;
        result.to_ = 0D;
        return this;
      }
      
      public bool HasRowCount {
        get { return result.hasRowCount; }
      }
      public long RowCount {
        get { return result.RowCount; }
        set { SetRowCount(value); }
      }
      public Builder SetRowCount(long value) {
        PrepareBuilder();
        result.hasRowCount = true;
        result.rowCount_ = value;
        return this;
      }
      public Builder ClearRowCount() {
        PrepareBuilder();
        result.hasRowCount = false;
        result.rowCount_ = 0L;
        return this;
      }
      
      public bool HasSubAggsResult {
       get { return result.hasSubAggsResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
        get { return result.SubAggsResult; }
        set { SetSubAggsResult(value); }
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = value;
        return this;
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggsResult &&
            result.subAggsResult_ != global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance) {
            result.subAggsResult_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder(result.subAggsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggsResult_ = value;
        }
        result.hasSubAggsResult = true;
        return this;
      }
      public Builder ClearSubAggsResult() {
        PrepareBuilder();
        result.hasSubAggsResult = false;
        result.subAggsResult_ = null;
        return this;
      }
      
      public bool HasSubGroupBysResult {
       get { return result.hasSubGroupBysResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
        get { return result.SubGroupBysResult; }
        set { SetSubGroupBysResult(value); }
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = value;
        return this;
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBysResult &&
            result.subGroupBysResult_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance) {
            result.subGroupBysResult_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder(result.subGroupBysResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBysResult_ = value;
        }
        result.hasSubGroupBysResult = true;
        return this;
      }
      public Builder ClearSubGroupBysResult() {
        PrepareBuilder();
        result.hasSubGroupBysResult = false;
        result.subGroupBysResult_ = null;
        return this;
      }
    }
    static GroupByGeoDistanceResultItem() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByGeoDistanceResult : pb::GeneratedMessage<GroupByGeoDistanceResult, GroupByGeoDistanceResult.Builder> {
    private GroupByGeoDistanceResult() { }
    private static readonly GroupByGeoDistanceResult defaultInstance = new GroupByGeoDistanceResult().MakeReadOnly();
    private static readonly string[] _groupByGeoDistanceResultFieldNames = new string[] { "group_by_geo_distance_result_items" };
    private static readonly uint[] _groupByGeoDistanceResultFieldTags = new uint[] { 10 };
    public static GroupByGeoDistanceResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByGeoDistanceResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByGeoDistanceResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByGeoDistanceResult, GroupByGeoDistanceResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByGeoDistanceResult__FieldAccessorTable; }
    }
    
    public const int GroupByGeoDistanceResultItemsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem> groupByGeoDistanceResultItems_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem> GroupByGeoDistanceResultItemsList {
      get { return groupByGeoDistanceResultItems_; }
    }
    public int GroupByGeoDistanceResultItemsCount {
      get { return groupByGeoDistanceResultItems_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem GetGroupByGeoDistanceResultItems(int index) {
      return groupByGeoDistanceResultItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByGeoDistanceResultFieldNames;
      if (groupByGeoDistanceResultItems_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], groupByGeoDistanceResultItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem element in GroupByGeoDistanceResultItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByGeoDistanceResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByGeoDistanceResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByGeoDistanceResult MakeReadOnly() {
      groupByGeoDistanceResultItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByGeoDistanceResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByGeoDistanceResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByGeoDistanceResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByGeoDistanceResult result;
      
      private GroupByGeoDistanceResult PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByGeoDistanceResult original = result;
          result = new GroupByGeoDistanceResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByGeoDistanceResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResult.Descriptor; }
      }
      
      public override GroupByGeoDistanceResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResult.DefaultInstance; }
      }
      
      public override GroupByGeoDistanceResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByGeoDistanceResult) {
          return MergeFrom((GroupByGeoDistanceResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByGeoDistanceResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.groupByGeoDistanceResultItems_.Count != 0) {
          result.groupByGeoDistanceResultItems_.Add(other.groupByGeoDistanceResultItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByGeoDistanceResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByGeoDistanceResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.groupByGeoDistanceResultItems_, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem> GroupByGeoDistanceResultItemsList {
        get { return PrepareBuilder().groupByGeoDistanceResultItems_; }
      }
      public int GroupByGeoDistanceResultItemsCount {
        get { return result.GroupByGeoDistanceResultItemsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem GetGroupByGeoDistanceResultItems(int index) {
        return result.GetGroupByGeoDistanceResultItems(index);
      }
      public Builder SetGroupByGeoDistanceResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByGeoDistanceResultItems_[index] = value;
        return this;
      }
      public Builder SetGroupByGeoDistanceResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByGeoDistanceResultItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroupByGeoDistanceResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByGeoDistanceResultItems_.Add(value);
        return this;
      }
      public Builder AddGroupByGeoDistanceResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByGeoDistanceResultItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroupByGeoDistanceResultItems(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByGeoDistanceResultItem> values) {
        PrepareBuilder();
        result.groupByGeoDistanceResultItems_.Add(values);
        return this;
      }
      public Builder ClearGroupByGeoDistanceResultItems() {
        PrepareBuilder();
        result.groupByGeoDistanceResultItems_.Clear();
        return this;
      }
    }
    static GroupByGeoDistanceResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByFilterResultItem : pb::GeneratedMessage<GroupByFilterResultItem, GroupByFilterResultItem.Builder> {
    private GroupByFilterResultItem() { }
    private static readonly GroupByFilterResultItem defaultInstance = new GroupByFilterResultItem().MakeReadOnly();
    private static readonly string[] _groupByFilterResultItemFieldNames = new string[] { "row_count", "sub_aggs_result", "sub_group_bys_result" };
    private static readonly uint[] _groupByFilterResultItemFieldTags = new uint[] { 8, 18, 26 };
    public static GroupByFilterResultItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByFilterResultItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByFilterResultItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResultItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByFilterResultItem, GroupByFilterResultItem.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResultItem__FieldAccessorTable; }
    }
    
    public const int RowCountFieldNumber = 1;
    private bool hasRowCount;
    private long rowCount_;
    public bool HasRowCount {
      get { return hasRowCount; }
    }
    public long RowCount {
      get { return rowCount_; }
    }
    
    public const int SubAggsResultFieldNumber = 2;
    private bool hasSubAggsResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult subAggsResult_;
    public bool HasSubAggsResult {
      get { return hasSubAggsResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
      get { return subAggsResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance; }
    }
    
    public const int SubGroupBysResultFieldNumber = 3;
    private bool hasSubGroupBysResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult subGroupBysResult_;
    public bool HasSubGroupBysResult {
      get { return hasSubGroupBysResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
      get { return subGroupBysResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByFilterResultItemFieldNames;
      if (hasRowCount) {
        output.WriteInt64(1, field_names[0], RowCount);
      }
      if (hasSubAggsResult) {
        output.WriteMessage(2, field_names[1], SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        output.WriteMessage(3, field_names[2], SubGroupBysResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRowCount) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, RowCount);
      }
      if (hasSubAggsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, SubGroupBysResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByFilterResultItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFilterResultItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilterResultItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFilterResultItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilterResultItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFilterResultItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilterResultItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByFilterResultItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByFilterResultItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFilterResultItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByFilterResultItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByFilterResultItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByFilterResultItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByFilterResultItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByFilterResultItem result;
      
      private GroupByFilterResultItem PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByFilterResultItem original = result;
          result = new GroupByFilterResultItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByFilterResultItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.Descriptor; }
      }
      
      public override GroupByFilterResultItem DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.DefaultInstance; }
      }
      
      public override GroupByFilterResultItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByFilterResultItem) {
          return MergeFrom((GroupByFilterResultItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByFilterResultItem other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRowCount) {
          RowCount = other.RowCount;
        }
        if (other.HasSubAggsResult) {
          MergeSubAggsResult(other.SubAggsResult);
        }
        if (other.HasSubGroupBysResult) {
          MergeSubGroupBysResult(other.SubGroupBysResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByFilterResultItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByFilterResultItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRowCount = input.ReadInt64(ref result.rowCount_);
              break;
            }
            case 18: {
              global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder();
              if (result.hasSubAggsResult) {
                subBuilder.MergeFrom(SubAggsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggsResult = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder();
              if (result.hasSubGroupBysResult) {
                subBuilder.MergeFrom(SubGroupBysResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBysResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRowCount {
        get { return result.hasRowCount; }
      }
      public long RowCount {
        get { return result.RowCount; }
        set { SetRowCount(value); }
      }
      public Builder SetRowCount(long value) {
        PrepareBuilder();
        result.hasRowCount = true;
        result.rowCount_ = value;
        return this;
      }
      public Builder ClearRowCount() {
        PrepareBuilder();
        result.hasRowCount = false;
        result.rowCount_ = 0L;
        return this;
      }
      
      public bool HasSubAggsResult {
       get { return result.hasSubAggsResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
        get { return result.SubAggsResult; }
        set { SetSubAggsResult(value); }
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = value;
        return this;
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggsResult &&
            result.subAggsResult_ != global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance) {
            result.subAggsResult_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder(result.subAggsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggsResult_ = value;
        }
        result.hasSubAggsResult = true;
        return this;
      }
      public Builder ClearSubAggsResult() {
        PrepareBuilder();
        result.hasSubAggsResult = false;
        result.subAggsResult_ = null;
        return this;
      }
      
      public bool HasSubGroupBysResult {
       get { return result.hasSubGroupBysResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
        get { return result.SubGroupBysResult; }
        set { SetSubGroupBysResult(value); }
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = value;
        return this;
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBysResult &&
            result.subGroupBysResult_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance) {
            result.subGroupBysResult_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder(result.subGroupBysResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBysResult_ = value;
        }
        result.hasSubGroupBysResult = true;
        return this;
      }
      public Builder ClearSubGroupBysResult() {
        PrepareBuilder();
        result.hasSubGroupBysResult = false;
        result.subGroupBysResult_ = null;
        return this;
      }
    }
    static GroupByFilterResultItem() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByFilterResult : pb::GeneratedMessage<GroupByFilterResult, GroupByFilterResult.Builder> {
    private GroupByFilterResult() { }
    private static readonly GroupByFilterResult defaultInstance = new GroupByFilterResult().MakeReadOnly();
    private static readonly string[] _groupByFilterResultFieldNames = new string[] { "group_by_filter_result_items" };
    private static readonly uint[] _groupByFilterResultFieldTags = new uint[] { 10 };
    public static GroupByFilterResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByFilterResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByFilterResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByFilterResult, GroupByFilterResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByFilterResult__FieldAccessorTable; }
    }
    
    public const int GroupByFilterResultItemsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem> groupByFilterResultItems_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem> GroupByFilterResultItemsList {
      get { return groupByFilterResultItems_; }
    }
    public int GroupByFilterResultItemsCount {
      get { return groupByFilterResultItems_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem GetGroupByFilterResultItems(int index) {
      return groupByFilterResultItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByFilterResultFieldNames;
      if (groupByFilterResultItems_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], groupByFilterResultItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem element in GroupByFilterResultItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByFilterResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFilterResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilterResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByFilterResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilterResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFilterResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByFilterResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByFilterResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByFilterResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByFilterResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByFilterResult MakeReadOnly() {
      groupByFilterResultItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByFilterResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByFilterResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByFilterResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByFilterResult result;
      
      private GroupByFilterResult PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByFilterResult original = result;
          result = new GroupByFilterResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByFilterResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResult.Descriptor; }
      }
      
      public override GroupByFilterResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResult.DefaultInstance; }
      }
      
      public override GroupByFilterResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByFilterResult) {
          return MergeFrom((GroupByFilterResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByFilterResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.groupByFilterResultItems_.Count != 0) {
          result.groupByFilterResultItems_.Add(other.groupByFilterResultItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByFilterResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByFilterResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.groupByFilterResultItems_, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem> GroupByFilterResultItemsList {
        get { return PrepareBuilder().groupByFilterResultItems_; }
      }
      public int GroupByFilterResultItemsCount {
        get { return result.GroupByFilterResultItemsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem GetGroupByFilterResultItems(int index) {
        return result.GetGroupByFilterResultItems(index);
      }
      public Builder SetGroupByFilterResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByFilterResultItems_[index] = value;
        return this;
      }
      public Builder SetGroupByFilterResultItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByFilterResultItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroupByFilterResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByFilterResultItems_.Add(value);
        return this;
      }
      public Builder AddGroupByFilterResultItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByFilterResultItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroupByFilterResultItems(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByFilterResultItem> values) {
        PrepareBuilder();
        result.groupByFilterResultItems_.Add(values);
        return this;
      }
      public Builder ClearGroupByFilterResultItems() {
        PrepareBuilder();
        result.groupByFilterResultItems_.Clear();
        return this;
      }
    }
    static GroupByFilterResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByResult : pb::GeneratedMessage<GroupByResult, GroupByResult.Builder> {
    private GroupByResult() { }
    private static readonly GroupByResult defaultInstance = new GroupByResult().MakeReadOnly();
    private static readonly string[] _groupByResultFieldNames = new string[] { "group_by_result", "name", "type" };
    private static readonly uint[] _groupByResultFieldTags = new uint[] { 26, 10, 16 };
    public static GroupByResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByResult, GroupByResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByResult__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupByType type_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupByType.GROUP_BY_FIELD;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByType Type {
      get { return type_; }
    }
    
    public const int GroupByResult_FieldNumber = 3;
    private bool hasGroupByResult_;
    private pb::ByteString groupByResult_ = pb::ByteString.Empty;
    public bool HasGroupByResult_ {
      get { return hasGroupByResult_; }
    }
    public pb::ByteString GroupByResult_ {
      get { return groupByResult_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByResultFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[1], Name);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[2], (int) Type, Type);
      }
      if (hasGroupByResult_) {
        output.WriteBytes(3, field_names[0], GroupByResult_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasGroupByResult_) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, GroupByResult_);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByResult result;
      
      private GroupByResult PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByResult original = result;
          result = new GroupByResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.Descriptor; }
      }
      
      public override GroupByResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.DefaultInstance; }
      }
      
      public override GroupByResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByResult) {
          return MergeFrom((GroupByResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasGroupByResult_) {
          GroupByResult_ = other.GroupByResult_;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              result.hasGroupByResult_ = input.ReadBytes(ref result.groupByResult_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alicloud.openservices.tablestore.core.protocol.GroupByType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupByType.GROUP_BY_FIELD;
        return this;
      }
      
      public bool HasGroupByResult_ {
        get { return result.hasGroupByResult_; }
      }
      public pb::ByteString GroupByResult_ {
        get { return result.GroupByResult_; }
        set { SetGroupByResult_(value); }
      }
      public Builder SetGroupByResult_(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroupByResult_ = true;
        result.groupByResult_ = value;
        return this;
      }
      public Builder ClearGroupByResult_() {
        PrepareBuilder();
        result.hasGroupByResult_ = false;
        result.groupByResult_ = pb::ByteString.Empty;
        return this;
      }
    }
    static GroupByResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupBysResult : pb::GeneratedMessage<GroupBysResult, GroupBysResult.Builder> {
    private GroupBysResult() { }
    private static readonly GroupBysResult defaultInstance = new GroupBysResult().MakeReadOnly();
    private static readonly string[] _groupBysResultFieldNames = new string[] { "group_by_results" };
    private static readonly uint[] _groupBysResultFieldTags = new uint[] { 10 };
    public static GroupBysResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupBysResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupBysResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBysResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupBysResult, GroupBysResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupBysResult__FieldAccessorTable; }
    }
    
    public const int GroupByResultsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult> groupByResults_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult> GroupByResultsList {
      get { return groupByResults_; }
    }
    public int GroupByResultsCount {
      get { return groupByResults_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult GetGroupByResults(int index) {
      return groupByResults_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupBysResultFieldNames;
      if (groupByResults_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], groupByResults_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult element in GroupByResultsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupBysResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBysResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBysResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupBysResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupBysResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBysResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupBysResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupBysResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupBysResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupBysResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupBysResult MakeReadOnly() {
      groupByResults_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupBysResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupBysResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupBysResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupBysResult result;
      
      private GroupBysResult PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupBysResult original = result;
          result = new GroupBysResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupBysResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Descriptor; }
      }
      
      public override GroupBysResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance; }
      }
      
      public override GroupBysResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupBysResult) {
          return MergeFrom((GroupBysResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupBysResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.groupByResults_.Count != 0) {
          result.groupByResults_.Add(other.groupByResults_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupBysResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupBysResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.groupByResults_, global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult> GroupByResultsList {
        get { return PrepareBuilder().groupByResults_; }
      }
      public int GroupByResultsCount {
        get { return result.GroupByResultsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult GetGroupByResults(int index) {
        return result.GetGroupByResults(index);
      }
      public Builder SetGroupByResults(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByResults_[index] = value;
        return this;
      }
      public Builder SetGroupByResults(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByResults_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroupByResults(global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByResults_.Add(value);
        return this;
      }
      public Builder AddGroupByResults(global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByResults_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroupByResults(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByResult> values) {
        PrepareBuilder();
        result.groupByResults_.Add(values);
        return this;
      }
      public Builder ClearGroupByResults() {
        PrepareBuilder();
        result.groupByResults_.Clear();
        return this;
      }
    }
    static GroupBysResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByHistogramItem : pb::GeneratedMessage<GroupByHistogramItem, GroupByHistogramItem.Builder> {
    private GroupByHistogramItem() { }
    private static readonly GroupByHistogramItem defaultInstance = new GroupByHistogramItem().MakeReadOnly();
    private static readonly string[] _groupByHistogramItemFieldNames = new string[] { "key", "sub_aggs_result", "sub_group_bys_result", "value" };
    private static readonly uint[] _groupByHistogramItemFieldTags = new uint[] { 10, 26, 34, 16 };
    public static GroupByHistogramItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByHistogramItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByHistogramItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByHistogramItem, GroupByHistogramItem.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramItem__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private pb::ByteString key_ = pb::ByteString.Empty;
    public bool HasKey {
      get { return hasKey; }
    }
    public pb::ByteString Key {
      get { return key_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private long value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public long Value {
      get { return value_; }
    }
    
    public const int SubAggsResultFieldNumber = 3;
    private bool hasSubAggsResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult subAggsResult_;
    public bool HasSubAggsResult {
      get { return hasSubAggsResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
      get { return subAggsResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance; }
    }
    
    public const int SubGroupBysResultFieldNumber = 4;
    private bool hasSubGroupBysResult;
    private global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult subGroupBysResult_;
    public bool HasSubGroupBysResult {
      get { return hasSubGroupBysResult; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
      get { return subGroupBysResult_ ?? global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByHistogramItemFieldNames;
      if (hasKey) {
        output.WriteBytes(1, field_names[0], Key);
      }
      if (hasValue) {
        output.WriteInt64(2, field_names[3], Value);
      }
      if (hasSubAggsResult) {
        output.WriteMessage(3, field_names[1], SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        output.WriteMessage(4, field_names[2], SubGroupBysResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKey) {
        size += pb::CodedOutputStream.ComputeBytesSize(1, Key);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, Value);
      }
      if (hasSubAggsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, SubAggsResult);
      }
      if (hasSubGroupBysResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SubGroupBysResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByHistogramItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByHistogramItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogramItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByHistogramItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogramItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByHistogramItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogramItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByHistogramItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByHistogramItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByHistogramItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByHistogramItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByHistogramItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByHistogramItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByHistogramItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByHistogramItem result;
      
      private GroupByHistogramItem PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByHistogramItem original = result;
          result = new GroupByHistogramItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByHistogramItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.Descriptor; }
      }
      
      public override GroupByHistogramItem DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.DefaultInstance; }
      }
      
      public override GroupByHistogramItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByHistogramItem) {
          return MergeFrom((GroupByHistogramItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByHistogramItem other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.HasSubAggsResult) {
          MergeSubAggsResult(other.SubAggsResult);
        }
        if (other.HasSubGroupBysResult) {
          MergeSubGroupBysResult(other.SubGroupBysResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByHistogramItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByHistogramItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadBytes(ref result.key_);
              break;
            }
            case 16: {
              result.hasValue = input.ReadInt64(ref result.value_);
              break;
            }
            case 26: {
              global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder();
              if (result.hasSubAggsResult) {
                subBuilder.MergeFrom(SubAggsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubAggsResult = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder subBuilder = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder();
              if (result.hasSubGroupBysResult) {
                subBuilder.MergeFrom(SubGroupBysResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SubGroupBysResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public pb::ByteString Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public long Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(long value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }
      
      public bool HasSubAggsResult {
       get { return result.hasSubAggsResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult SubAggsResult {
        get { return result.SubAggsResult; }
        set { SetSubAggsResult(value); }
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = value;
        return this;
      }
      public Builder SetSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubAggsResult = true;
        result.subAggsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubAggsResult(global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubAggsResult &&
            result.subAggsResult_ != global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.DefaultInstance) {
            result.subAggsResult_ = global::com.alicloud.openservices.tablestore.core.protocol.AggregationsResult.CreateBuilder(result.subAggsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subAggsResult_ = value;
        }
        result.hasSubAggsResult = true;
        return this;
      }
      public Builder ClearSubAggsResult() {
        PrepareBuilder();
        result.hasSubAggsResult = false;
        result.subAggsResult_ = null;
        return this;
      }
      
      public bool HasSubGroupBysResult {
       get { return result.hasSubGroupBysResult; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult SubGroupBysResult {
        get { return result.SubGroupBysResult; }
        set { SetSubGroupBysResult(value); }
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = value;
        return this;
      }
      public Builder SetSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSubGroupBysResult = true;
        result.subGroupBysResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSubGroupBysResult(global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSubGroupBysResult &&
            result.subGroupBysResult_ != global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.DefaultInstance) {
            result.subGroupBysResult_ = global::com.alicloud.openservices.tablestore.core.protocol.GroupBysResult.CreateBuilder(result.subGroupBysResult_).MergeFrom(value).BuildPartial();
        } else {
          result.subGroupBysResult_ = value;
        }
        result.hasSubGroupBysResult = true;
        return this;
      }
      public Builder ClearSubGroupBysResult() {
        PrepareBuilder();
        result.hasSubGroupBysResult = false;
        result.subGroupBysResult_ = null;
        return this;
      }
    }
    static GroupByHistogramItem() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GroupByHistogramResult : pb::GeneratedMessage<GroupByHistogramResult, GroupByHistogramResult.Builder> {
    private GroupByHistogramResult() { }
    private static readonly GroupByHistogramResult defaultInstance = new GroupByHistogramResult().MakeReadOnly();
    private static readonly string[] _groupByHistogramResultFieldNames = new string[] { "group_by_histogra_items" };
    private static readonly uint[] _groupByHistogramResultFieldTags = new uint[] { 10 };
    public static GroupByHistogramResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GroupByHistogramResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GroupByHistogramResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GroupByHistogramResult, GroupByHistogramResult.Builder> InternalFieldAccessors {
      get { return global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.internal__static_com_alicloud_openservices_tablestore_core_protocol_GroupByHistogramResult__FieldAccessorTable; }
    }
    
    public const int GroupByHistograItemsFieldNumber = 1;
    private pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem> groupByHistograItems_ = new pbc::PopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem>();
    public scg::IList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem> GroupByHistograItemsList {
      get { return groupByHistograItems_; }
    }
    public int GroupByHistograItemsCount {
      get { return groupByHistograItems_.Count; }
    }
    public global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem GetGroupByHistograItems(int index) {
      return groupByHistograItems_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _groupByHistogramResultFieldNames;
      if (groupByHistograItems_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], groupByHistograItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem element in GroupByHistograItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GroupByHistogramResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByHistogramResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogramResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GroupByHistogramResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogramResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByHistogramResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GroupByHistogramResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GroupByHistogramResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GroupByHistogramResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GroupByHistogramResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GroupByHistogramResult MakeReadOnly() {
      groupByHistograItems_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GroupByHistogramResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GroupByHistogramResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GroupByHistogramResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GroupByHistogramResult result;
      
      private GroupByHistogramResult PrepareBuilder() {
        if (resultIsReadOnly) {
          GroupByHistogramResult original = result;
          result = new GroupByHistogramResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GroupByHistogramResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramResult.Descriptor; }
      }
      
      public override GroupByHistogramResult DefaultInstanceForType {
        get { return global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramResult.DefaultInstance; }
      }
      
      public override GroupByHistogramResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GroupByHistogramResult) {
          return MergeFrom((GroupByHistogramResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GroupByHistogramResult other) {
        if (other == global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.groupByHistograItems_.Count != 0) {
          result.groupByHistograItems_.Add(other.groupByHistograItems_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_groupByHistogramResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _groupByHistogramResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.groupByHistograItems_, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem> GroupByHistograItemsList {
        get { return PrepareBuilder().groupByHistograItems_; }
      }
      public int GroupByHistograItemsCount {
        get { return result.GroupByHistograItemsCount; }
      }
      public global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem GetGroupByHistograItems(int index) {
        return result.GetGroupByHistograItems(index);
      }
      public Builder SetGroupByHistograItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByHistograItems_[index] = value;
        return this;
      }
      public Builder SetGroupByHistograItems(int index, global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByHistograItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGroupByHistograItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.groupByHistograItems_.Add(value);
        return this;
      }
      public Builder AddGroupByHistograItems(global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.groupByHistograItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGroupByHistograItems(scg::IEnumerable<global::com.alicloud.openservices.tablestore.core.protocol.GroupByHistogramItem> values) {
        PrepareBuilder();
        result.groupByHistograItems_.Add(values);
        return this;
      }
      public Builder ClearGroupByHistograItems() {
        PrepareBuilder();
        result.groupByHistograItems_.Clear();
        return this;
      }
    }
    static GroupByHistogramResult() {
      object.ReferenceEquals(global::com.alicloud.openservices.tablestore.core.protocol.TablestoreSearch.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
